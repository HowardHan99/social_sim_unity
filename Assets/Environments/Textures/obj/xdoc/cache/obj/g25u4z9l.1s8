id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: IVI
  commentId: N:IVI
  language: CSharp
  name:
    CSharp: IVI
    VB: IVI
  nameWithType:
    CSharp: IVI
    VB: IVI
  qualifiedName:
    CSharp: IVI
    VB: IVI
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: IVI.NewSFAvatarTarget
    commentId: T:IVI.NewSFAvatarTarget
    language: CSharp
    name:
      CSharp: NewSFAvatarTarget
      VB: NewSFAvatarTarget
    nameWithType:
      CSharp: NewSFAvatarTarget
      VB: NewSFAvatarTarget
    qualifiedName:
      CSharp: IVI.NewSFAvatarTarget
      VB: IVI.NewSFAvatarTarget
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: NewSFAvatarTarget
      path: ''
      startLine: 1922
    syntax:
      content:
        CSharp: 'public class NewSFAvatarTarget : INavigable'
        VB: >-
          Public Class NewSFAvatarTarget

              Inherits INavigable
    inheritance:
    - System.Object
    - SEAN.Situations.Trajectory.TrackedAgent
    - IVI.INavigable
    inheritedMembers:
    - IVI.INavigable.destNode
    - IVI.INavigable.destPos
    - IVI.INavigable.navigating
    - IVI.INavigable.AgentTag
    - IVI.INavigable.Start
    - IVI.INavigable.SetSampledPosition(Vector3)
    - IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
    - SEAN.Situations.Trajectory.TrackedAgent.trajectory
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.NewSFAvatarTarget.StartNavigation
      commentId: M:IVI.NewSFAvatarTarget.StartNavigation
      language: CSharp
      name:
        CSharp: StartNavigation()
        VB: StartNavigation()
      nameWithType:
        CSharp: NewSFAvatarTarget.StartNavigation()
        VB: NewSFAvatarTarget.StartNavigation()
      qualifiedName:
        CSharp: IVI.NewSFAvatarTarget.StartNavigation()
        VB: IVI.NewSFAvatarTarget.StartNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartNavigation
        path: ''
        startLine: 1932
      syntax:
        content:
          CSharp: public override bool StartNavigation()
          VB: Public Overrides Function StartNavigation As Boolean
        return:
          type: System.Boolean
      overload: IVI.NewSFAvatarTarget.StartNavigation*
      overridden: IVI.INavigable.StartNavigation
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.NewSFAvatarTarget.StopNavigation
      commentId: M:IVI.NewSFAvatarTarget.StopNavigation
      language: CSharp
      name:
        CSharp: StopNavigation()
        VB: StopNavigation()
      nameWithType:
        CSharp: NewSFAvatarTarget.StopNavigation()
        VB: NewSFAvatarTarget.StopNavigation()
      qualifiedName:
        CSharp: IVI.NewSFAvatarTarget.StopNavigation()
        VB: IVI.NewSFAvatarTarget.StopNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopNavigation
        path: ''
        startLine: 1939
      syntax:
        content:
          CSharp: public override void StopNavigation()
          VB: Public Overrides Sub StopNavigation
      overload: IVI.NewSFAvatarTarget.StopNavigation*
      overridden: IVI.INavigable.StopNavigation
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.NewSFAvatarTarget.StartGroup(IVI.GroupNavNode)
      commentId: M:IVI.NewSFAvatarTarget.StartGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StartGroup(GroupNavNode)
        VB: StartGroup(GroupNavNode)
      nameWithType:
        CSharp: NewSFAvatarTarget.StartGroup(GroupNavNode)
        VB: NewSFAvatarTarget.StartGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.NewSFAvatarTarget.StartGroup(IVI.GroupNavNode)
        VB: IVI.NewSFAvatarTarget.StartGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartGroup
        path: ''
        startLine: 1944
      syntax:
        content:
          CSharp: public override void StartGroup(GroupNavNode group)
          VB: Public Overrides Sub StartGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.NewSFAvatarTarget.StartGroup*
      overridden: IVI.INavigable.StartGroup(IVI.GroupNavNode)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.NewSFAvatarTarget.StopGroup(IVI.GroupNavNode)
      commentId: M:IVI.NewSFAvatarTarget.StopGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StopGroup(GroupNavNode)
        VB: StopGroup(GroupNavNode)
      nameWithType:
        CSharp: NewSFAvatarTarget.StopGroup(GroupNavNode)
        VB: NewSFAvatarTarget.StopGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.NewSFAvatarTarget.StopGroup(IVI.GroupNavNode)
        VB: IVI.NewSFAvatarTarget.StopGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopGroup
        path: ''
        startLine: 1949
      syntax:
        content:
          CSharp: public override void StopGroup(GroupNavNode group)
          VB: Public Overrides Sub StopGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.NewSFAvatarTarget.StopGroup*
      overridden: IVI.INavigable.StopGroup(IVI.GroupNavNode)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVI.SFAvatar
    commentId: T:IVI.SFAvatar
    language: CSharp
    name:
      CSharp: SFAvatar
      VB: SFAvatar
    nameWithType:
      CSharp: SFAvatar
      VB: SFAvatar
    qualifiedName:
      CSharp: IVI.SFAvatar
      VB: IVI.SFAvatar
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: SFAvatar
      path: ''
      startLine: 2147
    syntax:
      content:
        CSharp: 'public class SFAvatar : MonoBehaviour'
        VB: >-
          Public Class SFAvatar

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.SFAvatar.RADIUS
      commentId: F:IVI.SFAvatar.RADIUS
      language: CSharp
      name:
        CSharp: RADIUS
        VB: RADIUS
      nameWithType:
        CSharp: SFAvatar.RADIUS
        VB: SFAvatar.RADIUS
      qualifiedName:
        CSharp: IVI.SFAvatar.RADIUS
        VB: IVI.SFAvatar.RADIUS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: RADIUS
        path: ''
        startLine: 2152
      syntax:
        content:
          CSharp: public const float RADIUS = 0.2F
          VB: Public Const RADIUS As Single = 0.2F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.SFAvatar.agressiveness
      commentId: F:IVI.SFAvatar.agressiveness
      language: CSharp
      name:
        CSharp: agressiveness
        VB: agressiveness
      nameWithType:
        CSharp: SFAvatar.agressiveness
        VB: SFAvatar.agressiveness
      qualifiedName:
        CSharp: IVI.SFAvatar.agressiveness
        VB: IVI.SFAvatar.agressiveness
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: agressiveness
        path: ''
        startLine: 2185
      syntax:
        content:
          CSharp: public int agressiveness
          VB: Public agressiveness As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.SFAvatar.GO2Agent
      commentId: F:IVI.SFAvatar.GO2Agent
      language: CSharp
      name:
        CSharp: GO2Agent
        VB: GO2Agent
      nameWithType:
        CSharp: SFAvatar.GO2Agent
        VB: SFAvatar.GO2Agent
      qualifiedName:
        CSharp: IVI.SFAvatar.GO2Agent
        VB: IVI.SFAvatar.GO2Agent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: GO2Agent
        path: ''
        startLine: 2188
      syntax:
        content:
          CSharp: public static Dictionary<GameObject, SFAvatar> GO2Agent
          VB: Public Shared GO2Agent As Dictionary(Of GameObject, SFAvatar)
        return:
          type: System.Collections.Generic.Dictionary{GameObject,IVI.SFAvatar}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IVI.SFAvatar.StopAnimator
      commentId: M:IVI.SFAvatar.StopAnimator
      language: CSharp
      name:
        CSharp: StopAnimator()
        VB: StopAnimator()
      nameWithType:
        CSharp: SFAvatar.StopAnimator()
        VB: SFAvatar.StopAnimator()
      qualifiedName:
        CSharp: IVI.SFAvatar.StopAnimator()
        VB: IVI.SFAvatar.StopAnimator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopAnimator
        path: ''
        startLine: 2294
      syntax:
        content:
          CSharp: public void StopAnimator()
          VB: Public Sub StopAnimator
      overload: IVI.SFAvatar.StopAnimator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.SFAvatar.ComputePath(Vector3)
      commentId: M:IVI.SFAvatar.ComputePath(Vector3)
      language: CSharp
      name:
        CSharp: ComputePath(Vector3)
        VB: ComputePath(Vector3)
      nameWithType:
        CSharp: SFAvatar.ComputePath(Vector3)
        VB: SFAvatar.ComputePath(Vector3)
      qualifiedName:
        CSharp: IVI.SFAvatar.ComputePath(Vector3)
        VB: IVI.SFAvatar.ComputePath(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: ComputePath
        path: ''
        startLine: 2302
      syntax:
        content:
          CSharp: public void ComputePath(Vector3 destination)
          VB: Public Sub ComputePath(destination As Vector3)
        parameters:
        - id: destination
          type: Global.Vector3
      overload: IVI.SFAvatar.ComputePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.SFAvatarTarget
    commentId: T:IVI.SFAvatarTarget
    language: CSharp
    name:
      CSharp: SFAvatarTarget
      VB: SFAvatarTarget
    nameWithType:
      CSharp: SFAvatarTarget
      VB: SFAvatarTarget
    qualifiedName:
      CSharp: IVI.SFAvatarTarget
      VB: IVI.SFAvatarTarget
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: SFAvatarTarget
      path: ''
      startLine: 2578
    syntax:
      content:
        CSharp: 'public class SFAvatarTarget : INavigable'
        VB: >-
          Public Class SFAvatarTarget

              Inherits INavigable
    inheritance:
    - System.Object
    - SEAN.Situations.Trajectory.TrackedAgent
    - IVI.INavigable
    inheritedMembers:
    - IVI.INavigable.destNode
    - IVI.INavigable.destPos
    - IVI.INavigable.navigating
    - IVI.INavigable.AgentTag
    - IVI.INavigable.Start
    - IVI.INavigable.SetSampledPosition(Vector3)
    - IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
    - SEAN.Situations.Trajectory.TrackedAgent.trajectory
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.SFAvatarTarget.StartNavigation
      commentId: M:IVI.SFAvatarTarget.StartNavigation
      language: CSharp
      name:
        CSharp: StartNavigation()
        VB: StartNavigation()
      nameWithType:
        CSharp: SFAvatarTarget.StartNavigation()
        VB: SFAvatarTarget.StartNavigation()
      qualifiedName:
        CSharp: IVI.SFAvatarTarget.StartNavigation()
        VB: IVI.SFAvatarTarget.StartNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartNavigation
        path: ''
        startLine: 2589
      syntax:
        content:
          CSharp: public override bool StartNavigation()
          VB: Public Overrides Function StartNavigation As Boolean
        return:
          type: System.Boolean
      overload: IVI.SFAvatarTarget.StartNavigation*
      overridden: IVI.INavigable.StartNavigation
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.SFAvatarTarget.StopNavigation
      commentId: M:IVI.SFAvatarTarget.StopNavigation
      language: CSharp
      name:
        CSharp: StopNavigation()
        VB: StopNavigation()
      nameWithType:
        CSharp: SFAvatarTarget.StopNavigation()
        VB: SFAvatarTarget.StopNavigation()
      qualifiedName:
        CSharp: IVI.SFAvatarTarget.StopNavigation()
        VB: IVI.SFAvatarTarget.StopNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopNavigation
        path: ''
        startLine: 2595
      syntax:
        content:
          CSharp: public override void StopNavigation()
          VB: Public Overrides Sub StopNavigation
      overload: IVI.SFAvatarTarget.StopNavigation*
      overridden: IVI.INavigable.StopNavigation
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.SFAvatarTarget.StartGroup(IVI.GroupNavNode)
      commentId: M:IVI.SFAvatarTarget.StartGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StartGroup(GroupNavNode)
        VB: StartGroup(GroupNavNode)
      nameWithType:
        CSharp: SFAvatarTarget.StartGroup(GroupNavNode)
        VB: SFAvatarTarget.StartGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.SFAvatarTarget.StartGroup(IVI.GroupNavNode)
        VB: IVI.SFAvatarTarget.StartGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartGroup
        path: ''
        startLine: 2600
      syntax:
        content:
          CSharp: public override void StartGroup(GroupNavNode group)
          VB: Public Overrides Sub StartGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.SFAvatarTarget.StartGroup*
      overridden: IVI.INavigable.StartGroup(IVI.GroupNavNode)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.SFAvatarTarget.StopGroup(IVI.GroupNavNode)
      commentId: M:IVI.SFAvatarTarget.StopGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StopGroup(GroupNavNode)
        VB: StopGroup(GroupNavNode)
      nameWithType:
        CSharp: SFAvatarTarget.StopGroup(GroupNavNode)
        VB: SFAvatarTarget.StopGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.SFAvatarTarget.StopGroup(IVI.GroupNavNode)
        VB: IVI.SFAvatarTarget.StopGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopGroup
        path: ''
        startLine: 2605
      syntax:
        content:
          CSharp: public override void StopGroup(GroupNavNode group)
          VB: Public Overrides Sub StopGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.SFAvatarTarget.StopGroup*
      overridden: IVI.INavigable.StopGroup(IVI.GroupNavNode)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVI.NewSFAvatar
    commentId: T:IVI.NewSFAvatar
    language: CSharp
    name:
      CSharp: NewSFAvatar
      VB: NewSFAvatar
    nameWithType:
      CSharp: NewSFAvatar
      VB: NewSFAvatar
    qualifiedName:
      CSharp: IVI.NewSFAvatar
      VB: IVI.NewSFAvatar
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: NewSFAvatar
      path: ''
      startLine: 2619
    syntax:
      content:
        CSharp: 'public class NewSFAvatar : MonoBehaviour'
        VB: >-
          Public Class NewSFAvatar

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.NewSFAvatar.RADIUS
      commentId: F:IVI.NewSFAvatar.RADIUS
      language: CSharp
      name:
        CSharp: RADIUS
        VB: RADIUS
      nameWithType:
        CSharp: NewSFAvatar.RADIUS
        VB: NewSFAvatar.RADIUS
      qualifiedName:
        CSharp: IVI.NewSFAvatar.RADIUS
        VB: IVI.NewSFAvatar.RADIUS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: RADIUS
        path: ''
        startLine: 2624
      syntax:
        content:
          CSharp: public const float RADIUS = 0.2F
          VB: Public Const RADIUS As Single = 0.2F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NewSFAvatar.GO2Agent
      commentId: F:IVI.NewSFAvatar.GO2Agent
      language: CSharp
      name:
        CSharp: GO2Agent
        VB: GO2Agent
      nameWithType:
        CSharp: NewSFAvatar.GO2Agent
        VB: NewSFAvatar.GO2Agent
      qualifiedName:
        CSharp: IVI.NewSFAvatar.GO2Agent
        VB: IVI.NewSFAvatar.GO2Agent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: GO2Agent
        path: ''
        startLine: 2654
      syntax:
        content:
          CSharp: public static Dictionary<GameObject, NewSFAvatar> GO2Agent
          VB: Public Shared GO2Agent As Dictionary(Of GameObject, NewSFAvatar)
        return:
          type: System.Collections.Generic.Dictionary{GameObject,IVI.NewSFAvatar}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IVI.NewSFAvatar.StopAnimator
      commentId: M:IVI.NewSFAvatar.StopAnimator
      language: CSharp
      name:
        CSharp: StopAnimator()
        VB: StopAnimator()
      nameWithType:
        CSharp: NewSFAvatar.StopAnimator()
        VB: NewSFAvatar.StopAnimator()
      qualifiedName:
        CSharp: IVI.NewSFAvatar.StopAnimator()
        VB: IVI.NewSFAvatar.StopAnimator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopAnimator
        path: ''
        startLine: 2764
      syntax:
        content:
          CSharp: public void StopAnimator()
          VB: Public Sub StopAnimator
      overload: IVI.NewSFAvatar.StopAnimator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NewSFAvatar.ComputePath(Vector3)
      commentId: M:IVI.NewSFAvatar.ComputePath(Vector3)
      language: CSharp
      name:
        CSharp: ComputePath(Vector3)
        VB: ComputePath(Vector3)
      nameWithType:
        CSharp: NewSFAvatar.ComputePath(Vector3)
        VB: NewSFAvatar.ComputePath(Vector3)
      qualifiedName:
        CSharp: IVI.NewSFAvatar.ComputePath(Vector3)
        VB: IVI.NewSFAvatar.ComputePath(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: ComputePath
        path: ''
        startLine: 2772
      syntax:
        content:
          CSharp: public void ComputePath(Vector3 destination)
          VB: Public Sub ComputePath(destination As Vector3)
        parameters:
        - id: destination
          type: Global.Vector3
      overload: IVI.NewSFAvatar.ComputePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.NavNode
    commentId: T:IVI.NavNode
    language: CSharp
    name:
      CSharp: NavNode
      VB: NavNode
    nameWithType:
      CSharp: NavNode
      VB: NavNode
    qualifiedName:
      CSharp: IVI.NavNode
      VB: IVI.NavNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: NavNode
      path: ''
      startLine: 3053
    syntax:
      content:
        CSharp: 'public class NavNode : MonoBehaviour'
        VB: >-
          Public Class NavNode

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.NavNode.createNode
      commentId: F:IVI.NavNode.createNode
      language: CSharp
      name:
        CSharp: createNode
        VB: createNode
      nameWithType:
        CSharp: NavNode.createNode
        VB: NavNode.createNode
      qualifiedName:
        CSharp: IVI.NavNode.createNode
        VB: IVI.NavNode.createNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: createNode
        path: ''
        startLine: 3056
      syntax:
        content:
          CSharp: public bool createNode
          VB: Public createNode As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.createGroupNode
      commentId: F:IVI.NavNode.createGroupNode
      language: CSharp
      name:
        CSharp: createGroupNode
        VB: createGroupNode
      nameWithType:
        CSharp: NavNode.createGroupNode
        VB: NavNode.createGroupNode
      qualifiedName:
        CSharp: IVI.NavNode.createGroupNode
        VB: IVI.NavNode.createGroupNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: createGroupNode
        path: ''
        startLine: 3057
      syntax:
        content:
          CSharp: public bool createGroupNode
          VB: Public createGroupNode As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.createConnection
      commentId: F:IVI.NavNode.createConnection
      language: CSharp
      name:
        CSharp: createConnection
        VB: createConnection
      nameWithType:
        CSharp: NavNode.createConnection
        VB: NavNode.createConnection
      qualifiedName:
        CSharp: IVI.NavNode.createConnection
        VB: IVI.NavNode.createConnection
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: createConnection
        path: ''
        startLine: 3058
      syntax:
        content:
          CSharp: public GameObject createConnection
          VB: Public createConnection As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.radius
      commentId: F:IVI.NavNode.radius
      language: CSharp
      name:
        CSharp: radius
        VB: radius
      nameWithType:
        CSharp: NavNode.radius
        VB: NavNode.radius
      qualifiedName:
        CSharp: IVI.NavNode.radius
        VB: IVI.NavNode.radius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: radius
        path: ''
        startLine: 3059
      syntax:
        content:
          CSharp: public float radius
          VB: Public radius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.spawnCount
      commentId: F:IVI.NavNode.spawnCount
      language: CSharp
      name:
        CSharp: spawnCount
        VB: spawnCount
      nameWithType:
        CSharp: NavNode.spawnCount
        VB: NavNode.spawnCount
      qualifiedName:
        CSharp: IVI.NavNode.spawnCount
        VB: IVI.NavNode.spawnCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: spawnCount
        path: ''
        startLine: 3060
      syntax:
        content:
          CSharp: public int spawnCount
          VB: Public spawnCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.render
      commentId: F:IVI.NavNode.render
      language: CSharp
      name:
        CSharp: render
        VB: render
      nameWithType:
        CSharp: NavNode.render
        VB: NavNode.render
      qualifiedName:
        CSharp: IVI.NavNode.render
        VB: IVI.NavNode.render
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: render
        path: ''
        startLine: 3064
      syntax:
        content:
          CSharp: public MeshRenderer render
          VB: Public render As MeshRenderer
        return:
          type: Global.MeshRenderer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.Start
      commentId: M:IVI.NavNode.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: NavNode.Start()
        VB: NavNode.Start()
      qualifiedName:
        CSharp: IVI.NavNode.Start()
        VB: IVI.NavNode.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: Start
        path: ''
        startLine: 3066
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: IVI.NavNode.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.Update
      commentId: M:IVI.NavNode.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: NavNode.Update()
        VB: NavNode.Update()
      qualifiedName:
        CSharp: IVI.NavNode.Update()
        VB: IVI.NavNode.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: Update
        path: ''
        startLine: 3071
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: IVI.NavNode.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.OnDestroy
      commentId: M:IVI.NavNode.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: NavNode.OnDestroy()
        VB: NavNode.OnDestroy()
      qualifiedName:
        CSharp: IVI.NavNode.OnDestroy()
        VB: IVI.NavNode.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: OnDestroy
        path: ''
        startLine: 3147
      syntax:
        content:
          CSharp: public void OnDestroy()
          VB: Public Sub OnDestroy
      overload: IVI.NavNode.OnDestroy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavNode.GetNeighbors
      commentId: M:IVI.NavNode.GetNeighbors
      language: CSharp
      name:
        CSharp: GetNeighbors()
        VB: GetNeighbors()
      nameWithType:
        CSharp: NavNode.GetNeighbors()
        VB: NavNode.GetNeighbors()
      qualifiedName:
        CSharp: IVI.NavNode.GetNeighbors()
        VB: IVI.NavNode.GetNeighbors()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: GetNeighbors
        path: ''
        startLine: 3160
      syntax:
        content:
          CSharp: public Dictionary<NavNode, NavEdge> GetNeighbors()
          VB: Public Function GetNeighbors As Dictionary(Of NavNode, NavEdge)
        return:
          type: System.Collections.Generic.Dictionary{IVI.NavNode,IVI.NavEdge}
      overload: IVI.NavNode.GetNeighbors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.NavManager
    commentId: T:IVI.NavManager
    language: CSharp
    name:
      CSharp: NavManager
      VB: NavManager
    nameWithType:
      CSharp: NavManager
      VB: NavManager
    qualifiedName:
      CSharp: IVI.NavManager
      VB: IVI.NavManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: NavManager
      path: ''
      startLine: 3176
    syntax:
      content:
        CSharp: 'public class NavManager : MonoBehaviour'
        VB: >-
          Public Class NavManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.NavManager.inst
      commentId: F:IVI.NavManager.inst
      language: CSharp
      name:
        CSharp: inst
        VB: inst
      nameWithType:
        CSharp: NavManager.inst
        VB: NavManager.inst
      qualifiedName:
        CSharp: IVI.NavManager.inst
        VB: IVI.NavManager.inst
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: inst
        path: ''
        startLine: 3179
      syntax:
        content:
          CSharp: public static NavManager inst
          VB: Public Shared inst As NavManager
        return:
          type: IVI.NavManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IVI.NavManager.allNavNodes
      commentId: F:IVI.NavManager.allNavNodes
      language: CSharp
      name:
        CSharp: allNavNodes
        VB: allNavNodes
      nameWithType:
        CSharp: NavManager.allNavNodes
        VB: NavManager.allNavNodes
      qualifiedName:
        CSharp: IVI.NavManager.allNavNodes
        VB: IVI.NavManager.allNavNodes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: allNavNodes
        path: ''
        startLine: 3180
      syntax:
        content:
          CSharp: public NavNode[] allNavNodes
          VB: Public allNavNodes As NavNode()
        return:
          type: IVI.NavNode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.allGroupNodes
      commentId: F:IVI.NavManager.allGroupNodes
      language: CSharp
      name:
        CSharp: allGroupNodes
        VB: allGroupNodes
      nameWithType:
        CSharp: NavManager.allGroupNodes
        VB: NavManager.allGroupNodes
      qualifiedName:
        CSharp: IVI.NavManager.allGroupNodes
        VB: IVI.NavManager.allGroupNodes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: allGroupNodes
        path: ''
        startLine: 3181
      syntax:
        content:
          CSharp: public GroupNavNode[] allGroupNodes
          VB: Public allGroupNodes As GroupNavNode()
        return:
          type: IVI.GroupNavNode[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.allEdges
      commentId: F:IVI.NavManager.allEdges
      language: CSharp
      name:
        CSharp: allEdges
        VB: allEdges
      nameWithType:
        CSharp: NavManager.allEdges
        VB: NavManager.allEdges
      qualifiedName:
        CSharp: IVI.NavManager.allEdges
        VB: IVI.NavManager.allEdges
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: allEdges
        path: ''
        startLine: 3182
      syntax:
        content:
          CSharp: public NavEdge[] allEdges
          VB: Public allEdges As NavEdge()
        return:
          type: IVI.NavEdge[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.allAgents
      commentId: F:IVI.NavManager.allAgents
      language: CSharp
      name:
        CSharp: allAgents
        VB: allAgents
      nameWithType:
        CSharp: NavManager.allAgents
        VB: NavManager.allAgents
      qualifiedName:
        CSharp: IVI.NavManager.allAgents
        VB: IVI.NavManager.allAgents
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: allAgents
        path: ''
        startLine: 3183
      syntax:
        content:
          CSharp: public INavigable[] allAgents
          VB: Public allAgents As INavigable()
        return:
          type: IVI.INavigable[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.node2Index
      commentId: F:IVI.NavManager.node2Index
      language: CSharp
      name:
        CSharp: node2Index
        VB: node2Index
      nameWithType:
        CSharp: NavManager.node2Index
        VB: NavManager.node2Index
      qualifiedName:
        CSharp: IVI.NavManager.node2Index
        VB: IVI.NavManager.node2Index
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: node2Index
        path: ''
        startLine: 3184
      syntax:
        content:
          CSharp: public Dictionary<NavNode, int> node2Index
          VB: Public node2Index As Dictionary(Of NavNode, Integer)
        return:
          type: System.Collections.Generic.Dictionary{IVI.NavNode,System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.groupNode2Index
      commentId: F:IVI.NavManager.groupNode2Index
      language: CSharp
      name:
        CSharp: groupNode2Index
        VB: groupNode2Index
      nameWithType:
        CSharp: NavManager.groupNode2Index
        VB: NavManager.groupNode2Index
      qualifiedName:
        CSharp: IVI.NavManager.groupNode2Index
        VB: IVI.NavManager.groupNode2Index
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: groupNode2Index
        path: ''
        startLine: 3185
      syntax:
        content:
          CSharp: public Dictionary<NavNode, int> groupNode2Index
          VB: Public groupNode2Index As Dictionary(Of NavNode, Integer)
        return:
          type: System.Collections.Generic.Dictionary{IVI.NavNode,System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.adjMatrix
      commentId: F:IVI.NavManager.adjMatrix
      language: CSharp
      name:
        CSharp: adjMatrix
        VB: adjMatrix
      nameWithType:
        CSharp: NavManager.adjMatrix
        VB: NavManager.adjMatrix
      qualifiedName:
        CSharp: IVI.NavManager.adjMatrix
        VB: IVI.NavManager.adjMatrix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: adjMatrix
        path: ''
        startLine: 3186
      syntax:
        content:
          CSharp: public bool[, ] adjMatrix
          VB: Public adjMatrix As Boolean(,)
        return:
          type: System.Boolean[,]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.nodeOccupancy
      commentId: F:IVI.NavManager.nodeOccupancy
      language: CSharp
      name:
        CSharp: nodeOccupancy
        VB: nodeOccupancy
      nameWithType:
        CSharp: NavManager.nodeOccupancy
        VB: NavManager.nodeOccupancy
      qualifiedName:
        CSharp: IVI.NavManager.nodeOccupancy
        VB: IVI.NavManager.nodeOccupancy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: nodeOccupancy
        path: ''
        startLine: 3188
      syntax:
        content:
          CSharp: public int[] nodeOccupancy
          VB: Public nodeOccupancy As Integer()
        return:
          type: System.Int32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.edgeOccupancy
      commentId: F:IVI.NavManager.edgeOccupancy
      language: CSharp
      name:
        CSharp: edgeOccupancy
        VB: edgeOccupancy
      nameWithType:
        CSharp: NavManager.edgeOccupancy
        VB: NavManager.edgeOccupancy
      qualifiedName:
        CSharp: IVI.NavManager.edgeOccupancy
        VB: IVI.NavManager.edgeOccupancy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: edgeOccupancy
        path: ''
        startLine: 3189
      syntax:
        content:
          CSharp: public int[, ] edgeOccupancy
          VB: Public edgeOccupancy As Integer(,)
        return:
          type: System.Int32[,]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.nodeDesired
      commentId: F:IVI.NavManager.nodeDesired
      language: CSharp
      name:
        CSharp: nodeDesired
        VB: nodeDesired
      nameWithType:
        CSharp: NavManager.nodeDesired
        VB: NavManager.nodeDesired
      qualifiedName:
        CSharp: IVI.NavManager.nodeDesired
        VB: IVI.NavManager.nodeDesired
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: nodeDesired
        path: ''
        startLine: 3190
      syntax:
        content:
          CSharp: public int[] nodeDesired
          VB: Public nodeDesired As Integer()
        return:
          type: System.Int32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.edgeDesired
      commentId: F:IVI.NavManager.edgeDesired
      language: CSharp
      name:
        CSharp: edgeDesired
        VB: edgeDesired
      nameWithType:
        CSharp: NavManager.edgeDesired
        VB: NavManager.edgeDesired
      qualifiedName:
        CSharp: IVI.NavManager.edgeDesired
        VB: IVI.NavManager.edgeDesired
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: edgeDesired
        path: ''
        startLine: 3191
      syntax:
        content:
          CSharp: public int[, ] edgeDesired
          VB: Public edgeDesired As Integer(,)
        return:
          type: System.Int32[,]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.nodeDiff
      commentId: F:IVI.NavManager.nodeDiff
      language: CSharp
      name:
        CSharp: nodeDiff
        VB: nodeDiff
      nameWithType:
        CSharp: NavManager.nodeDiff
        VB: NavManager.nodeDiff
      qualifiedName:
        CSharp: IVI.NavManager.nodeDiff
        VB: IVI.NavManager.nodeDiff
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: nodeDiff
        path: ''
        startLine: 3192
      syntax:
        content:
          CSharp: public int[] nodeDiff
          VB: Public nodeDiff As Integer()
        return:
          type: System.Int32[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.prevAgentNode
      commentId: F:IVI.NavManager.prevAgentNode
      language: CSharp
      name:
        CSharp: prevAgentNode
        VB: prevAgentNode
      nameWithType:
        CSharp: NavManager.prevAgentNode
        VB: NavManager.prevAgentNode
      qualifiedName:
        CSharp: IVI.NavManager.prevAgentNode
        VB: IVI.NavManager.prevAgentNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: prevAgentNode
        path: ''
        startLine: 3194
      syntax:
        content:
          CSharp: public Dictionary<INavigable, NavNode> prevAgentNode
          VB: Public prevAgentNode As Dictionary(Of INavigable, NavNode)
        return:
          type: System.Collections.Generic.Dictionary{IVI.INavigable,IVI.NavNode}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.nextAgentNode
      commentId: F:IVI.NavManager.nextAgentNode
      language: CSharp
      name:
        CSharp: nextAgentNode
        VB: nextAgentNode
      nameWithType:
        CSharp: NavManager.nextAgentNode
        VB: NavManager.nextAgentNode
      qualifiedName:
        CSharp: IVI.NavManager.nextAgentNode
        VB: IVI.NavManager.nextAgentNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: nextAgentNode
        path: ''
        startLine: 3195
      syntax:
        content:
          CSharp: public Dictionary<INavigable, NavNode> nextAgentNode
          VB: Public nextAgentNode As Dictionary(Of INavigable, NavNode)
        return:
          type: System.Collections.Generic.Dictionary{IVI.INavigable,IVI.NavNode}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.nodePrefab
      commentId: F:IVI.NavManager.nodePrefab
      language: CSharp
      name:
        CSharp: nodePrefab
        VB: nodePrefab
      nameWithType:
        CSharp: NavManager.nodePrefab
        VB: NavManager.nodePrefab
      qualifiedName:
        CSharp: IVI.NavManager.nodePrefab
        VB: IVI.NavManager.nodePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: nodePrefab
        path: ''
        startLine: 3197
      syntax:
        content:
          CSharp: public GameObject nodePrefab
          VB: Public nodePrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.edgePrefab
      commentId: F:IVI.NavManager.edgePrefab
      language: CSharp
      name:
        CSharp: edgePrefab
        VB: edgePrefab
      nameWithType:
        CSharp: NavManager.edgePrefab
        VB: NavManager.edgePrefab
      qualifiedName:
        CSharp: IVI.NavManager.edgePrefab
        VB: IVI.NavManager.edgePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: edgePrefab
        path: ''
        startLine: 3198
      syntax:
        content:
          CSharp: public GameObject edgePrefab
          VB: Public edgePrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.groupNodePrefab
      commentId: F:IVI.NavManager.groupNodePrefab
      language: CSharp
      name:
        CSharp: groupNodePrefab
        VB: groupNodePrefab
      nameWithType:
        CSharp: NavManager.groupNodePrefab
        VB: NavManager.groupNodePrefab
      qualifiedName:
        CSharp: IVI.NavManager.groupNodePrefab
        VB: IVI.NavManager.groupNodePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: groupNodePrefab
        path: ''
        startLine: 3199
      syntax:
        content:
          CSharp: public GameObject groupNodePrefab
          VB: Public groupNodePrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.nodesGO
      commentId: F:IVI.NavManager.nodesGO
      language: CSharp
      name:
        CSharp: nodesGO
        VB: nodesGO
      nameWithType:
        CSharp: NavManager.nodesGO
        VB: NavManager.nodesGO
      qualifiedName:
        CSharp: IVI.NavManager.nodesGO
        VB: IVI.NavManager.nodesGO
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: nodesGO
        path: ''
        startLine: 3200
      syntax:
        content:
          CSharp: public GameObject nodesGO
          VB: Public nodesGO As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.edgesGO
      commentId: F:IVI.NavManager.edgesGO
      language: CSharp
      name:
        CSharp: edgesGO
        VB: edgesGO
      nameWithType:
        CSharp: NavManager.edgesGO
        VB: NavManager.edgesGO
      qualifiedName:
        CSharp: IVI.NavManager.edgesGO
        VB: IVI.NavManager.edgesGO
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: edgesGO
        path: ''
        startLine: 3201
      syntax:
        content:
          CSharp: public GameObject edgesGO
          VB: Public edgesGO As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.agentsGO
      commentId: F:IVI.NavManager.agentsGO
      language: CSharp
      name:
        CSharp: agentsGO
        VB: agentsGO
      nameWithType:
        CSharp: NavManager.agentsGO
        VB: NavManager.agentsGO
      qualifiedName:
        CSharp: IVI.NavManager.agentsGO
        VB: IVI.NavManager.agentsGO
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: agentsGO
        path: ''
        startLine: 3202
      syntax:
        content:
          CSharp: public GameObject agentsGO
          VB: Public agentsGO As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.NODE_RADIUS
      commentId: F:IVI.NavManager.NODE_RADIUS
      language: CSharp
      name:
        CSharp: NODE_RADIUS
        VB: NODE_RADIUS
      nameWithType:
        CSharp: NavManager.NODE_RADIUS
        VB: NavManager.NODE_RADIUS
      qualifiedName:
        CSharp: IVI.NavManager.NODE_RADIUS
        VB: IVI.NavManager.NODE_RADIUS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: NODE_RADIUS
        path: ''
        startLine: 3204
      syntax:
        content:
          CSharp: public const float NODE_RADIUS = 1F
          VB: Public Const NODE_RADIUS As Single = 1F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavManager.EDGE_HEIGHT
      commentId: F:IVI.NavManager.EDGE_HEIGHT
      language: CSharp
      name:
        CSharp: EDGE_HEIGHT
        VB: EDGE_HEIGHT
      nameWithType:
        CSharp: NavManager.EDGE_HEIGHT
        VB: NavManager.EDGE_HEIGHT
      qualifiedName:
        CSharp: IVI.NavManager.EDGE_HEIGHT
        VB: IVI.NavManager.EDGE_HEIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: EDGE_HEIGHT
        path: ''
        startLine: 3205
      syntax:
        content:
          CSharp: public const float EDGE_HEIGHT = 0.5F
          VB: Public Const EDGE_HEIGHT As Single = 0.5F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavManager.EDGE_WIDTH
      commentId: F:IVI.NavManager.EDGE_WIDTH
      language: CSharp
      name:
        CSharp: EDGE_WIDTH
        VB: EDGE_WIDTH
      nameWithType:
        CSharp: NavManager.EDGE_WIDTH
        VB: NavManager.EDGE_WIDTH
      qualifiedName:
        CSharp: IVI.NavManager.EDGE_WIDTH
        VB: IVI.NavManager.EDGE_WIDTH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: EDGE_WIDTH
        path: ''
        startLine: 3206
      syntax:
        content:
          CSharp: public const float EDGE_WIDTH = 1F
          VB: Public Const EDGE_WIDTH As Single = 1F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavManager.PATHFINDING_FREQ_IN_FRAMES
      commentId: F:IVI.NavManager.PATHFINDING_FREQ_IN_FRAMES
      language: CSharp
      name:
        CSharp: PATHFINDING_FREQ_IN_FRAMES
        VB: PATHFINDING_FREQ_IN_FRAMES
      nameWithType:
        CSharp: NavManager.PATHFINDING_FREQ_IN_FRAMES
        VB: NavManager.PATHFINDING_FREQ_IN_FRAMES
      qualifiedName:
        CSharp: IVI.NavManager.PATHFINDING_FREQ_IN_FRAMES
        VB: IVI.NavManager.PATHFINDING_FREQ_IN_FRAMES
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: PATHFINDING_FREQ_IN_FRAMES
        path: ''
        startLine: 3207
      syntax:
        content:
          CSharp: public const int PATHFINDING_FREQ_IN_FRAMES = 10
          VB: Public Const PATHFINDING_FREQ_IN_FRAMES As Integer = 10
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavManager.VISUALIZE
      commentId: F:IVI.NavManager.VISUALIZE
      language: CSharp
      name:
        CSharp: VISUALIZE
        VB: VISUALIZE
      nameWithType:
        CSharp: NavManager.VISUALIZE
        VB: NavManager.VISUALIZE
      qualifiedName:
        CSharp: IVI.NavManager.VISUALIZE
        VB: IVI.NavManager.VISUALIZE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: VISUALIZE
        path: ''
        startLine: 3208
      syntax:
        content:
          CSharp: public bool VISUALIZE
          VB: Public VISUALIZE As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.SPAWN_HEIGHT
      commentId: F:IVI.NavManager.SPAWN_HEIGHT
      language: CSharp
      name:
        CSharp: SPAWN_HEIGHT
        VB: SPAWN_HEIGHT
      nameWithType:
        CSharp: NavManager.SPAWN_HEIGHT
        VB: NavManager.SPAWN_HEIGHT
      qualifiedName:
        CSharp: IVI.NavManager.SPAWN_HEIGHT
        VB: IVI.NavManager.SPAWN_HEIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: SPAWN_HEIGHT
        path: ''
        startLine: 3209
      syntax:
        content:
          CSharp: public float SPAWN_HEIGHT
          VB: Public SPAWN_HEIGHT As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.agentPrefab
      commentId: F:IVI.NavManager.agentPrefab
      language: CSharp
      name:
        CSharp: agentPrefab
        VB: agentPrefab
      nameWithType:
        CSharp: NavManager.agentPrefab
        VB: NavManager.agentPrefab
      qualifiedName:
        CSharp: IVI.NavManager.agentPrefab
        VB: IVI.NavManager.agentPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: agentPrefab
        path: ''
        startLine: 3211
      syntax:
        content:
          CSharp: public GameObject agentPrefab
          VB: Public agentPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.elapsedFrames
      commentId: F:IVI.NavManager.elapsedFrames
      language: CSharp
      name:
        CSharp: elapsedFrames
        VB: elapsedFrames
      nameWithType:
        CSharp: NavManager.elapsedFrames
        VB: NavManager.elapsedFrames
      qualifiedName:
        CSharp: IVI.NavManager.elapsedFrames
        VB: IVI.NavManager.elapsedFrames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: elapsedFrames
        path: ''
        startLine: 3213
      syntax:
        content:
          CSharp: public static int elapsedFrames
          VB: Public Shared elapsedFrames As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IVI.NavManager.CreateNode(GameObject)
      commentId: M:IVI.NavManager.CreateNode(GameObject)
      language: CSharp
      name:
        CSharp: CreateNode(GameObject)
        VB: CreateNode(GameObject)
      nameWithType:
        CSharp: NavManager.CreateNode(GameObject)
        VB: NavManager.CreateNode(GameObject)
      qualifiedName:
        CSharp: IVI.NavManager.CreateNode(GameObject)
        VB: IVI.NavManager.CreateNode(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: CreateNode
        path: ''
        startLine: 3356
      syntax:
        content:
          CSharp: public GameObject CreateNode(GameObject example)
          VB: Public Function CreateNode(example As GameObject) As GameObject
        parameters:
        - id: example
          type: Global.GameObject
        return:
          type: Global.GameObject
      overload: IVI.NavManager.CreateNode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.CreateGroupNode(GameObject)
      commentId: M:IVI.NavManager.CreateGroupNode(GameObject)
      language: CSharp
      name:
        CSharp: CreateGroupNode(GameObject)
        VB: CreateGroupNode(GameObject)
      nameWithType:
        CSharp: NavManager.CreateGroupNode(GameObject)
        VB: NavManager.CreateGroupNode(GameObject)
      qualifiedName:
        CSharp: IVI.NavManager.CreateGroupNode(GameObject)
        VB: IVI.NavManager.CreateGroupNode(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: CreateGroupNode
        path: ''
        startLine: 3367
      syntax:
        content:
          CSharp: public GameObject CreateGroupNode(GameObject example)
          VB: Public Function CreateGroupNode(example As GameObject) As GameObject
        parameters:
        - id: example
          type: Global.GameObject
        return:
          type: Global.GameObject
      overload: IVI.NavManager.CreateGroupNode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.CreateEdge(IVI.NavNode,IVI.NavNode)
      commentId: M:IVI.NavManager.CreateEdge(IVI.NavNode,IVI.NavNode)
      language: CSharp
      name:
        CSharp: CreateEdge(NavNode, NavNode)
        VB: CreateEdge(NavNode, NavNode)
      nameWithType:
        CSharp: NavManager.CreateEdge(NavNode, NavNode)
        VB: NavManager.CreateEdge(NavNode, NavNode)
      qualifiedName:
        CSharp: IVI.NavManager.CreateEdge(IVI.NavNode, IVI.NavNode)
        VB: IVI.NavManager.CreateEdge(IVI.NavNode, IVI.NavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: CreateEdge
        path: ''
        startLine: 3378
      syntax:
        content:
          CSharp: public NavEdge CreateEdge(NavNode node1, NavNode node2)
          VB: Public Function CreateEdge(node1 As NavNode, node2 As NavNode) As NavEdge
        parameters:
        - id: node1
          type: IVI.NavNode
        - id: node2
          type: IVI.NavNode
        return:
          type: IVI.NavEdge
      overload: IVI.NavManager.CreateEdge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.UpdateDesiredOccupancy
      commentId: M:IVI.NavManager.UpdateDesiredOccupancy
      language: CSharp
      name:
        CSharp: UpdateDesiredOccupancy()
        VB: UpdateDesiredOccupancy()
      nameWithType:
        CSharp: NavManager.UpdateDesiredOccupancy()
        VB: NavManager.UpdateDesiredOccupancy()
      qualifiedName:
        CSharp: IVI.NavManager.UpdateDesiredOccupancy()
        VB: IVI.NavManager.UpdateDesiredOccupancy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: UpdateDesiredOccupancy
        path: ''
        startLine: 3391
      syntax:
        content:
          CSharp: public void UpdateDesiredOccupancy()
          VB: Public Sub UpdateDesiredOccupancy
      overload: IVI.NavManager.UpdateDesiredOccupancy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavManager.UpdateAgentGoal(IVI.INavigable)
      commentId: M:IVI.NavManager.UpdateAgentGoal(IVI.INavigable)
      language: CSharp
      name:
        CSharp: UpdateAgentGoal(INavigable)
        VB: UpdateAgentGoal(INavigable)
      nameWithType:
        CSharp: NavManager.UpdateAgentGoal(INavigable)
        VB: NavManager.UpdateAgentGoal(INavigable)
      qualifiedName:
        CSharp: IVI.NavManager.UpdateAgentGoal(IVI.INavigable)
        VB: IVI.NavManager.UpdateAgentGoal(IVI.INavigable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: UpdateAgentGoal
        path: ''
        startLine: 3443
      syntax:
        content:
          CSharp: public IEnumerator UpdateAgentGoal(INavigable agent)
          VB: Public Function UpdateAgentGoal(agent As INavigable) As IEnumerator
        parameters:
        - id: agent
          type: IVI.INavigable
        return:
          type: System.Collections.IEnumerator
      overload: IVI.NavManager.UpdateAgentGoal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.Extension
    commentId: T:IVI.Extension
    language: CSharp
    name:
      CSharp: Extension
      VB: Extension
    nameWithType:
      CSharp: Extension
      VB: Extension
    qualifiedName:
      CSharp: IVI.Extension
      VB: IVI.Extension
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: Extension
      path: ''
      startLine: 3632
    syntax:
      content:
        CSharp: public static class Extension
        VB: Public Module Extension
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: IVI.Extension.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
      commentId: M:IVI.Extension.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
      language: CSharp
      name:
        CSharp: MaxBy<TSource, TProperty>(IEnumerable<TSource>, Func<TSource, TProperty>)
        VB: MaxBy(Of TSource, TProperty)(IEnumerable(Of TSource), Func(Of TSource, TProperty))
      nameWithType:
        CSharp: Extension.MaxBy<TSource, TProperty>(IEnumerable<TSource>, Func<TSource, TProperty>)
        VB: Extension.MaxBy(Of TSource, TProperty)(IEnumerable(Of TSource), Func(Of TSource, TProperty))
      qualifiedName:
        CSharp: IVI.Extension.MaxBy<TSource, TProperty>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TProperty>)
        VB: IVI.Extension.MaxBy(Of TSource, TProperty)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TProperty))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: MaxBy
        path: ''
        startLine: 3635
      syntax:
        content:
          CSharp: public static TSource MaxBy<TSource, TProperty>(this IEnumerable<TSource> source, Func<TSource, TProperty> selector)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function MaxBy(Of TSource, TProperty)(source As IEnumerable(Of TSource), selector As Func(Of TSource, TProperty)) As TSource
        parameters:
        - id: source
          type: System.Collections.Generic.IEnumerable{{TSource}}
        - id: selector
          type: System.Func{{TSource},{TProperty}}
        typeParameters:
        - id: TSource
        - id: TProperty
        return:
          type: '{TSource}'
      overload: IVI.Extension.MaxBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: IVI.Extension.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
      commentId: M:IVI.Extension.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
      language: CSharp
      name:
        CSharp: MinBy<TSource, TProperty>(IEnumerable<TSource>, Func<TSource, TProperty>)
        VB: MinBy(Of TSource, TProperty)(IEnumerable(Of TSource), Func(Of TSource, TProperty))
      nameWithType:
        CSharp: Extension.MinBy<TSource, TProperty>(IEnumerable<TSource>, Func<TSource, TProperty>)
        VB: Extension.MinBy(Of TSource, TProperty)(IEnumerable(Of TSource), Func(Of TSource, TProperty))
      qualifiedName:
        CSharp: IVI.Extension.MinBy<TSource, TProperty>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TProperty>)
        VB: IVI.Extension.MinBy(Of TSource, TProperty)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TProperty))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: MinBy
        path: ''
        startLine: 3664
      syntax:
        content:
          CSharp: public static TSource MinBy<TSource, TProperty>(this IEnumerable<TSource> source, Func<TSource, TProperty> selector)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function MinBy(Of TSource, TProperty)(source As IEnumerable(Of TSource), selector As Func(Of TSource, TProperty)) As TSource
        parameters:
        - id: source
          type: System.Collections.Generic.IEnumerable{{TSource}}
        - id: selector
          type: System.Func{{TSource},{TProperty}}
        typeParameters:
        - id: TSource
        - id: TProperty
        return:
          type: '{TSource}'
      overload: IVI.Extension.MinBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IVI.NavEdge
    commentId: T:IVI.NavEdge
    language: CSharp
    name:
      CSharp: NavEdge
      VB: NavEdge
    nameWithType:
      CSharp: NavEdge
      VB: NavEdge
    qualifiedName:
      CSharp: IVI.NavEdge
      VB: IVI.NavEdge
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: NavEdge
      path: ''
      startLine: 3699
    syntax:
      content:
        CSharp: 'public class NavEdge : MonoBehaviour'
        VB: >-
          Public Class NavEdge

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.NavEdge.node1
      commentId: F:IVI.NavEdge.node1
      language: CSharp
      name:
        CSharp: node1
        VB: node1
      nameWithType:
        CSharp: NavEdge.node1
        VB: NavEdge.node1
      qualifiedName:
        CSharp: IVI.NavEdge.node1
        VB: IVI.NavEdge.node1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: node1
        path: ''
        startLine: 3702
      syntax:
        content:
          CSharp: public NavNode node1
          VB: Public node1 As NavNode
        return:
          type: IVI.NavNode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavEdge.node2
      commentId: F:IVI.NavEdge.node2
      language: CSharp
      name:
        CSharp: node2
        VB: node2
      nameWithType:
        CSharp: NavEdge.node2
        VB: NavEdge.node2
      qualifiedName:
        CSharp: IVI.NavEdge.node2
        VB: IVI.NavEdge.node2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: node2
        path: ''
        startLine: 3702
      syntax:
        content:
          CSharp: public NavNode node2
          VB: Public node2 As NavNode
        return:
          type: IVI.NavNode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavEdge.width
      commentId: F:IVI.NavEdge.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: NavEdge.width
        VB: NavEdge.width
      qualifiedName:
        CSharp: IVI.NavEdge.width
        VB: IVI.NavEdge.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: width
        path: ''
        startLine: 3703
      syntax:
        content:
          CSharp: public float width
          VB: Public width As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.NavEdge.constraint
      commentId: F:IVI.NavEdge.constraint
      language: CSharp
      name:
        CSharp: constraint
        VB: constraint
      nameWithType:
        CSharp: NavEdge.constraint
        VB: NavEdge.constraint
      qualifiedName:
        CSharp: IVI.NavEdge.constraint
        VB: IVI.NavEdge.constraint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: constraint
        path: ''
        startLine: 3704
      syntax:
        content:
          CSharp: public NavEdge.Constraint constraint
          VB: Public constraint As NavEdge.Constraint
        return:
          type: IVI.NavEdge.Constraint
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.NavEdge.Constraint
    commentId: T:IVI.NavEdge.Constraint
    language: CSharp
    name:
      CSharp: NavEdge.Constraint
      VB: NavEdge.Constraint
    nameWithType:
      CSharp: NavEdge.Constraint
      VB: NavEdge.Constraint
    qualifiedName:
      CSharp: IVI.NavEdge.Constraint
      VB: IVI.NavEdge.Constraint
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: Constraint
      path: ''
      startLine: 3710
    syntax:
      content:
        CSharp: public enum Constraint
        VB: Public Enum Constraint
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IVI.NavEdge.Constraint.NONE
      commentId: F:IVI.NavEdge.Constraint.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: NavEdge.Constraint.NONE
        VB: NavEdge.Constraint.NONE
      qualifiedName:
        CSharp: IVI.NavEdge.Constraint.NONE
        VB: IVI.NavEdge.Constraint.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: NONE
        path: ''
        startLine: 3712
      syntax:
        content:
          CSharp: NONE = 0
          VB: NONE = 0
        return:
          type: IVI.NavEdge.Constraint
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavEdge.Constraint.NO_FLOW
      commentId: F:IVI.NavEdge.Constraint.NO_FLOW
      language: CSharp
      name:
        CSharp: NO_FLOW
        VB: NO_FLOW
      nameWithType:
        CSharp: NavEdge.Constraint.NO_FLOW
        VB: NavEdge.Constraint.NO_FLOW
      qualifiedName:
        CSharp: IVI.NavEdge.Constraint.NO_FLOW
        VB: IVI.NavEdge.Constraint.NO_FLOW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: NO_FLOW
        path: ''
        startLine: 3713
      syntax:
        content:
          CSharp: NO_FLOW = 1
          VB: NO_FLOW = 1
        return:
          type: IVI.NavEdge.Constraint
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavEdge.Constraint.HIGH_FLOW
      commentId: F:IVI.NavEdge.Constraint.HIGH_FLOW
      language: CSharp
      name:
        CSharp: HIGH_FLOW
        VB: HIGH_FLOW
      nameWithType:
        CSharp: NavEdge.Constraint.HIGH_FLOW
        VB: NavEdge.Constraint.HIGH_FLOW
      qualifiedName:
        CSharp: IVI.NavEdge.Constraint.HIGH_FLOW
        VB: IVI.NavEdge.Constraint.HIGH_FLOW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: HIGH_FLOW
        path: ''
        startLine: 3714
      syntax:
        content:
          CSharp: HIGH_FLOW = 2
          VB: HIGH_FLOW = 2
        return:
          type: IVI.NavEdge.Constraint
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavEdge.Constraint.FORWARD_FLOW
      commentId: F:IVI.NavEdge.Constraint.FORWARD_FLOW
      language: CSharp
      name:
        CSharp: FORWARD_FLOW
        VB: FORWARD_FLOW
      nameWithType:
        CSharp: NavEdge.Constraint.FORWARD_FLOW
        VB: NavEdge.Constraint.FORWARD_FLOW
      qualifiedName:
        CSharp: IVI.NavEdge.Constraint.FORWARD_FLOW
        VB: IVI.NavEdge.Constraint.FORWARD_FLOW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: FORWARD_FLOW
        path: ''
        startLine: 3715
      syntax:
        content:
          CSharp: FORWARD_FLOW = 3
          VB: FORWARD_FLOW = 3
        return:
          type: IVI.NavEdge.Constraint
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.NavEdge.Constraint.BACKWARD_FLOW
      commentId: F:IVI.NavEdge.Constraint.BACKWARD_FLOW
      language: CSharp
      name:
        CSharp: BACKWARD_FLOW
        VB: BACKWARD_FLOW
      nameWithType:
        CSharp: NavEdge.Constraint.BACKWARD_FLOW
        VB: NavEdge.Constraint.BACKWARD_FLOW
      qualifiedName:
        CSharp: IVI.NavEdge.Constraint.BACKWARD_FLOW
        VB: IVI.NavEdge.Constraint.BACKWARD_FLOW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: BACKWARD_FLOW
        path: ''
        startLine: 3716
      syntax:
        content:
          CSharp: BACKWARD_FLOW = 4
          VB: BACKWARD_FLOW = 4
        return:
          type: IVI.NavEdge.Constraint
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IVI.INavigable
    commentId: T:IVI.INavigable
    language: CSharp
    name:
      CSharp: INavigable
      VB: INavigable
    nameWithType:
      CSharp: INavigable
      VB: INavigable
    qualifiedName:
      CSharp: IVI.INavigable
      VB: IVI.INavigable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: INavigable
      path: ''
      startLine: 3802
    syntax:
      content:
        CSharp: 'public abstract class INavigable : TrackedAgent'
        VB: >-
          Public MustInherit Class INavigable

              Inherits TrackedAgent
    inheritance:
    - System.Object
    - SEAN.Situations.Trajectory.TrackedAgent
    inheritedMembers:
    - SEAN.Situations.Trajectory.TrackedAgent.trajectory
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: IVI.INavigable.destNode
      commentId: F:IVI.INavigable.destNode
      language: CSharp
      name:
        CSharp: destNode
        VB: destNode
      nameWithType:
        CSharp: INavigable.destNode
        VB: INavigable.destNode
      qualifiedName:
        CSharp: IVI.INavigable.destNode
        VB: IVI.INavigable.destNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: destNode
        path: ''
        startLine: 3807
      syntax:
        content:
          CSharp: public NavNode destNode
          VB: Public destNode As NavNode
        return:
          type: IVI.NavNode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.INavigable.destPos
      commentId: F:IVI.INavigable.destPos
      language: CSharp
      name:
        CSharp: destPos
        VB: destPos
      nameWithType:
        CSharp: INavigable.destPos
        VB: INavigable.destPos
      qualifiedName:
        CSharp: IVI.INavigable.destPos
        VB: IVI.INavigable.destPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: destPos
        path: ''
        startLine: 3809
      syntax:
        content:
          CSharp: public Vector3 destPos
          VB: Public destPos As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.INavigable.navigating
      commentId: F:IVI.INavigable.navigating
      language: CSharp
      name:
        CSharp: navigating
        VB: navigating
      nameWithType:
        CSharp: INavigable.navigating
        VB: INavigable.navigating
      qualifiedName:
        CSharp: IVI.INavigable.navigating
        VB: IVI.INavigable.navigating
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: navigating
        path: ''
        startLine: 3811
      syntax:
        content:
          CSharp: public bool navigating
          VB: Public navigating As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.INavigable.AgentTag
      commentId: F:IVI.INavigable.AgentTag
      language: CSharp
      name:
        CSharp: AgentTag
        VB: AgentTag
      nameWithType:
        CSharp: INavigable.AgentTag
        VB: INavigable.AgentTag
      qualifiedName:
        CSharp: IVI.INavigable.AgentTag
        VB: IVI.INavigable.AgentTag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: AgentTag
        path: ''
        startLine: 3813
      syntax:
        content:
          CSharp: public static string AgentTag
          VB: Public Shared AgentTag As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IVI.INavigable.Start
      commentId: M:IVI.INavigable.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: INavigable.Start()
        VB: INavigable.Start()
      qualifiedName:
        CSharp: IVI.INavigable.Start()
        VB: IVI.INavigable.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: Start
        path: ''
        startLine: 3815
      syntax:
        content:
          CSharp: public override void Start()
          VB: Public Overrides Sub Start
      overload: IVI.INavigable.Start*
      overridden: SEAN.Situations.Trajectory.TrackedAgent.Start
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.INavigable.StartNavigation
      commentId: M:IVI.INavigable.StartNavigation
      language: CSharp
      name:
        CSharp: StartNavigation()
        VB: StartNavigation()
      nameWithType:
        CSharp: INavigable.StartNavigation()
        VB: INavigable.StartNavigation()
      qualifiedName:
        CSharp: IVI.INavigable.StartNavigation()
        VB: IVI.INavigable.StartNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartNavigation
        path: ''
        startLine: 3833
      syntax:
        content:
          CSharp: public abstract bool StartNavigation()
          VB: Public MustOverride Function StartNavigation As Boolean
        return:
          type: System.Boolean
      overload: IVI.INavigable.StartNavigation*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVI.INavigable.StopNavigation
      commentId: M:IVI.INavigable.StopNavigation
      language: CSharp
      name:
        CSharp: StopNavigation()
        VB: StopNavigation()
      nameWithType:
        CSharp: INavigable.StopNavigation()
        VB: INavigable.StopNavigation()
      qualifiedName:
        CSharp: IVI.INavigable.StopNavigation()
        VB: IVI.INavigable.StopNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopNavigation
        path: ''
        startLine: 3835
      syntax:
        content:
          CSharp: public abstract void StopNavigation()
          VB: Public MustOverride Sub StopNavigation
      overload: IVI.INavigable.StopNavigation*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVI.INavigable.StartGroup(IVI.GroupNavNode)
      commentId: M:IVI.INavigable.StartGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StartGroup(GroupNavNode)
        VB: StartGroup(GroupNavNode)
      nameWithType:
        CSharp: INavigable.StartGroup(GroupNavNode)
        VB: INavigable.StartGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.INavigable.StartGroup(IVI.GroupNavNode)
        VB: IVI.INavigable.StartGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartGroup
        path: ''
        startLine: 3837
      syntax:
        content:
          CSharp: public abstract void StartGroup(GroupNavNode group)
          VB: Public MustOverride Sub StartGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.INavigable.StartGroup*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVI.INavigable.StopGroup(IVI.GroupNavNode)
      commentId: M:IVI.INavigable.StopGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StopGroup(GroupNavNode)
        VB: StopGroup(GroupNavNode)
      nameWithType:
        CSharp: INavigable.StopGroup(GroupNavNode)
        VB: INavigable.StopGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.INavigable.StopGroup(IVI.GroupNavNode)
        VB: IVI.INavigable.StopGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopGroup
        path: ''
        startLine: 3839
      syntax:
        content:
          CSharp: public abstract void StopGroup(GroupNavNode group)
          VB: Public MustOverride Sub StopGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.INavigable.StopGroup*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVI.INavigable.SetSampledPosition(Vector3)
      commentId: M:IVI.INavigable.SetSampledPosition(Vector3)
      language: CSharp
      name:
        CSharp: SetSampledPosition(Vector3)
        VB: SetSampledPosition(Vector3)
      nameWithType:
        CSharp: INavigable.SetSampledPosition(Vector3)
        VB: INavigable.SetSampledPosition(Vector3)
      qualifiedName:
        CSharp: IVI.INavigable.SetSampledPosition(Vector3)
        VB: IVI.INavigable.SetSampledPosition(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: SetSampledPosition
        path: ''
        startLine: 3900
      syntax:
        content:
          CSharp: public void SetSampledPosition(Vector3 position)
          VB: Public Sub SetSampledPosition(position As Vector3)
        parameters:
        - id: position
          type: Global.Vector3
      overload: IVI.INavigable.SetSampledPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
      commentId: M:IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
      language: CSharp
      name:
        CSharp: InitDest(NavNode, (Single, Vector3))
        VB: InitDest(NavNode, (Single, Vector3)(Of Single, Vector3))
      nameWithType:
        CSharp: INavigable.InitDest(NavNode, (Single, Vector3))
        VB: INavigable.InitDest(NavNode, (Single, Vector3)(Of Single, Vector3))
      qualifiedName:
        CSharp: IVI.INavigable.InitDest(IVI.NavNode, System.ValueTuple<System.Single, Vector3>)
        VB: IVI.INavigable.InitDest(IVI.NavNode, System.ValueTuple(Of System.Single, Vector3))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: InitDest
        path: ''
        startLine: 3906
      syntax:
        content:
          CSharp: public void InitDest(NavNode destNode, (float, Vector3) pose)
          VB: Public Sub InitDest(destNode As NavNode, pose As(Single, Vector3)(Of Single , Vector3))
        parameters:
        - id: destNode
          type: IVI.NavNode
        - id: pose
          type: System.ValueTuple{System.Single,Vector3}
      overload: IVI.INavigable.InitDest*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.GroupNavNode
    commentId: T:IVI.GroupNavNode
    language: CSharp
    name:
      CSharp: GroupNavNode
      VB: GroupNavNode
    nameWithType:
      CSharp: GroupNavNode
      VB: GroupNavNode
    qualifiedName:
      CSharp: IVI.GroupNavNode
      VB: IVI.GroupNavNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: GroupNavNode
      path: ''
      startLine: 3971
    syntax:
      content:
        CSharp: 'public class GroupNavNode : NavNode, ITrackedGroup'
        VB: >-
          Public Class GroupNavNode

              Inherits NavNode

              Implements ITrackedGroup
    inheritance:
    - System.Object
    - IVI.NavNode
    implements:
    - SEAN.Situations.Trajectory.ITrackedGroup
    inheritedMembers:
    - IVI.NavNode.createNode
    - IVI.NavNode.createGroupNode
    - IVI.NavNode.createConnection
    - IVI.NavNode.radius
    - IVI.NavNode.spawnCount
    - IVI.NavNode.render
    - IVI.NavNode.Start
    - IVI.NavNode.Update
    - IVI.NavNode.OnDestroy
    - IVI.NavNode.GetNeighbors
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.GroupNavNode.groupSize
      commentId: F:IVI.GroupNavNode.groupSize
      language: CSharp
      name:
        CSharp: groupSize
        VB: groupSize
      nameWithType:
        CSharp: GroupNavNode.groupSize
        VB: GroupNavNode.groupSize
      qualifiedName:
        CSharp: IVI.GroupNavNode.groupSize
        VB: IVI.GroupNavNode.groupSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: groupSize
        path: ''
        startLine: 3973
      syntax:
        content:
          CSharp: public int groupSize
          VB: Public groupSize As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupNavNode.minTime
      commentId: F:IVI.GroupNavNode.minTime
      language: CSharp
      name:
        CSharp: minTime
        VB: minTime
      nameWithType:
        CSharp: GroupNavNode.minTime
        VB: GroupNavNode.minTime
      qualifiedName:
        CSharp: IVI.GroupNavNode.minTime
        VB: IVI.GroupNavNode.minTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: minTime
        path: ''
        startLine: 3974
      syntax:
        content:
          CSharp: public float minTime
          VB: Public minTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupNavNode.maxTime
      commentId: F:IVI.GroupNavNode.maxTime
      language: CSharp
      name:
        CSharp: maxTime
        VB: maxTime
      nameWithType:
        CSharp: GroupNavNode.maxTime
        VB: GroupNavNode.maxTime
      qualifiedName:
        CSharp: IVI.GroupNavNode.maxTime
        VB: IVI.GroupNavNode.maxTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: maxTime
        path: ''
        startLine: 3975
      syntax:
        content:
          CSharp: public float maxTime
          VB: Public maxTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupNavNode.MemberTag
      commentId: F:IVI.GroupNavNode.MemberTag
      language: CSharp
      name:
        CSharp: MemberTag
        VB: MemberTag
      nameWithType:
        CSharp: GroupNavNode.MemberTag
        VB: GroupNavNode.MemberTag
      qualifiedName:
        CSharp: IVI.GroupNavNode.MemberTag
        VB: IVI.GroupNavNode.MemberTag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: MemberTag
        path: ''
        startLine: 3976
      syntax:
        content:
          CSharp: public static string MemberTag
          VB: Public Shared MemberTag As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: IVI.GroupNavNode.members
      commentId: F:IVI.GroupNavNode.members
      language: CSharp
      name:
        CSharp: members
        VB: members
      nameWithType:
        CSharp: GroupNavNode.members
        VB: GroupNavNode.members
      qualifiedName:
        CSharp: IVI.GroupNavNode.members
        VB: IVI.GroupNavNode.members
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: members
        path: ''
        startLine: 3978
      syntax:
        content:
          CSharp: public Dictionary<INavigable, int> members
          VB: Public members As Dictionary(Of INavigable, Integer)
        return:
          type: System.Collections.Generic.Dictionary{IVI.INavigable,System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupNavNode.group
      commentId: P:IVI.GroupNavNode.group
      language: CSharp
      name:
        CSharp: group
        VB: group
      nameWithType:
        CSharp: GroupNavNode.group
        VB: GroupNavNode.group
      qualifiedName:
        CSharp: IVI.GroupNavNode.group
        VB: IVI.GroupNavNode.group
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: group
        path: ''
        startLine: 3982
      syntax:
        content:
          CSharp: public TrackedGroup group { get; }
          VB: Public ReadOnly Property group As TrackedGroup
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup
      overload: IVI.GroupNavNode.group*
      implements:
      - SEAN.Situations.Trajectory.ITrackedGroup.group
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVI.GroupNavNode.GetTime
      commentId: M:IVI.GroupNavNode.GetTime
      language: CSharp
      name:
        CSharp: GetTime()
        VB: GetTime()
      nameWithType:
        CSharp: GroupNavNode.GetTime()
        VB: GroupNavNode.GetTime()
      qualifiedName:
        CSharp: IVI.GroupNavNode.GetTime()
        VB: IVI.GroupNavNode.GetTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: GetTime
        path: ''
        startLine: 4061
      syntax:
        content:
          CSharp: public float GetTime()
          VB: Public Function GetTime As Single
        return:
          type: System.Single
      overload: IVI.GroupNavNode.GetTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupNavNode.CanAddMember
      commentId: P:IVI.GroupNavNode.CanAddMember
      language: CSharp
      name:
        CSharp: CanAddMember
        VB: CanAddMember
      nameWithType:
        CSharp: GroupNavNode.CanAddMember
        VB: GroupNavNode.CanAddMember
      qualifiedName:
        CSharp: IVI.GroupNavNode.CanAddMember
        VB: IVI.GroupNavNode.CanAddMember
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: CanAddMember
        path: ''
        startLine: 4066
      syntax:
        content:
          CSharp: public bool CanAddMember { get; }
          VB: Public ReadOnly Property CanAddMember As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IVI.GroupNavNode.CanAddMember*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVI.GroupNavNode.AddMember(IVI.INavigable)
      commentId: M:IVI.GroupNavNode.AddMember(IVI.INavigable)
      language: CSharp
      name:
        CSharp: AddMember(INavigable)
        VB: AddMember(INavigable)
      nameWithType:
        CSharp: GroupNavNode.AddMember(INavigable)
        VB: GroupNavNode.AddMember(INavigable)
      qualifiedName:
        CSharp: IVI.GroupNavNode.AddMember(IVI.INavigable)
        VB: IVI.GroupNavNode.AddMember(IVI.INavigable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: AddMember
        path: ''
        startLine: 4070
      syntax:
        content:
          CSharp: public (float, Vector3) AddMember(INavigable agent)
          VB: Public Function AddMember(agent As INavigable) As(Single, Vector3)(Of Single , Vector3)
        parameters:
        - id: agent
          type: IVI.INavigable
        return:
          type: System.ValueTuple{System.Single,Vector3}
      overload: IVI.GroupNavNode.AddMember*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupNavNode.RemoveMember(IVI.INavigable)
      commentId: M:IVI.GroupNavNode.RemoveMember(IVI.INavigable)
      language: CSharp
      name:
        CSharp: RemoveMember(INavigable)
        VB: RemoveMember(INavigable)
      nameWithType:
        CSharp: GroupNavNode.RemoveMember(INavigable)
        VB: GroupNavNode.RemoveMember(INavigable)
      qualifiedName:
        CSharp: IVI.GroupNavNode.RemoveMember(IVI.INavigable)
        VB: IVI.GroupNavNode.RemoveMember(IVI.INavigable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: RemoveMember
        path: ''
        startLine: 4084
      syntax:
        content:
          CSharp: public void RemoveMember(INavigable agent)
          VB: Public Sub RemoveMember(agent As INavigable)
        parameters:
        - id: agent
          type: IVI.INavigable
      overload: IVI.GroupNavNode.RemoveMember*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.DummyAgent
    commentId: T:IVI.DummyAgent
    language: CSharp
    name:
      CSharp: DummyAgent
      VB: DummyAgent
    nameWithType:
      CSharp: DummyAgent
      VB: DummyAgent
    qualifiedName:
      CSharp: IVI.DummyAgent
      VB: IVI.DummyAgent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: DummyAgent
      path: ''
      startLine: 4101
    syntax:
      content:
        CSharp: 'public class DummyAgent : INavigable'
        VB: >-
          Public Class DummyAgent

              Inherits INavigable
    inheritance:
    - System.Object
    - SEAN.Situations.Trajectory.TrackedAgent
    - IVI.INavigable
    inheritedMembers:
    - IVI.INavigable.destNode
    - IVI.INavigable.destPos
    - IVI.INavigable.navigating
    - IVI.INavigable.AgentTag
    - IVI.INavigable.Start
    - IVI.INavigable.SetSampledPosition(Vector3)
    - IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
    - SEAN.Situations.Trajectory.TrackedAgent.trajectory
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.DummyAgent.StartNavigation
      commentId: M:IVI.DummyAgent.StartNavigation
      language: CSharp
      name:
        CSharp: StartNavigation()
        VB: StartNavigation()
      nameWithType:
        CSharp: DummyAgent.StartNavigation()
        VB: DummyAgent.StartNavigation()
      qualifiedName:
        CSharp: IVI.DummyAgent.StartNavigation()
        VB: IVI.DummyAgent.StartNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartNavigation
        path: ''
        startLine: 4109
      syntax:
        content:
          CSharp: public override bool StartNavigation()
          VB: Public Overrides Function StartNavigation As Boolean
        return:
          type: System.Boolean
      overload: IVI.DummyAgent.StartNavigation*
      overridden: IVI.INavigable.StartNavigation
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.DummyAgent.StopNavigation
      commentId: M:IVI.DummyAgent.StopNavigation
      language: CSharp
      name:
        CSharp: StopNavigation()
        VB: StopNavigation()
      nameWithType:
        CSharp: DummyAgent.StopNavigation()
        VB: DummyAgent.StopNavigation()
      qualifiedName:
        CSharp: IVI.DummyAgent.StopNavigation()
        VB: IVI.DummyAgent.StopNavigation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopNavigation
        path: ''
        startLine: 4117
      syntax:
        content:
          CSharp: public override void StopNavigation()
          VB: Public Overrides Sub StopNavigation
      overload: IVI.DummyAgent.StopNavigation*
      overridden: IVI.INavigable.StopNavigation
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.DummyAgent.StartGroup(IVI.GroupNavNode)
      commentId: M:IVI.DummyAgent.StartGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StartGroup(GroupNavNode)
        VB: StartGroup(GroupNavNode)
      nameWithType:
        CSharp: DummyAgent.StartGroup(GroupNavNode)
        VB: DummyAgent.StartGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.DummyAgent.StartGroup(IVI.GroupNavNode)
        VB: IVI.DummyAgent.StartGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartGroup
        path: ''
        startLine: 4122
      syntax:
        content:
          CSharp: public override void StartGroup(GroupNavNode group)
          VB: Public Overrides Sub StartGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.DummyAgent.StartGroup*
      overridden: IVI.INavigable.StartGroup(IVI.GroupNavNode)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVI.DummyAgent.StopGroup(IVI.GroupNavNode)
      commentId: M:IVI.DummyAgent.StopGroup(IVI.GroupNavNode)
      language: CSharp
      name:
        CSharp: StopGroup(GroupNavNode)
        VB: StopGroup(GroupNavNode)
      nameWithType:
        CSharp: DummyAgent.StopGroup(GroupNavNode)
        VB: DummyAgent.StopGroup(GroupNavNode)
      qualifiedName:
        CSharp: IVI.DummyAgent.StopGroup(IVI.GroupNavNode)
        VB: IVI.DummyAgent.StopGroup(IVI.GroupNavNode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopGroup
        path: ''
        startLine: 4127
      syntax:
        content:
          CSharp: public override void StopGroup(GroupNavNode group)
          VB: Public Overrides Sub StopGroup(group As GroupNavNode)
        parameters:
        - id: group
          type: IVI.GroupNavNode
      overload: IVI.DummyAgent.StopGroup*
      overridden: IVI.INavigable.StopGroup(IVI.GroupNavNode)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVI.GroupDataLoader
    commentId: T:IVI.GroupDataLoader
    language: CSharp
    name:
      CSharp: GroupDataLoader
      VB: GroupDataLoader
    nameWithType:
      CSharp: GroupDataLoader
      VB: GroupDataLoader
    qualifiedName:
      CSharp: IVI.GroupDataLoader
      VB: IVI.GroupDataLoader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: GroupDataLoader
      path: ''
      startLine: 4142
    syntax:
      content:
        CSharp: 'public class GroupDataLoader : MonoBehaviour'
        VB: >-
          Public Class GroupDataLoader

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.GroupDataLoader.groupData
      commentId: F:IVI.GroupDataLoader.groupData
      language: CSharp
      name:
        CSharp: groupData
        VB: groupData
      nameWithType:
        CSharp: GroupDataLoader.groupData
        VB: GroupDataLoader.groupData
      qualifiedName:
        CSharp: IVI.GroupDataLoader.groupData
        VB: IVI.GroupDataLoader.groupData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: groupData
        path: ''
        startLine: 4144
      syntax:
        content:
          CSharp: public static List<GroupDataLoader.GroupData> groupData
          VB: Public Shared groupData As List(Of GroupDataLoader.GroupData)
        return:
          type: System.Collections.Generic.List{IVI.GroupDataLoader.GroupData}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: IVI.GroupDataLoader.GroupData
    commentId: T:IVI.GroupDataLoader.GroupData
    language: CSharp
    name:
      CSharp: GroupDataLoader.GroupData
      VB: GroupDataLoader.GroupData
    nameWithType:
      CSharp: GroupDataLoader.GroupData
      VB: GroupDataLoader.GroupData
    qualifiedName:
      CSharp: IVI.GroupDataLoader.GroupData
      VB: IVI.GroupDataLoader.GroupData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: GroupData
      path: ''
      startLine: 4193
    syntax:
      content:
        CSharp: public class GroupData
        VB: Public Class GroupData
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.GroupDataLoader.GroupData.pos
      commentId: F:IVI.GroupDataLoader.GroupData.pos
      language: CSharp
      name:
        CSharp: pos
        VB: pos
      nameWithType:
        CSharp: GroupDataLoader.GroupData.pos
        VB: GroupDataLoader.GroupData.pos
      qualifiedName:
        CSharp: IVI.GroupDataLoader.GroupData.pos
        VB: IVI.GroupDataLoader.GroupData.pos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: pos
        path: ''
        startLine: 4195
      syntax:
        content:
          CSharp: public List<Vector3> pos
          VB: Public pos As List(Of Vector3)
        return:
          type: System.Collections.Generic.List{Vector3}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupDataLoader.GroupData.ang
      commentId: F:IVI.GroupDataLoader.GroupData.ang
      language: CSharp
      name:
        CSharp: ang
        VB: ang
      nameWithType:
        CSharp: GroupDataLoader.GroupData.ang
        VB: GroupDataLoader.GroupData.ang
      qualifiedName:
        CSharp: IVI.GroupDataLoader.GroupData.ang
        VB: IVI.GroupDataLoader.GroupData.ang
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: ang
        path: ''
        startLine: 4196
      syntax:
        content:
          CSharp: public List<float> ang
          VB: Public ang As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupDataLoader.GroupData.dir
      commentId: F:IVI.GroupDataLoader.GroupData.dir
      language: CSharp
      name:
        CSharp: dir
        VB: dir
      nameWithType:
        CSharp: GroupDataLoader.GroupData.dir
        VB: GroupDataLoader.GroupData.dir
      qualifiedName:
        CSharp: IVI.GroupDataLoader.GroupData.dir
        VB: IVI.GroupDataLoader.GroupData.dir
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: dir
        path: ''
        startLine: 4197
      syntax:
        content:
          CSharp: public List<Vector3> dir
          VB: Public dir As List(Of Vector3)
        return:
          type: System.Collections.Generic.List{Vector3}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupDataLoader.GroupData.#ctor
      commentId: M:IVI.GroupDataLoader.GroupData.#ctor
      language: CSharp
      name:
        CSharp: GroupData()
        VB: GroupData()
      nameWithType:
        CSharp: GroupDataLoader.GroupData.GroupData()
        VB: GroupDataLoader.GroupData.GroupData()
      qualifiedName:
        CSharp: IVI.GroupDataLoader.GroupData.GroupData()
        VB: IVI.GroupDataLoader.GroupData.GroupData()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: .ctor
        path: ''
        startLine: 4199
      syntax:
        content:
          CSharp: public GroupData()
          VB: Public Sub New
      overload: IVI.GroupDataLoader.GroupData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.GroupDataLoader.GroupData.Standardize
      commentId: M:IVI.GroupDataLoader.GroupData.Standardize
      language: CSharp
      name:
        CSharp: Standardize()
        VB: Standardize()
      nameWithType:
        CSharp: GroupDataLoader.GroupData.Standardize()
        VB: GroupDataLoader.GroupData.Standardize()
      qualifiedName:
        CSharp: IVI.GroupDataLoader.GroupData.Standardize()
        VB: IVI.GroupDataLoader.GroupData.Standardize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: Standardize
        path: ''
        startLine: 4206
      syntax:
        content:
          CSharp: public void Standardize()
          VB: Public Sub Standardize
      overload: IVI.GroupDataLoader.GroupData.Standardize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.CameraScript
    commentId: T:IVI.CameraScript
    language: CSharp
    name:
      CSharp: CameraScript
      VB: CameraScript
    nameWithType:
      CSharp: CameraScript
      VB: CameraScript
    qualifiedName:
      CSharp: IVI.CameraScript
      VB: IVI.CameraScript
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: CameraScript
      path: ''
      startLine: 4228
    syntax:
      content:
        CSharp: 'public class CameraScript : MonoBehaviour'
        VB: >-
          Public Class CameraScript

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.CameraScript.movementSpeed
      commentId: F:IVI.CameraScript.movementSpeed
      language: CSharp
      name:
        CSharp: movementSpeed
        VB: movementSpeed
      nameWithType:
        CSharp: CameraScript.movementSpeed
        VB: CameraScript.movementSpeed
      qualifiedName:
        CSharp: IVI.CameraScript.movementSpeed
        VB: IVI.CameraScript.movementSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: movementSpeed
        path: ''
        startLine: 4233
      summary: "\nNormal speed of camera movement.\n"
      example: []
      syntax:
        content:
          CSharp: public float movementSpeed
          VB: Public movementSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.CameraScript.fastMovementSpeed
      commentId: F:IVI.CameraScript.fastMovementSpeed
      language: CSharp
      name:
        CSharp: fastMovementSpeed
        VB: fastMovementSpeed
      nameWithType:
        CSharp: CameraScript.fastMovementSpeed
        VB: CameraScript.fastMovementSpeed
      qualifiedName:
        CSharp: IVI.CameraScript.fastMovementSpeed
        VB: IVI.CameraScript.fastMovementSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: fastMovementSpeed
        path: ''
        startLine: 4238
      summary: "\nSpeed of camera movement when shift is held down,\n"
      example: []
      syntax:
        content:
          CSharp: public float fastMovementSpeed
          VB: Public fastMovementSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.CameraScript.freeLookSensitivity
      commentId: F:IVI.CameraScript.freeLookSensitivity
      language: CSharp
      name:
        CSharp: freeLookSensitivity
        VB: freeLookSensitivity
      nameWithType:
        CSharp: CameraScript.freeLookSensitivity
        VB: CameraScript.freeLookSensitivity
      qualifiedName:
        CSharp: IVI.CameraScript.freeLookSensitivity
        VB: IVI.CameraScript.freeLookSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: freeLookSensitivity
        path: ''
        startLine: 4243
      summary: "\nSensitivity for free look.\n"
      example: []
      syntax:
        content:
          CSharp: public float freeLookSensitivity
          VB: Public freeLookSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.CameraScript.zoomSensitivity
      commentId: F:IVI.CameraScript.zoomSensitivity
      language: CSharp
      name:
        CSharp: zoomSensitivity
        VB: zoomSensitivity
      nameWithType:
        CSharp: CameraScript.zoomSensitivity
        VB: CameraScript.zoomSensitivity
      qualifiedName:
        CSharp: IVI.CameraScript.zoomSensitivity
        VB: IVI.CameraScript.zoomSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: zoomSensitivity
        path: ''
        startLine: 4248
      summary: "\nAmount to zoom the camera when using the mouse wheel.\n"
      example: []
      syntax:
        content:
          CSharp: public float zoomSensitivity
          VB: Public zoomSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.CameraScript.fastZoomSensitivity
      commentId: F:IVI.CameraScript.fastZoomSensitivity
      language: CSharp
      name:
        CSharp: fastZoomSensitivity
        VB: fastZoomSensitivity
      nameWithType:
        CSharp: CameraScript.fastZoomSensitivity
        VB: CameraScript.fastZoomSensitivity
      qualifiedName:
        CSharp: IVI.CameraScript.fastZoomSensitivity
        VB: IVI.CameraScript.fastZoomSensitivity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: fastZoomSensitivity
        path: ''
        startLine: 4253
      summary: "\nAmount to zoom the camera when using the mouse wheel (fast mode).\n"
      example: []
      syntax:
        content:
          CSharp: public float fastZoomSensitivity
          VB: Public fastZoomSensitivity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.CameraScript.StartLooking
      commentId: M:IVI.CameraScript.StartLooking
      language: CSharp
      name:
        CSharp: StartLooking()
        VB: StartLooking()
      nameWithType:
        CSharp: CameraScript.StartLooking()
        VB: CameraScript.StartLooking()
      qualifiedName:
        CSharp: IVI.CameraScript.StartLooking()
        VB: IVI.CameraScript.StartLooking()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StartLooking
        path: ''
        startLine: 4337
      summary: "\nEnable free looking.\n"
      example: []
      syntax:
        content:
          CSharp: public void StartLooking()
          VB: Public Sub StartLooking
      overload: IVI.CameraScript.StartLooking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.CameraScript.StopLooking
      commentId: M:IVI.CameraScript.StopLooking
      language: CSharp
      name:
        CSharp: StopLooking()
        VB: StopLooking()
      nameWithType:
        CSharp: CameraScript.StopLooking()
        VB: CameraScript.StopLooking()
      qualifiedName:
        CSharp: IVI.CameraScript.StopLooking()
        VB: IVI.CameraScript.StopLooking()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: StopLooking
        path: ''
        startLine: 4347
      summary: "\nDisable free looking.\n"
      example: []
      syntax:
        content:
          CSharp: public void StopLooking()
          VB: Public Sub StopLooking
      overload: IVI.CameraScript.StopLooking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.LabelSituation
    commentId: T:IVI.LabelSituation
    language: CSharp
    name:
      CSharp: LabelSituation
      VB: LabelSituation
    nameWithType:
      CSharp: LabelSituation
      VB: LabelSituation
    qualifiedName:
      CSharp: IVI.LabelSituation
      VB: IVI.LabelSituation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: LabelSituation
      path: ''
      startLine: 4362
    syntax:
      content:
        CSharp: 'public class LabelSituation : MonoBehaviour'
        VB: >-
          Public Class LabelSituation

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVI.LabelSituation.UPDATE_RATE
      commentId: F:IVI.LabelSituation.UPDATE_RATE
      language: CSharp
      name:
        CSharp: UPDATE_RATE
        VB: UPDATE_RATE
      nameWithType:
        CSharp: LabelSituation.UPDATE_RATE
        VB: LabelSituation.UPDATE_RATE
      qualifiedName:
        CSharp: IVI.LabelSituation.UPDATE_RATE
        VB: IVI.LabelSituation.UPDATE_RATE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: UPDATE_RATE
        path: ''
        startLine: 4365
      syntax:
        content:
          CSharp: public float UPDATE_RATE
          VB: Public UPDATE_RATE As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.PERCEPTION_RANGE
      commentId: F:IVI.LabelSituation.PERCEPTION_RANGE
      language: CSharp
      name:
        CSharp: PERCEPTION_RANGE
        VB: PERCEPTION_RANGE
      nameWithType:
        CSharp: LabelSituation.PERCEPTION_RANGE
        VB: LabelSituation.PERCEPTION_RANGE
      qualifiedName:
        CSharp: IVI.LabelSituation.PERCEPTION_RANGE
        VB: IVI.LabelSituation.PERCEPTION_RANGE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: PERCEPTION_RANGE
        path: ''
        startLine: 4366
      syntax:
        content:
          CSharp: public float PERCEPTION_RANGE
          VB: Public PERCEPTION_RANGE As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.AGENT_HEIGHT
      commentId: F:IVI.LabelSituation.AGENT_HEIGHT
      language: CSharp
      name:
        CSharp: AGENT_HEIGHT
        VB: AGENT_HEIGHT
      nameWithType:
        CSharp: LabelSituation.AGENT_HEIGHT
        VB: LabelSituation.AGENT_HEIGHT
      qualifiedName:
        CSharp: IVI.LabelSituation.AGENT_HEIGHT
        VB: IVI.LabelSituation.AGENT_HEIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: AGENT_HEIGHT
        path: ''
        startLine: 4367
      syntax:
        content:
          CSharp: public float AGENT_HEIGHT
          VB: Public AGENT_HEIGHT As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.GROUP_THRESH
      commentId: F:IVI.LabelSituation.GROUP_THRESH
      language: CSharp
      name:
        CSharp: GROUP_THRESH
        VB: GROUP_THRESH
      nameWithType:
        CSharp: LabelSituation.GROUP_THRESH
        VB: LabelSituation.GROUP_THRESH
      qualifiedName:
        CSharp: IVI.LabelSituation.GROUP_THRESH
        VB: IVI.LabelSituation.GROUP_THRESH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: GROUP_THRESH
        path: ''
        startLine: 4368
      syntax:
        content:
          CSharp: public float GROUP_THRESH
          VB: Public GROUP_THRESH As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.robotMovement
      commentId: F:IVI.LabelSituation.robotMovement
      language: CSharp
      name:
        CSharp: robotMovement
        VB: robotMovement
      nameWithType:
        CSharp: LabelSituation.robotMovement
        VB: LabelSituation.robotMovement
      qualifiedName:
        CSharp: IVI.LabelSituation.robotMovement
        VB: IVI.LabelSituation.robotMovement
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: robotMovement
        path: ''
        startLine: 4369
      syntax:
        content:
          CSharp: public LabelSituation.RobotMovement robotMovement
          VB: Public robotMovement As LabelSituation.RobotMovement
        return:
          type: IVI.LabelSituation.RobotMovement
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.goal
      commentId: F:IVI.LabelSituation.goal
      language: CSharp
      name:
        CSharp: goal
        VB: goal
      nameWithType:
        CSharp: LabelSituation.goal
        VB: LabelSituation.goal
      qualifiedName:
        CSharp: IVI.LabelSituation.goal
        VB: IVI.LabelSituation.goal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: goal
        path: ''
        startLine: 4370
      syntax:
        content:
          CSharp: public Transform goal
          VB: Public goal As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.situationChoice
      commentId: F:IVI.LabelSituation.situationChoice
      language: CSharp
      name:
        CSharp: situationChoice
        VB: situationChoice
      nameWithType:
        CSharp: LabelSituation.situationChoice
        VB: LabelSituation.situationChoice
      qualifiedName:
        CSharp: IVI.LabelSituation.situationChoice
        VB: IVI.LabelSituation.situationChoice
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: situationChoice
        path: ''
        startLine: 4371
      syntax:
        content:
          CSharp: public LabelSituation.SituationChoice situationChoice
          VB: Public situationChoice As LabelSituation.SituationChoice
        return:
          type: IVI.LabelSituation.SituationChoice
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.publishToRos
      commentId: F:IVI.LabelSituation.publishToRos
      language: CSharp
      name:
        CSharp: publishToRos
        VB: publishToRos
      nameWithType:
        CSharp: LabelSituation.publishToRos
        VB: LabelSituation.publishToRos
      qualifiedName:
        CSharp: IVI.LabelSituation.publishToRos
        VB: IVI.LabelSituation.publishToRos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: publishToRos
        path: ''
        startLine: 4372
      syntax:
        content:
          CSharp: public bool publishToRos
          VB: Public publishToRos As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.rosTopicName
      commentId: F:IVI.LabelSituation.rosTopicName
      language: CSharp
      name:
        CSharp: rosTopicName
        VB: rosTopicName
      nameWithType:
        CSharp: LabelSituation.rosTopicName
        VB: LabelSituation.rosTopicName
      qualifiedName:
        CSharp: IVI.LabelSituation.rosTopicName
        VB: IVI.LabelSituation.rosTopicName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: rosTopicName
        path: ''
        startLine: 4373
      syntax:
        content:
          CSharp: public string rosTopicName
          VB: Public rosTopicName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVI.LabelSituation.PollSituation
      commentId: M:IVI.LabelSituation.PollSituation
      language: CSharp
      name:
        CSharp: PollSituation()
        VB: PollSituation()
      nameWithType:
        CSharp: LabelSituation.PollSituation()
        VB: LabelSituation.PollSituation()
      qualifiedName:
        CSharp: IVI.LabelSituation.PollSituation()
        VB: IVI.LabelSituation.PollSituation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: PollSituation
        path: ''
        startLine: 4451
      syntax:
        content:
          CSharp: public LabelSituation.Situation PollSituation()
          VB: Public Function PollSituation As LabelSituation.Situation
        return:
          type: IVI.LabelSituation.Situation
      overload: IVI.LabelSituation.PollSituation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVI.LabelSituation.RobotMovement
    commentId: T:IVI.LabelSituation.RobotMovement
    language: CSharp
    name:
      CSharp: LabelSituation.RobotMovement
      VB: LabelSituation.RobotMovement
    nameWithType:
      CSharp: LabelSituation.RobotMovement
      VB: LabelSituation.RobotMovement
    qualifiedName:
      CSharp: IVI.LabelSituation.RobotMovement
      VB: IVI.LabelSituation.RobotMovement
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: RobotMovement
      path: ''
      startLine: 4382
    syntax:
      content:
        CSharp: public enum RobotMovement
        VB: Public Enum RobotMovement
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IVI.LabelSituation.RobotMovement.FORWARD
      commentId: F:IVI.LabelSituation.RobotMovement.FORWARD
      language: CSharp
      name:
        CSharp: FORWARD
        VB: FORWARD
      nameWithType:
        CSharp: LabelSituation.RobotMovement.FORWARD
        VB: LabelSituation.RobotMovement.FORWARD
      qualifiedName:
        CSharp: IVI.LabelSituation.RobotMovement.FORWARD
        VB: IVI.LabelSituation.RobotMovement.FORWARD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: FORWARD
        path: ''
        startLine: 4384
      syntax:
        content:
          CSharp: FORWARD = 0
          VB: FORWARD = 0
        return:
          type: IVI.LabelSituation.RobotMovement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.RobotMovement.GOAL
      commentId: F:IVI.LabelSituation.RobotMovement.GOAL
      language: CSharp
      name:
        CSharp: GOAL
        VB: GOAL
      nameWithType:
        CSharp: LabelSituation.RobotMovement.GOAL
        VB: LabelSituation.RobotMovement.GOAL
      qualifiedName:
        CSharp: IVI.LabelSituation.RobotMovement.GOAL
        VB: IVI.LabelSituation.RobotMovement.GOAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: GOAL
        path: ''
        startLine: 4385
      syntax:
        content:
          CSharp: GOAL = 1
          VB: GOAL = 1
        return:
          type: IVI.LabelSituation.RobotMovement
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IVI.LabelSituation.Situation
    commentId: T:IVI.LabelSituation.Situation
    language: CSharp
    name:
      CSharp: LabelSituation.Situation
      VB: LabelSituation.Situation
    nameWithType:
      CSharp: LabelSituation.Situation
      VB: LabelSituation.Situation
    qualifiedName:
      CSharp: IVI.LabelSituation.Situation
      VB: IVI.LabelSituation.Situation
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: Situation
      path: ''
      startLine: 4388
    syntax:
      content:
        CSharp: public enum Situation
        VB: Public Enum Situation
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IVI.LabelSituation.Situation.CROSS_PATH
      commentId: F:IVI.LabelSituation.Situation.CROSS_PATH
      language: CSharp
      name:
        CSharp: CROSS_PATH
        VB: CROSS_PATH
      nameWithType:
        CSharp: LabelSituation.Situation.CROSS_PATH
        VB: LabelSituation.Situation.CROSS_PATH
      qualifiedName:
        CSharp: IVI.LabelSituation.Situation.CROSS_PATH
        VB: IVI.LabelSituation.Situation.CROSS_PATH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: CROSS_PATH
        path: ''
        startLine: 4390
      syntax:
        content:
          CSharp: CROSS_PATH = 0
          VB: CROSS_PATH = 0
        return:
          type: IVI.LabelSituation.Situation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.Situation.PARALLEL_PATH
      commentId: F:IVI.LabelSituation.Situation.PARALLEL_PATH
      language: CSharp
      name:
        CSharp: PARALLEL_PATH
        VB: PARALLEL_PATH
      nameWithType:
        CSharp: LabelSituation.Situation.PARALLEL_PATH
        VB: LabelSituation.Situation.PARALLEL_PATH
      qualifiedName:
        CSharp: IVI.LabelSituation.Situation.PARALLEL_PATH
        VB: IVI.LabelSituation.Situation.PARALLEL_PATH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: PARALLEL_PATH
        path: ''
        startLine: 4391
      syntax:
        content:
          CSharp: PARALLEL_PATH = 1
          VB: PARALLEL_PATH = 1
        return:
          type: IVI.LabelSituation.Situation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.Situation.EMPTY
      commentId: F:IVI.LabelSituation.Situation.EMPTY
      language: CSharp
      name:
        CSharp: EMPTY
        VB: EMPTY
      nameWithType:
        CSharp: LabelSituation.Situation.EMPTY
        VB: LabelSituation.Situation.EMPTY
      qualifiedName:
        CSharp: IVI.LabelSituation.Situation.EMPTY
        VB: IVI.LabelSituation.Situation.EMPTY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: EMPTY
        path: ''
        startLine: 4392
      syntax:
        content:
          CSharp: EMPTY = 2
          VB: EMPTY = 2
        return:
          type: IVI.LabelSituation.Situation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.Situation.JOIN_GROUP
      commentId: F:IVI.LabelSituation.Situation.JOIN_GROUP
      language: CSharp
      name:
        CSharp: JOIN_GROUP
        VB: JOIN_GROUP
      nameWithType:
        CSharp: LabelSituation.Situation.JOIN_GROUP
        VB: LabelSituation.Situation.JOIN_GROUP
      qualifiedName:
        CSharp: IVI.LabelSituation.Situation.JOIN_GROUP
        VB: IVI.LabelSituation.Situation.JOIN_GROUP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: JOIN_GROUP
        path: ''
        startLine: 4393
      syntax:
        content:
          CSharp: JOIN_GROUP = 3
          VB: JOIN_GROUP = 3
        return:
          type: IVI.LabelSituation.Situation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.Situation.LEAVE_GROUP
      commentId: F:IVI.LabelSituation.Situation.LEAVE_GROUP
      language: CSharp
      name:
        CSharp: LEAVE_GROUP
        VB: LEAVE_GROUP
      nameWithType:
        CSharp: LabelSituation.Situation.LEAVE_GROUP
        VB: LabelSituation.Situation.LEAVE_GROUP
      qualifiedName:
        CSharp: IVI.LabelSituation.Situation.LEAVE_GROUP
        VB: IVI.LabelSituation.Situation.LEAVE_GROUP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: LEAVE_GROUP
        path: ''
        startLine: 4394
      syntax:
        content:
          CSharp: LEAVE_GROUP = 4
          VB: LEAVE_GROUP = 4
        return:
          type: IVI.LabelSituation.Situation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.Situation.NONE
      commentId: F:IVI.LabelSituation.Situation.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: LabelSituation.Situation.NONE
        VB: LabelSituation.Situation.NONE
      qualifiedName:
        CSharp: IVI.LabelSituation.Situation.NONE
        VB: IVI.LabelSituation.Situation.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: NONE
        path: ''
        startLine: 4395
      syntax:
        content:
          CSharp: NONE = 5
          VB: NONE = 5
        return:
          type: IVI.LabelSituation.Situation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IVI.LabelSituation.SituationType
    commentId: T:IVI.LabelSituation.SituationType
    language: CSharp
    name:
      CSharp: LabelSituation.SituationType
      VB: LabelSituation.SituationType
    nameWithType:
      CSharp: LabelSituation.SituationType
      VB: LabelSituation.SituationType
    qualifiedName:
      CSharp: IVI.LabelSituation.SituationType
      VB: IVI.LabelSituation.SituationType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: SituationType
      path: ''
      startLine: 4398
    syntax:
      content:
        CSharp: public enum SituationType
        VB: Public Enum SituationType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IVI.LabelSituation.SituationType.PATH
      commentId: F:IVI.LabelSituation.SituationType.PATH
      language: CSharp
      name:
        CSharp: PATH
        VB: PATH
      nameWithType:
        CSharp: LabelSituation.SituationType.PATH
        VB: LabelSituation.SituationType.PATH
      qualifiedName:
        CSharp: IVI.LabelSituation.SituationType.PATH
        VB: IVI.LabelSituation.SituationType.PATH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: PATH
        path: ''
        startLine: 4400
      syntax:
        content:
          CSharp: PATH = 0
          VB: PATH = 0
        return:
          type: IVI.LabelSituation.SituationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.SituationType.GROUP
      commentId: F:IVI.LabelSituation.SituationType.GROUP
      language: CSharp
      name:
        CSharp: GROUP
        VB: GROUP
      nameWithType:
        CSharp: LabelSituation.SituationType.GROUP
        VB: LabelSituation.SituationType.GROUP
      qualifiedName:
        CSharp: IVI.LabelSituation.SituationType.GROUP
        VB: IVI.LabelSituation.SituationType.GROUP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: GROUP
        path: ''
        startLine: 4401
      syntax:
        content:
          CSharp: GROUP = 1
          VB: GROUP = 1
        return:
          type: IVI.LabelSituation.SituationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.SituationType.NONE
      commentId: F:IVI.LabelSituation.SituationType.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: LabelSituation.SituationType.NONE
        VB: LabelSituation.SituationType.NONE
      qualifiedName:
        CSharp: IVI.LabelSituation.SituationType.NONE
        VB: IVI.LabelSituation.SituationType.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: NONE
        path: ''
        startLine: 4402
      syntax:
        content:
          CSharp: NONE = 2
          VB: NONE = 2
        return:
          type: IVI.LabelSituation.SituationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: IVI.LabelSituation.SituationChoice
    commentId: T:IVI.LabelSituation.SituationChoice
    language: CSharp
    name:
      CSharp: LabelSituation.SituationChoice
      VB: LabelSituation.SituationChoice
    nameWithType:
      CSharp: LabelSituation.SituationChoice
      VB: LabelSituation.SituationChoice
    qualifiedName:
      CSharp: IVI.LabelSituation.SituationChoice
      VB: IVI.LabelSituation.SituationChoice
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: IVI
    source:
      id: SituationChoice
      path: ''
      startLine: 4405
    syntax:
      content:
        CSharp: public enum SituationChoice
        VB: Public Enum SituationChoice
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IVI.LabelSituation.SituationChoice.STRICT
      commentId: F:IVI.LabelSituation.SituationChoice.STRICT
      language: CSharp
      name:
        CSharp: STRICT
        VB: STRICT
      nameWithType:
        CSharp: LabelSituation.SituationChoice.STRICT
        VB: LabelSituation.SituationChoice.STRICT
      qualifiedName:
        CSharp: IVI.LabelSituation.SituationChoice.STRICT
        VB: IVI.LabelSituation.SituationChoice.STRICT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: STRICT
        path: ''
        startLine: 4407
      syntax:
        content:
          CSharp: STRICT = 0
          VB: STRICT = 0
        return:
          type: IVI.LabelSituation.SituationChoice
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.SituationChoice.CLOSEST
      commentId: F:IVI.LabelSituation.SituationChoice.CLOSEST
      language: CSharp
      name:
        CSharp: CLOSEST
        VB: CLOSEST
      nameWithType:
        CSharp: LabelSituation.SituationChoice.CLOSEST
        VB: LabelSituation.SituationChoice.CLOSEST
      qualifiedName:
        CSharp: IVI.LabelSituation.SituationChoice.CLOSEST
        VB: IVI.LabelSituation.SituationChoice.CLOSEST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: CLOSEST
        path: ''
        startLine: 4408
      syntax:
        content:
          CSharp: CLOSEST = 1
          VB: CLOSEST = 1
        return:
          type: IVI.LabelSituation.SituationChoice
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: IVI.LabelSituation.SituationChoice.DISTANCE_WEIGHTED
      commentId: F:IVI.LabelSituation.SituationChoice.DISTANCE_WEIGHTED
      language: CSharp
      name:
        CSharp: DISTANCE_WEIGHTED
        VB: DISTANCE_WEIGHTED
      nameWithType:
        CSharp: LabelSituation.SituationChoice.DISTANCE_WEIGHTED
        VB: LabelSituation.SituationChoice.DISTANCE_WEIGHTED
      qualifiedName:
        CSharp: IVI.LabelSituation.SituationChoice.DISTANCE_WEIGHTED
        VB: IVI.LabelSituation.SituationChoice.DISTANCE_WEIGHTED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVI
      source:
        id: DISTANCE_WEIGHTED
        path: ''
        startLine: 4409
      syntax:
        content:
          CSharp: DISTANCE_WEIGHTED = 2
          VB: DISTANCE_WEIGHTED = 2
        return:
          type: IVI.LabelSituation.SituationChoice
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: SEAN
  commentId: N:SEAN
  language: CSharp
  name:
    CSharp: SEAN
    VB: SEAN
  nameWithType:
    CSharp: SEAN
    VB: SEAN
  qualifiedName:
    CSharp: SEAN
    VB: SEAN
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.SEAN
    commentId: T:SEAN.SEAN
    language: CSharp
    name:
      CSharp: SEAN
      VB: SEAN
    nameWithType:
      CSharp: SEAN
      VB: SEAN
    qualifiedName:
      CSharp: SEAN.SEAN
      VB: SEAN.SEAN
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN
    source:
      id: SEAN
      path: ''
      startLine: 7367
    syntax:
      content:
        CSharp: 'public class SEAN : MonoBehaviour'
        VB: >-
          Public Class SEAN

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.SEAN.instance
      commentId: P:SEAN.SEAN.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: SEAN.instance
        VB: SEAN.instance
      qualifiedName:
        CSharp: SEAN.SEAN.instance
        VB: SEAN.SEAN.instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: instance
        path: ''
        startLine: 7369
      syntax:
        content:
          CSharp: public static SEAN instance { get; }
          VB: Public Shared ReadOnly Property instance As SEAN
        parameters: []
        return:
          type: SEAN.SEAN
      overload: SEAN.SEAN.instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.SEAN.AgentTag
      commentId: F:SEAN.SEAN.AgentTag
      language: CSharp
      name:
        CSharp: AgentTag
        VB: AgentTag
      nameWithType:
        CSharp: SEAN.AgentTag
        VB: SEAN.AgentTag
      qualifiedName:
        CSharp: SEAN.SEAN.AgentTag
        VB: SEAN.SEAN.AgentTag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: AgentTag
        path: ''
        startLine: 7371
      syntax:
        content:
          CSharp: public const string AgentTag = "NavAgent"
          VB: Public Const AgentTag As String = "NavAgent"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.SEAN.GroupTag
      commentId: F:SEAN.SEAN.GroupTag
      language: CSharp
      name:
        CSharp: GroupTag
        VB: GroupTag
      nameWithType:
        CSharp: SEAN.GroupTag
        VB: SEAN.GroupTag
      qualifiedName:
        CSharp: SEAN.SEAN.GroupTag
        VB: SEAN.SEAN.GroupTag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: GroupTag
        path: ''
        startLine: 7372
      syntax:
        content:
          CSharp: public const string GroupTag = "GroupMember"
          VB: Public Const GroupTag As String = "GroupMember"
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.SEAN.AgentPrefab
      commentId: F:SEAN.SEAN.AgentPrefab
      language: CSharp
      name:
        CSharp: AgentPrefab
        VB: AgentPrefab
      nameWithType:
        CSharp: SEAN.AgentPrefab
        VB: SEAN.AgentPrefab
      qualifiedName:
        CSharp: SEAN.SEAN.AgentPrefab
        VB: SEAN.SEAN.AgentPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: AgentPrefab
        path: ''
        startLine: 7373
      syntax:
        content:
          CSharp: public GameObject AgentPrefab
          VB: Public AgentPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.SEAN.environment
      commentId: P:SEAN.SEAN.environment
      language: CSharp
      name:
        CSharp: environment
        VB: environment
      nameWithType:
        CSharp: SEAN.environment
        VB: SEAN.environment
      qualifiedName:
        CSharp: SEAN.SEAN.environment
        VB: SEAN.SEAN.environment
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: environment
        path: ''
        startLine: 7376
      syntax:
        content:
          CSharp: public Environment environment { get; }
          VB: Public ReadOnly Property environment As Environment
        parameters: []
        return:
          type: SEAN.Environment.Environment
      overload: SEAN.SEAN.environment*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.SEAN.input
      commentId: P:SEAN.SEAN.input
      language: CSharp
      name:
        CSharp: input
        VB: input
      nameWithType:
        CSharp: SEAN.input
        VB: SEAN.input
      qualifiedName:
        CSharp: SEAN.SEAN.input
        VB: SEAN.SEAN.input
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: input
        path: ''
        startLine: 7381
      syntax:
        content:
          CSharp: public InputPublisher input { get; }
          VB: Public ReadOnly Property input As InputPublisher
        parameters: []
        return:
          type: SEAN.Input.InputPublisher
      overload: SEAN.SEAN.input*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.SEAN.metrics
      commentId: P:SEAN.SEAN.metrics
      language: CSharp
      name:
        CSharp: metrics
        VB: metrics
      nameWithType:
        CSharp: SEAN.metrics
        VB: SEAN.metrics
      qualifiedName:
        CSharp: SEAN.SEAN.metrics
        VB: SEAN.SEAN.metrics
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: metrics
        path: ''
        startLine: 7384
      syntax:
        content:
          CSharp: public Metrics metrics { get; }
          VB: Public ReadOnly Property metrics As Metrics
        parameters: []
        return:
          type: SEAN.Metrics.Metrics
      overload: SEAN.SEAN.metrics*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.SEAN.RosConnectionPort
      commentId: F:SEAN.SEAN.RosConnectionPort
      language: CSharp
      name:
        CSharp: RosConnectionPort
        VB: RosConnectionPort
      nameWithType:
        CSharp: SEAN.RosConnectionPort
        VB: SEAN.RosConnectionPort
      qualifiedName:
        CSharp: SEAN.SEAN.RosConnectionPort
        VB: SEAN.SEAN.RosConnectionPort
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: RosConnectionPort
        path: ''
        startLine: 7387
      syntax:
        content:
          CSharp: public int RosConnectionPort
          VB: Public RosConnectionPort As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.SEAN.scenario
      commentId: P:SEAN.SEAN.scenario
      language: CSharp
      name:
        CSharp: scenario
        VB: scenario
      nameWithType:
        CSharp: SEAN.scenario
        VB: SEAN.scenario
      qualifiedName:
        CSharp: SEAN.SEAN.scenario
        VB: SEAN.SEAN.scenario
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: scenario
        path: ''
        startLine: 7442
      syntax:
        content:
          CSharp: public BaseScenario scenario { get; }
          VB: Public ReadOnly Property scenario As BaseScenario
        parameters: []
        return:
          type: SEAN.Situations.Scenario.BaseScenario
      overload: SEAN.SEAN.scenario*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.SEAN.task
      commentId: P:SEAN.SEAN.task
      language: CSharp
      name:
        CSharp: task
        VB: task
      nameWithType:
        CSharp: SEAN.task
        VB: SEAN.task
      qualifiedName:
        CSharp: SEAN.SEAN.task
        VB: SEAN.SEAN.task
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: task
        path: ''
        startLine: 7462
      syntax:
        content:
          CSharp: public BaseTask task { get; }
          VB: Public ReadOnly Property task As BaseTask
        parameters: []
        return:
          type: SEAN.Tasks.BaseTask
      overload: SEAN.SEAN.task*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.SEAN.robot
      commentId: P:SEAN.SEAN.robot
      language: CSharp
      name:
        CSharp: robot
        VB: robot
      nameWithType:
        CSharp: SEAN.robot
        VB: SEAN.robot
      qualifiedName:
        CSharp: SEAN.SEAN.robot
        VB: SEAN.SEAN.robot
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: robot
        path: ''
        startLine: 7482
      syntax:
        content:
          CSharp: public Robot robot { get; }
          VB: Public ReadOnly Property robot As Robot
        parameters: []
        return:
          type: SEAN.Situations.Robot
      overload: SEAN.SEAN.robot*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.SEAN.controller
      commentId: P:SEAN.SEAN.controller
      language: CSharp
      name:
        CSharp: controller
        VB: controller
      nameWithType:
        CSharp: SEAN.controller
        VB: SEAN.controller
      qualifiedName:
        CSharp: SEAN.SEAN.controller
        VB: SEAN.SEAN.controller
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN
      source:
        id: controller
        path: ''
        startLine: 7502
      syntax:
        content:
          CSharp: public ControlSubscriber controller { get; }
          VB: Public ReadOnly Property controller As ControlSubscriber
        parameters: []
        return:
          type: SEAN.Control.ControlSubscriber
      overload: SEAN.SEAN.controller*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
- id: SEAN.Mapping
  commentId: N:SEAN.Mapping
  language: CSharp
  name:
    CSharp: SEAN.Mapping
    VB: SEAN.Mapping
  nameWithType:
    CSharp: SEAN.Mapping
    VB: SEAN.Mapping
  qualifiedName:
    CSharp: SEAN.Mapping
    VB: SEAN.Mapping
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Mapping.PixelCube
    commentId: T:SEAN.Mapping.PixelCube
    language: CSharp
    name:
      CSharp: PixelCube
      VB: PixelCube
    nameWithType:
      CSharp: PixelCube
      VB: PixelCube
    qualifiedName:
      CSharp: SEAN.Mapping.PixelCube
      VB: SEAN.Mapping.PixelCube
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Mapping
    source:
      id: PixelCube
      path: ''
      startLine: 7535
    syntax:
      content:
        CSharp: public class PixelCube
        VB: Public Class PixelCube
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Mapping.PixelCube.x
      commentId: F:SEAN.Mapping.PixelCube.x
      language: CSharp
      name:
        CSharp: x
        VB: x
      nameWithType:
        CSharp: PixelCube.x
        VB: PixelCube.x
      qualifiedName:
        CSharp: SEAN.Mapping.PixelCube.x
        VB: SEAN.Mapping.PixelCube.x
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: x
        path: ''
        startLine: 7536
      syntax:
        content:
          CSharp: public int x
          VB: Public x As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.PixelCube.z
      commentId: F:SEAN.Mapping.PixelCube.z
      language: CSharp
      name:
        CSharp: z
        VB: z
      nameWithType:
        CSharp: PixelCube.z
        VB: PixelCube.z
      qualifiedName:
        CSharp: SEAN.Mapping.PixelCube.z
        VB: SEAN.Mapping.PixelCube.z
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: z
        path: ''
        startLine: 7537
      syntax:
        content:
          CSharp: public int z
          VB: Public z As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.PixelCube.cube
      commentId: F:SEAN.Mapping.PixelCube.cube
      language: CSharp
      name:
        CSharp: cube
        VB: cube
      nameWithType:
        CSharp: PixelCube.cube
        VB: PixelCube.cube
      qualifiedName:
        CSharp: SEAN.Mapping.PixelCube.cube
        VB: SEAN.Mapping.PixelCube.cube
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: cube
        path: ''
        startLine: 7538
      syntax:
        content:
          CSharp: public GameObject cube
          VB: Public cube As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Mapping.QuadCube
    commentId: T:SEAN.Mapping.QuadCube
    language: CSharp
    name:
      CSharp: QuadCube
      VB: QuadCube
    nameWithType:
      CSharp: QuadCube
      VB: QuadCube
    qualifiedName:
      CSharp: SEAN.Mapping.QuadCube
      VB: SEAN.Mapping.QuadCube
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Mapping
    source:
      id: QuadCube
      path: ''
      startLine: 7541
    syntax:
      content:
        CSharp: public class QuadCube
        VB: Public Class QuadCube
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Mapping.QuadCube.x_min
      commentId: F:SEAN.Mapping.QuadCube.x_min
      language: CSharp
      name:
        CSharp: x_min
        VB: x_min
      nameWithType:
        CSharp: QuadCube.x_min
        VB: QuadCube.x_min
      qualifiedName:
        CSharp: SEAN.Mapping.QuadCube.x_min
        VB: SEAN.Mapping.QuadCube.x_min
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: x_min
        path: ''
        startLine: 7542
      syntax:
        content:
          CSharp: public float x_min
          VB: Public x_min As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.QuadCube.x_max
      commentId: F:SEAN.Mapping.QuadCube.x_max
      language: CSharp
      name:
        CSharp: x_max
        VB: x_max
      nameWithType:
        CSharp: QuadCube.x_max
        VB: QuadCube.x_max
      qualifiedName:
        CSharp: SEAN.Mapping.QuadCube.x_max
        VB: SEAN.Mapping.QuadCube.x_max
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: x_max
        path: ''
        startLine: 7543
      syntax:
        content:
          CSharp: public float x_max
          VB: Public x_max As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.QuadCube.z_min
      commentId: F:SEAN.Mapping.QuadCube.z_min
      language: CSharp
      name:
        CSharp: z_min
        VB: z_min
      nameWithType:
        CSharp: QuadCube.z_min
        VB: QuadCube.z_min
      qualifiedName:
        CSharp: SEAN.Mapping.QuadCube.z_min
        VB: SEAN.Mapping.QuadCube.z_min
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: z_min
        path: ''
        startLine: 7544
      syntax:
        content:
          CSharp: public float z_min
          VB: Public z_min As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.QuadCube.z_max
      commentId: F:SEAN.Mapping.QuadCube.z_max
      language: CSharp
      name:
        CSharp: z_max
        VB: z_max
      nameWithType:
        CSharp: QuadCube.z_max
        VB: QuadCube.z_max
      qualifiedName:
        CSharp: SEAN.Mapping.QuadCube.z_max
        VB: SEAN.Mapping.QuadCube.z_max
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: z_max
        path: ''
        startLine: 7545
      syntax:
        content:
          CSharp: public float z_max
          VB: Public z_max As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.QuadCube.cube
      commentId: F:SEAN.Mapping.QuadCube.cube
      language: CSharp
      name:
        CSharp: cube
        VB: cube
      nameWithType:
        CSharp: QuadCube.cube
        VB: QuadCube.cube
      qualifiedName:
        CSharp: SEAN.Mapping.QuadCube.cube
        VB: SEAN.Mapping.QuadCube.cube
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: cube
        path: ''
        startLine: 7546
      syntax:
        content:
          CSharp: public GameObject cube
          VB: Public cube As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Mapping.MapCreator
    commentId: T:SEAN.Mapping.MapCreator
    language: CSharp
    name:
      CSharp: MapCreator
      VB: MapCreator
    nameWithType:
      CSharp: MapCreator
      VB: MapCreator
    qualifiedName:
      CSharp: SEAN.Mapping.MapCreator
      VB: SEAN.Mapping.MapCreator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Mapping
    source:
      id: MapCreator
      path: ''
      startLine: 7549
    syntax:
      content:
        CSharp: 'public class MapCreator : MonoBehaviour'
        VB: >-
          Public Class MapCreator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Mapping.MapCreator.SceneObject
      commentId: F:SEAN.Mapping.MapCreator.SceneObject
      language: CSharp
      name:
        CSharp: SceneObject
        VB: SceneObject
      nameWithType:
        CSharp: MapCreator.SceneObject
        VB: MapCreator.SceneObject
      qualifiedName:
        CSharp: SEAN.Mapping.MapCreator.SceneObject
        VB: SEAN.Mapping.MapCreator.SceneObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: SceneObject
        path: ''
        startLine: 7552
      syntax:
        content:
          CSharp: public GameObject SceneObject
          VB: Public SceneObject As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.MapCreator.MapHeight
      commentId: F:SEAN.Mapping.MapCreator.MapHeight
      language: CSharp
      name:
        CSharp: MapHeight
        VB: MapHeight
      nameWithType:
        CSharp: MapCreator.MapHeight
        VB: MapCreator.MapHeight
      qualifiedName:
        CSharp: SEAN.Mapping.MapCreator.MapHeight
        VB: SEAN.Mapping.MapCreator.MapHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: MapHeight
        path: ''
        startLine: 7554
      syntax:
        content:
          CSharp: public float MapHeight
          VB: Public MapHeight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.MapCreator.Resolution
      commentId: F:SEAN.Mapping.MapCreator.Resolution
      language: CSharp
      name:
        CSharp: Resolution
        VB: Resolution
      nameWithType:
        CSharp: MapCreator.Resolution
        VB: MapCreator.Resolution
      qualifiedName:
        CSharp: SEAN.Mapping.MapCreator.Resolution
        VB: SEAN.Mapping.MapCreator.Resolution
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: Resolution
        path: ''
        startLine: 7556
      syntax:
        content:
          CSharp: public float Resolution
          VB: Public Resolution As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.MapCreator.TransformOnly
      commentId: F:SEAN.Mapping.MapCreator.TransformOnly
      language: CSharp
      name:
        CSharp: TransformOnly
        VB: TransformOnly
      nameWithType:
        CSharp: MapCreator.TransformOnly
        VB: MapCreator.TransformOnly
      qualifiedName:
        CSharp: SEAN.Mapping.MapCreator.TransformOnly
        VB: SEAN.Mapping.MapCreator.TransformOnly
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: TransformOnly
        path: ''
        startLine: 7559
      syntax:
        content:
          CSharp: public bool TransformOnly
          VB: Public TransformOnly As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Mapping.MapCreator.qualityLevel
      commentId: F:SEAN.Mapping.MapCreator.qualityLevel
      language: CSharp
      name:
        CSharp: qualityLevel
        VB: qualityLevel
      nameWithType:
        CSharp: MapCreator.qualityLevel
        VB: MapCreator.qualityLevel
      qualifiedName:
        CSharp: SEAN.Mapping.MapCreator.qualityLevel
        VB: SEAN.Mapping.MapCreator.qualityLevel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Mapping
      source:
        id: qualityLevel
        path: ''
        startLine: 7562
      syntax:
        content:
          CSharp: public int qualityLevel
          VB: Public qualityLevel As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Metrics
  commentId: N:SEAN.Metrics
  language: CSharp
  name:
    CSharp: SEAN.Metrics
    VB: SEAN.Metrics
  nameWithType:
    CSharp: SEAN.Metrics
    VB: SEAN.Metrics
  qualifiedName:
    CSharp: SEAN.Metrics
    VB: SEAN.Metrics
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Metrics.Metrics
    commentId: T:SEAN.Metrics.Metrics
    language: CSharp
    name:
      CSharp: Metrics
      VB: Metrics
    nameWithType:
      CSharp: Metrics
      VB: Metrics
    qualifiedName:
      CSharp: SEAN.Metrics.Metrics
      VB: SEAN.Metrics.Metrics
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Metrics
    source:
      id: Metrics
      path: ''
      startLine: 7835
    syntax:
      content:
        CSharp: 'public class Metrics : MonoBehaviour'
        VB: >-
          Public Class Metrics

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Metrics.Metrics.sean
      commentId: F:SEAN.Metrics.Metrics.sean
      language: CSharp
      name:
        CSharp: sean
        VB: sean
      nameWithType:
        CSharp: Metrics.sean
        VB: Metrics.sean
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.sean
        VB: SEAN.Metrics.Metrics.sean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: sean
        path: ''
        startLine: 7837
      syntax:
        content:
          CSharp: protected SEAN sean
          VB: Protected sean As SEAN
        return:
          type: SEAN.SEAN
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Metrics.Metrics.UpdateFrequencyHz
      commentId: F:SEAN.Metrics.Metrics.UpdateFrequencyHz
      language: CSharp
      name:
        CSharp: UpdateFrequencyHz
        VB: UpdateFrequencyHz
      nameWithType:
        CSharp: Metrics.UpdateFrequencyHz
        VB: Metrics.UpdateFrequencyHz
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.UpdateFrequencyHz
        VB: SEAN.Metrics.Metrics.UpdateFrequencyHz
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: UpdateFrequencyHz
        path: ''
        startLine: 7842
      syntax:
        content:
          CSharp: public float UpdateFrequencyHz
          VB: Public UpdateFrequencyHz As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.IntimateDistance
      commentId: F:SEAN.Metrics.Metrics.IntimateDistance
      language: CSharp
      name:
        CSharp: IntimateDistance
        VB: IntimateDistance
      nameWithType:
        CSharp: Metrics.IntimateDistance
        VB: Metrics.IntimateDistance
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.IntimateDistance
        VB: SEAN.Metrics.Metrics.IntimateDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: IntimateDistance
        path: ''
        startLine: 7843
      syntax:
        content:
          CSharp: public float IntimateDistance
          VB: Public IntimateDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.PersonalDistance
      commentId: F:SEAN.Metrics.Metrics.PersonalDistance
      language: CSharp
      name:
        CSharp: PersonalDistance
        VB: PersonalDistance
      nameWithType:
        CSharp: Metrics.PersonalDistance
        VB: Metrics.PersonalDistance
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.PersonalDistance
        VB: SEAN.Metrics.Metrics.PersonalDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: PersonalDistance
        path: ''
        startLine: 7844
      syntax:
        content:
          CSharp: public float PersonalDistance
          VB: Public PersonalDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.StuckWindowSeconds
      commentId: F:SEAN.Metrics.Metrics.StuckWindowSeconds
      language: CSharp
      name:
        CSharp: StuckWindowSeconds
        VB: StuckWindowSeconds
      nameWithType:
        CSharp: Metrics.StuckWindowSeconds
        VB: Metrics.StuckWindowSeconds
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.StuckWindowSeconds
        VB: SEAN.Metrics.Metrics.StuckWindowSeconds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: StuckWindowSeconds
        path: ''
        startLine: 7847
      syntax:
        content:
          CSharp: public float StuckWindowSeconds
          VB: Public StuckWindowSeconds As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.StuckWindowDist
      commentId: F:SEAN.Metrics.Metrics.StuckWindowDist
      language: CSharp
      name:
        CSharp: StuckWindowDist
        VB: StuckWindowDist
      nameWithType:
        CSharp: Metrics.StuckWindowDist
        VB: Metrics.StuckWindowDist
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.StuckWindowDist
        VB: SEAN.Metrics.Metrics.StuckWindowDist
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: StuckWindowDist
        path: ''
        startLine: 7849
      syntax:
        content:
          CSharp: public float StuckWindowDist
          VB: Public StuckWindowDist As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.StartTime
      commentId: P:SEAN.Metrics.Metrics.StartTime
      language: CSharp
      name:
        CSharp: StartTime
        VB: StartTime
      nameWithType:
        CSharp: Metrics.StartTime
        VB: Metrics.StartTime
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.StartTime
        VB: SEAN.Metrics.Metrics.StartTime
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: StartTime
        path: ''
        startLine: 7855
      syntax:
        content:
          CSharp: public Std.MTime StartTime { get; }
          VB: Public ReadOnly Property StartTime As Std.MTime
        parameters: []
        return:
          type: RosMessageTypes.Std.MTime
      overload: SEAN.Metrics.Metrics.StartTime*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.TimeElapsed
      commentId: P:SEAN.Metrics.Metrics.TimeElapsed
      language: CSharp
      name:
        CSharp: TimeElapsed
        VB: TimeElapsed
      nameWithType:
        CSharp: Metrics.TimeElapsed
        VB: Metrics.TimeElapsed
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.TimeElapsed
        VB: SEAN.Metrics.Metrics.TimeElapsed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: TimeElapsed
        path: ''
        startLine: 7862
      syntax:
        content:
          CSharp: public double TimeElapsed { get; }
          VB: Public ReadOnly Property TimeElapsed As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.TimeElapsed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.PeopleCollisions
      commentId: P:SEAN.Metrics.Metrics.PeopleCollisions
      language: CSharp
      name:
        CSharp: PeopleCollisions
        VB: PeopleCollisions
      nameWithType:
        CSharp: Metrics.PeopleCollisions
        VB: Metrics.PeopleCollisions
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.PeopleCollisions
        VB: SEAN.Metrics.Metrics.PeopleCollisions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: PeopleCollisions
        path: ''
        startLine: 7863
      syntax:
        content:
          CSharp: public uint PeopleCollisions { get; }
          VB: Public ReadOnly Property PeopleCollisions As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: SEAN.Metrics.Metrics.PeopleCollisions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.ObjectCollisions
      commentId: P:SEAN.Metrics.Metrics.ObjectCollisions
      language: CSharp
      name:
        CSharp: ObjectCollisions
        VB: ObjectCollisions
      nameWithType:
        CSharp: Metrics.ObjectCollisions
        VB: Metrics.ObjectCollisions
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.ObjectCollisions
        VB: SEAN.Metrics.Metrics.ObjectCollisions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: ObjectCollisions
        path: ''
        startLine: 7864
      syntax:
        content:
          CSharp: public uint ObjectCollisions { get; }
          VB: Public ReadOnly Property ObjectCollisions As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: SEAN.Metrics.Metrics.ObjectCollisions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.MinDistToPed
      commentId: P:SEAN.Metrics.Metrics.MinDistToPed
      language: CSharp
      name:
        CSharp: MinDistToPed
        VB: MinDistToPed
      nameWithType:
        CSharp: Metrics.MinDistToPed
        VB: Metrics.MinDistToPed
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.MinDistToPed
        VB: SEAN.Metrics.Metrics.MinDistToPed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: MinDistToPed
        path: ''
        startLine: 7865
      syntax:
        content:
          CSharp: public double MinDistToPed { get; }
          VB: Public ReadOnly Property MinDistToPed As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.MinDistToPed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.MinDistToTarget
      commentId: P:SEAN.Metrics.Metrics.MinDistToTarget
      language: CSharp
      name:
        CSharp: MinDistToTarget
        VB: MinDistToTarget
      nameWithType:
        CSharp: Metrics.MinDistToTarget
        VB: Metrics.MinDistToTarget
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.MinDistToTarget
        VB: SEAN.Metrics.Metrics.MinDistToTarget
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: MinDistToTarget
        path: ''
        startLine: 7866
      syntax:
        content:
          CSharp: public double MinDistToTarget { get; }
          VB: Public ReadOnly Property MinDistToTarget As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.MinDistToTarget*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.IntimateDistViolations
      commentId: P:SEAN.Metrics.Metrics.IntimateDistViolations
      language: CSharp
      name:
        CSharp: IntimateDistViolations
        VB: IntimateDistViolations
      nameWithType:
        CSharp: Metrics.IntimateDistViolations
        VB: Metrics.IntimateDistViolations
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.IntimateDistViolations
        VB: SEAN.Metrics.Metrics.IntimateDistViolations
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: IntimateDistViolations
        path: ''
        startLine: 7867
      syntax:
        content:
          CSharp: public uint IntimateDistViolations { get; }
          VB: Public ReadOnly Property IntimateDistViolations As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: SEAN.Metrics.Metrics.IntimateDistViolations*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.PersonalDistViolations
      commentId: P:SEAN.Metrics.Metrics.PersonalDistViolations
      language: CSharp
      name:
        CSharp: PersonalDistViolations
        VB: PersonalDistViolations
      nameWithType:
        CSharp: Metrics.PersonalDistViolations
        VB: Metrics.PersonalDistViolations
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.PersonalDistViolations
        VB: SEAN.Metrics.Metrics.PersonalDistViolations
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: PersonalDistViolations
        path: ''
        startLine: 7868
      syntax:
        content:
          CSharp: public uint PersonalDistViolations { get; }
          VB: Public ReadOnly Property PersonalDistViolations As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: SEAN.Metrics.Metrics.PersonalDistViolations*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.HasActors
      commentId: P:SEAN.Metrics.Metrics.HasActors
      language: CSharp
      name:
        CSharp: HasActors
        VB: HasActors
      nameWithType:
        CSharp: Metrics.HasActors
        VB: Metrics.HasActors
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.HasActors
        VB: SEAN.Metrics.Metrics.HasActors
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: HasActors
        path: ''
        startLine: 7869
      syntax:
        content:
          CSharp: public bool HasActors { get; }
          VB: Public ReadOnly Property HasActors As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: SEAN.Metrics.Metrics.HasActors*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.TotalStuckTime
      commentId: P:SEAN.Metrics.Metrics.TotalStuckTime
      language: CSharp
      name:
        CSharp: TotalStuckTime
        VB: TotalStuckTime
      nameWithType:
        CSharp: Metrics.TotalStuckTime
        VB: Metrics.TotalStuckTime
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.TotalStuckTime
        VB: SEAN.Metrics.Metrics.TotalStuckTime
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: TotalStuckTime
        path: ''
        startLine: 7872
      syntax:
        content:
          CSharp: public double TotalStuckTime { get; }
          VB: Public ReadOnly Property TotalStuckTime As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.TotalStuckTime*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal
      commentId: P:SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal
      language: CSharp
      name:
        CSharp: MeanStuckDistanceFromGoal
        VB: MeanStuckDistanceFromGoal
      nameWithType:
        CSharp: Metrics.MeanStuckDistanceFromGoal
        VB: Metrics.MeanStuckDistanceFromGoal
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal
        VB: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: MeanStuckDistanceFromGoal
        path: ''
        startLine: 7874
      syntax:
        content:
          CSharp: public double MeanStuckDistanceFromGoal { get; }
          VB: Public ReadOnly Property MeanStuckDistanceFromGoal As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.OnNewTask
      commentId: M:SEAN.Metrics.Metrics.OnNewTask
      language: CSharp
      name:
        CSharp: OnNewTask()
        VB: OnNewTask()
      nameWithType:
        CSharp: Metrics.OnNewTask()
        VB: Metrics.OnNewTask()
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.OnNewTask()
        VB: SEAN.Metrics.Metrics.OnNewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: OnNewTask
        path: ''
        startLine: 7877
      syntax:
        content:
          CSharp: public void OnNewTask()
          VB: Public Sub OnNewTask
      overload: SEAN.Metrics.Metrics.OnNewTask*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.Start
      commentId: M:SEAN.Metrics.Metrics.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Metrics.Start()
        VB: Metrics.Start()
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.Start()
        VB: SEAN.Metrics.Metrics.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: Start
        path: ''
        startLine: 7884
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Metrics.Metrics.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.Update
      commentId: M:SEAN.Metrics.Metrics.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Metrics.Update()
        VB: Metrics.Update()
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.Update()
        VB: SEAN.Metrics.Metrics.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: Update
        path: ''
        startLine: 7899
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: SEAN.Metrics.Metrics.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.IncrementObjectCollisions
      commentId: M:SEAN.Metrics.Metrics.IncrementObjectCollisions
      language: CSharp
      name:
        CSharp: IncrementObjectCollisions()
        VB: IncrementObjectCollisions()
      nameWithType:
        CSharp: Metrics.IncrementObjectCollisions()
        VB: Metrics.IncrementObjectCollisions()
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.IncrementObjectCollisions()
        VB: SEAN.Metrics.Metrics.IncrementObjectCollisions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: IncrementObjectCollisions
        path: ''
        startLine: 7954
      syntax:
        content:
          CSharp: public void IncrementObjectCollisions()
          VB: Public Sub IncrementObjectCollisions
      overload: SEAN.Metrics.Metrics.IncrementObjectCollisions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.IncrementPeopleCollisions
      commentId: M:SEAN.Metrics.Metrics.IncrementPeopleCollisions
      language: CSharp
      name:
        CSharp: IncrementPeopleCollisions()
        VB: IncrementPeopleCollisions()
      nameWithType:
        CSharp: Metrics.IncrementPeopleCollisions()
        VB: Metrics.IncrementPeopleCollisions()
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.IncrementPeopleCollisions()
        VB: SEAN.Metrics.Metrics.IncrementPeopleCollisions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: IncrementPeopleCollisions
        path: ''
        startLine: 7958
      syntax:
        content:
          CSharp: public void IncrementPeopleCollisions()
          VB: Public Sub IncrementPeopleCollisions
      overload: SEAN.Metrics.Metrics.IncrementPeopleCollisions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations
      commentId: M:SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations
      language: CSharp
      name:
        CSharp: IncrementIntimateSpaceViolations()
        VB: IncrementIntimateSpaceViolations()
      nameWithType:
        CSharp: Metrics.IncrementIntimateSpaceViolations()
        VB: Metrics.IncrementIntimateSpaceViolations()
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations()
        VB: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: IncrementIntimateSpaceViolations
        path: ''
        startLine: 7962
      syntax:
        content:
          CSharp: public void IncrementIntimateSpaceViolations()
          VB: Public Sub IncrementIntimateSpaceViolations
      overload: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.IncrementPersonalDistViolations
      commentId: M:SEAN.Metrics.Metrics.IncrementPersonalDistViolations
      language: CSharp
      name:
        CSharp: IncrementPersonalDistViolations()
        VB: IncrementPersonalDistViolations()
      nameWithType:
        CSharp: Metrics.IncrementPersonalDistViolations()
        VB: Metrics.IncrementPersonalDistViolations()
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.IncrementPersonalDistViolations()
        VB: SEAN.Metrics.Metrics.IncrementPersonalDistViolations()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: IncrementPersonalDistViolations
        path: ''
        startLine: 7966
      syntax:
        content:
          CSharp: public void IncrementPersonalDistViolations()
          VB: Public Sub IncrementPersonalDistViolations
      overload: SEAN.Metrics.Metrics.IncrementPersonalDistViolations*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Metrics.Metrics.AllCollisions
      commentId: P:SEAN.Metrics.Metrics.AllCollisions
      language: CSharp
      name:
        CSharp: AllCollisions
        VB: AllCollisions
      nameWithType:
        CSharp: Metrics.AllCollisions
        VB: Metrics.AllCollisions
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.AllCollisions
        VB: SEAN.Metrics.Metrics.AllCollisions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: AllCollisions
        path: ''
        startLine: 7970
      syntax:
        content:
          CSharp: public uint AllCollisions { get; }
          VB: Public ReadOnly Property AllCollisions As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: SEAN.Metrics.Metrics.AllCollisions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.PathLength
      commentId: P:SEAN.Metrics.Metrics.PathLength
      language: CSharp
      name:
        CSharp: PathLength
        VB: PathLength
      nameWithType:
        CSharp: Metrics.PathLength
        VB: Metrics.PathLength
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.PathLength
        VB: SEAN.Metrics.Metrics.PathLength
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: PathLength
        path: ''
        startLine: 7974
      syntax:
        content:
          CSharp: public double PathLength { get; }
          VB: Public ReadOnly Property PathLength As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.PathLength*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.TargetDist
      commentId: P:SEAN.Metrics.Metrics.TargetDist
      language: CSharp
      name:
        CSharp: TargetDist
        VB: TargetDist
      nameWithType:
        CSharp: Metrics.TargetDist
        VB: Metrics.TargetDist
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.TargetDist
        VB: SEAN.Metrics.Metrics.TargetDist
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: TargetDist
        path: ''
        startLine: 7983
      syntax:
        content:
          CSharp: public double TargetDist { get; }
          VB: Public ReadOnly Property TargetDist As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.TargetDist*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Metrics.Metrics.TargetDistNorm
      commentId: P:SEAN.Metrics.Metrics.TargetDistNorm
      language: CSharp
      name:
        CSharp: TargetDistNorm
        VB: TargetDistNorm
      nameWithType:
        CSharp: Metrics.TargetDistNorm
        VB: Metrics.TargetDistNorm
      qualifiedName:
        CSharp: SEAN.Metrics.Metrics.TargetDistNorm
        VB: SEAN.Metrics.Metrics.TargetDistNorm
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: TargetDistNorm
        path: ''
        startLine: 7987
      syntax:
        content:
          CSharp: public double TargetDistNorm { get; }
          VB: Public ReadOnly Property TargetDistNorm As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.Metrics.Metrics.TargetDistNorm*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: SEAN.Metrics.CountCollisions
    commentId: T:SEAN.Metrics.CountCollisions
    language: CSharp
    name:
      CSharp: CountCollisions
      VB: CountCollisions
    nameWithType:
      CSharp: CountCollisions
      VB: CountCollisions
    qualifiedName:
      CSharp: SEAN.Metrics.CountCollisions
      VB: SEAN.Metrics.CountCollisions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Metrics
    source:
      id: CountCollisions
      path: ''
      startLine: 8015
    syntax:
      content:
        CSharp: 'public class CountCollisions : MonoBehaviour'
        VB: >-
          Public Class CountCollisions

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Metrics.CountCollisions.sean
      commentId: F:SEAN.Metrics.CountCollisions.sean
      language: CSharp
      name:
        CSharp: sean
        VB: sean
      nameWithType:
        CSharp: CountCollisions.sean
        VB: CountCollisions.sean
      qualifiedName:
        CSharp: SEAN.Metrics.CountCollisions.sean
        VB: SEAN.Metrics.CountCollisions.sean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: sean
        path: ''
        startLine: 8019
      syntax:
        content:
          CSharp: protected SEAN sean
          VB: Protected sean As SEAN
        return:
          type: SEAN.SEAN
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Metrics.CountCollisions.CollisionDistance
      commentId: F:SEAN.Metrics.CountCollisions.CollisionDistance
      language: CSharp
      name:
        CSharp: CollisionDistance
        VB: CollisionDistance
      nameWithType:
        CSharp: CountCollisions.CollisionDistance
        VB: CountCollisions.CollisionDistance
      qualifiedName:
        CSharp: SEAN.Metrics.CountCollisions.CollisionDistance
        VB: SEAN.Metrics.CountCollisions.CollisionDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: CollisionDistance
        path: ''
        startLine: 8024
      syntax:
        content:
          CSharp: protected float CollisionDistance
          VB: Protected CollisionDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Metrics.CountCollisions.Start
      commentId: M:SEAN.Metrics.CountCollisions.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: CountCollisions.Start()
        VB: CountCollisions.Start()
      qualifiedName:
        CSharp: SEAN.Metrics.CountCollisions.Start()
        VB: SEAN.Metrics.CountCollisions.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: Start
        path: ''
        startLine: 8026
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Metrics.CountCollisions.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Metrics.MetricsPublisher
    commentId: T:SEAN.Metrics.MetricsPublisher
    language: CSharp
    name:
      CSharp: MetricsPublisher
      VB: MetricsPublisher
    nameWithType:
      CSharp: MetricsPublisher
      VB: MetricsPublisher
    qualifiedName:
      CSharp: SEAN.Metrics.MetricsPublisher
      VB: SEAN.Metrics.MetricsPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Metrics
    source:
      id: MetricsPublisher
      path: ''
      startLine: 8139
    syntax:
      content:
        CSharp: 'public class MetricsPublisher : MonoBehaviour'
        VB: >-
          Public Class MetricsPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Metrics.MetricsPublisher.sean
      commentId: F:SEAN.Metrics.MetricsPublisher.sean
      language: CSharp
      name:
        CSharp: sean
        VB: sean
      nameWithType:
        CSharp: MetricsPublisher.sean
        VB: MetricsPublisher.sean
      qualifiedName:
        CSharp: SEAN.Metrics.MetricsPublisher.sean
        VB: SEAN.Metrics.MetricsPublisher.sean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: sean
        path: ''
        startLine: 8141
      syntax:
        content:
          CSharp: protected SEAN sean
          VB: Protected sean As SEAN
        return:
          type: SEAN.SEAN
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Metrics.MetricsPublisher.ros
      commentId: F:SEAN.Metrics.MetricsPublisher.ros
      language: CSharp
      name:
        CSharp: ros
        VB: ros
      nameWithType:
        CSharp: MetricsPublisher.ros
        VB: MetricsPublisher.ros
      qualifiedName:
        CSharp: SEAN.Metrics.MetricsPublisher.ros
        VB: SEAN.Metrics.MetricsPublisher.ros
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: ros
        path: ''
        startLine: 8142
      syntax:
        content:
          CSharp: protected ROSConnection ros
          VB: Protected ros As ROSConnection
        return:
          type: Global.ROSConnection
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Metrics.MetricsPublisher.TopicName
      commentId: F:SEAN.Metrics.MetricsPublisher.TopicName
      language: CSharp
      name:
        CSharp: TopicName
        VB: TopicName
      nameWithType:
        CSharp: MetricsPublisher.TopicName
        VB: MetricsPublisher.TopicName
      qualifiedName:
        CSharp: SEAN.Metrics.MetricsPublisher.TopicName
        VB: SEAN.Metrics.MetricsPublisher.TopicName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Metrics
      source:
        id: TopicName
        path: ''
        startLine: 8144
      syntax:
        content:
          CSharp: public string TopicName
          VB: Public TopicName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Sensors
  commentId: N:SEAN.Sensors
  language: CSharp
  name:
    CSharp: SEAN.Sensors
    VB: SEAN.Sensors
  nameWithType:
    CSharp: SEAN.Sensors
    VB: SEAN.Sensors
  qualifiedName:
    CSharp: SEAN.Sensors
    VB: SEAN.Sensors
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Sensors.RaycastLaserScanner
    commentId: T:SEAN.Sensors.RaycastLaserScanner
    language: CSharp
    name:
      CSharp: RaycastLaserScanner
      VB: RaycastLaserScanner
    nameWithType:
      CSharp: RaycastLaserScanner
      VB: RaycastLaserScanner
    qualifiedName:
      CSharp: SEAN.Sensors.RaycastLaserScanner
      VB: SEAN.Sensors.RaycastLaserScanner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Sensors
    source:
      id: RaycastLaserScanner
      path: ''
      startLine: 8203
    syntax:
      content:
        CSharp: 'public class RaycastLaserScanner : LaserScanner'
        VB: >-
          Public Class RaycastLaserScanner

              Inherits LaserScanner
    inheritance:
    - System.Object
    - SEAN.Sensors.LaserScanner
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Sensors.RaycastLaserScanner.samples
      commentId: F:SEAN.Sensors.RaycastLaserScanner.samples
      language: CSharp
      name:
        CSharp: samples
        VB: samples
      nameWithType:
        CSharp: RaycastLaserScanner.samples
        VB: RaycastLaserScanner.samples
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.samples
        VB: SEAN.Sensors.RaycastLaserScanner.samples
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: samples
        path: ''
        startLine: 8210
      syntax:
        content:
          CSharp: public int samples
          VB: Public samples As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.update_rate
      commentId: F:SEAN.Sensors.RaycastLaserScanner.update_rate
      language: CSharp
      name:
        CSharp: update_rate
        VB: update_rate
      nameWithType:
        CSharp: RaycastLaserScanner.update_rate
        VB: RaycastLaserScanner.update_rate
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.update_rate
        VB: SEAN.Sensors.RaycastLaserScanner.update_rate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: update_rate
        path: ''
        startLine: 8211
      syntax:
        content:
          CSharp: public int update_rate
          VB: Public update_rate As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.angle_min
      commentId: F:SEAN.Sensors.RaycastLaserScanner.angle_min
      language: CSharp
      name:
        CSharp: angle_min
        VB: angle_min
      nameWithType:
        CSharp: RaycastLaserScanner.angle_min
        VB: RaycastLaserScanner.angle_min
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.angle_min
        VB: SEAN.Sensors.RaycastLaserScanner.angle_min
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: angle_min
        path: ''
        startLine: 8212
      syntax:
        content:
          CSharp: public float angle_min
          VB: Public angle_min As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.angle_max
      commentId: F:SEAN.Sensors.RaycastLaserScanner.angle_max
      language: CSharp
      name:
        CSharp: angle_max
        VB: angle_max
      nameWithType:
        CSharp: RaycastLaserScanner.angle_max
        VB: RaycastLaserScanner.angle_max
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.angle_max
        VB: SEAN.Sensors.RaycastLaserScanner.angle_max
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: angle_max
        path: ''
        startLine: 8213
      syntax:
        content:
          CSharp: public float angle_max
          VB: Public angle_max As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.angle_increment
      commentId: F:SEAN.Sensors.RaycastLaserScanner.angle_increment
      language: CSharp
      name:
        CSharp: angle_increment
        VB: angle_increment
      nameWithType:
        CSharp: RaycastLaserScanner.angle_increment
        VB: RaycastLaserScanner.angle_increment
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.angle_increment
        VB: SEAN.Sensors.RaycastLaserScanner.angle_increment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: angle_increment
        path: ''
        startLine: 8214
      syntax:
        content:
          CSharp: public float angle_increment
          VB: Public angle_increment As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.time_increment
      commentId: F:SEAN.Sensors.RaycastLaserScanner.time_increment
      language: CSharp
      name:
        CSharp: time_increment
        VB: time_increment
      nameWithType:
        CSharp: RaycastLaserScanner.time_increment
        VB: RaycastLaserScanner.time_increment
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.time_increment
        VB: SEAN.Sensors.RaycastLaserScanner.time_increment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: time_increment
        path: ''
        startLine: 8215
      syntax:
        content:
          CSharp: public float time_increment
          VB: Public time_increment As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.scan_time
      commentId: F:SEAN.Sensors.RaycastLaserScanner.scan_time
      language: CSharp
      name:
        CSharp: scan_time
        VB: scan_time
      nameWithType:
        CSharp: RaycastLaserScanner.scan_time
        VB: RaycastLaserScanner.scan_time
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.scan_time
        VB: SEAN.Sensors.RaycastLaserScanner.scan_time
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: scan_time
        path: ''
        startLine: 8216
      syntax:
        content:
          CSharp: public float scan_time
          VB: Public scan_time As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.range_min
      commentId: F:SEAN.Sensors.RaycastLaserScanner.range_min
      language: CSharp
      name:
        CSharp: range_min
        VB: range_min
      nameWithType:
        CSharp: RaycastLaserScanner.range_min
        VB: RaycastLaserScanner.range_min
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.range_min
        VB: SEAN.Sensors.RaycastLaserScanner.range_min
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: range_min
        path: ''
        startLine: 8217
      syntax:
        content:
          CSharp: public float range_min
          VB: Public range_min As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.range_max
      commentId: F:SEAN.Sensors.RaycastLaserScanner.range_max
      language: CSharp
      name:
        CSharp: range_max
        VB: range_max
      nameWithType:
        CSharp: RaycastLaserScanner.range_max
        VB: RaycastLaserScanner.range_max
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.range_max
        VB: SEAN.Sensors.RaycastLaserScanner.range_max
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: range_max
        path: ''
        startLine: 8218
      syntax:
        content:
          CSharp: public float range_max
          VB: Public range_max As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.ranges
      commentId: F:SEAN.Sensors.RaycastLaserScanner.ranges
      language: CSharp
      name:
        CSharp: ranges
        VB: ranges
      nameWithType:
        CSharp: RaycastLaserScanner.ranges
        VB: RaycastLaserScanner.ranges
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.ranges
        VB: SEAN.Sensors.RaycastLaserScanner.ranges
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: ranges
        path: ''
        startLine: 8219
      syntax:
        content:
          CSharp: public float[] ranges
          VB: Public ranges As Single()
        return:
          type: System.Single[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.intensities
      commentId: F:SEAN.Sensors.RaycastLaserScanner.intensities
      language: CSharp
      name:
        CSharp: intensities
        VB: intensities
      nameWithType:
        CSharp: RaycastLaserScanner.intensities
        VB: RaycastLaserScanner.intensities
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.intensities
        VB: SEAN.Sensors.RaycastLaserScanner.intensities
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: intensities
        path: ''
        startLine: 8220
      syntax:
        content:
          CSharp: public float[] intensities
          VB: Public intensities As Single()
        return:
          type: System.Single[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.Start
      commentId: M:SEAN.Sensors.RaycastLaserScanner.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: RaycastLaserScanner.Start()
        VB: RaycastLaserScanner.Start()
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.Start()
        VB: SEAN.Sensors.RaycastLaserScanner.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: Start
        path: ''
        startLine: 8222
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Sensors.RaycastLaserScanner.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.RaycastLaserScanner.InitializeMessage(System.String)
      commentId: M:SEAN.Sensors.RaycastLaserScanner.InitializeMessage(System.String)
      language: CSharp
      name:
        CSharp: InitializeMessage(String)
        VB: InitializeMessage(String)
      nameWithType:
        CSharp: RaycastLaserScanner.InitializeMessage(String)
        VB: RaycastLaserScanner.InitializeMessage(String)
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.InitializeMessage(System.String)
        VB: SEAN.Sensors.RaycastLaserScanner.InitializeMessage(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: InitializeMessage
        path: ''
        startLine: 8231
      syntax:
        content:
          CSharp: public override MLaserScan InitializeMessage(string FrameId)
          VB: Public Overrides Function InitializeMessage(FrameId As String) As MLaserScan
        parameters:
        - id: FrameId
          type: System.String
        return:
          type: RosMessageTypes.Sensor.MLaserScan
      overload: SEAN.Sensors.RaycastLaserScanner.InitializeMessage*
      overridden: SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: SEAN.Sensors.RaycastLaserScanner.ScanPeriod
      commentId: M:SEAN.Sensors.RaycastLaserScanner.ScanPeriod
      language: CSharp
      name:
        CSharp: ScanPeriod()
        VB: ScanPeriod()
      nameWithType:
        CSharp: RaycastLaserScanner.ScanPeriod()
        VB: RaycastLaserScanner.ScanPeriod()
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.ScanPeriod()
        VB: SEAN.Sensors.RaycastLaserScanner.ScanPeriod()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: ScanPeriod
        path: ''
        startLine: 8248
      syntax:
        content:
          CSharp: public override float ScanPeriod()
          VB: Public Overrides Function ScanPeriod As Single
        return:
          type: System.Single
      overload: SEAN.Sensors.RaycastLaserScanner.ScanPeriod*
      overridden: SEAN.Sensors.LaserScanner.ScanPeriod
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: SEAN.Sensors.RaycastLaserScanner.Scan
      commentId: M:SEAN.Sensors.RaycastLaserScanner.Scan
      language: CSharp
      name:
        CSharp: Scan()
        VB: Scan()
      nameWithType:
        CSharp: RaycastLaserScanner.Scan()
        VB: RaycastLaserScanner.Scan()
      qualifiedName:
        CSharp: SEAN.Sensors.RaycastLaserScanner.Scan()
        VB: SEAN.Sensors.RaycastLaserScanner.Scan()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: Scan
        path: ''
        startLine: 8252
      syntax:
        content:
          CSharp: public override float[] Scan()
          VB: Public Overrides Function Scan As Single()
        return:
          type: System.Single[]
      overload: SEAN.Sensors.RaycastLaserScanner.Scan*
      overridden: SEAN.Sensors.LaserScanner.Scan
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SEAN.Sensors.LaserScanPublisher
    commentId: T:SEAN.Sensors.LaserScanPublisher
    language: CSharp
    name:
      CSharp: LaserScanPublisher
      VB: LaserScanPublisher
    nameWithType:
      CSharp: LaserScanPublisher
      VB: LaserScanPublisher
    qualifiedName:
      CSharp: SEAN.Sensors.LaserScanPublisher
      VB: SEAN.Sensors.LaserScanPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Sensors
    source:
      id: LaserScanPublisher
      path: ''
      startLine: 8303
    syntax:
      content:
        CSharp: 'public class LaserScanPublisher : MonoBehaviour'
        VB: >-
          Public Class LaserScanPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Sensors.LaserScanPublisher.Topic
      commentId: F:SEAN.Sensors.LaserScanPublisher.Topic
      language: CSharp
      name:
        CSharp: Topic
        VB: Topic
      nameWithType:
        CSharp: LaserScanPublisher.Topic
        VB: LaserScanPublisher.Topic
      qualifiedName:
        CSharp: SEAN.Sensors.LaserScanPublisher.Topic
        VB: SEAN.Sensors.LaserScanPublisher.Topic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: Topic
        path: ''
        startLine: 8307
      syntax:
        content:
          CSharp: public string Topic
          VB: Public Topic As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Sensors.LaserScanPublisher.FrameId
      commentId: F:SEAN.Sensors.LaserScanPublisher.FrameId
      language: CSharp
      name:
        CSharp: FrameId
        VB: FrameId
      nameWithType:
        CSharp: LaserScanPublisher.FrameId
        VB: LaserScanPublisher.FrameId
      qualifiedName:
        CSharp: SEAN.Sensors.LaserScanPublisher.FrameId
        VB: SEAN.Sensors.LaserScanPublisher.FrameId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: FrameId
        path: ''
        startLine: 8309
      syntax:
        content:
          CSharp: public string FrameId
          VB: Public FrameId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Sensors.LaserScanner
    commentId: T:SEAN.Sensors.LaserScanner
    language: CSharp
    name:
      CSharp: LaserScanner
      VB: LaserScanner
    nameWithType:
      CSharp: LaserScanner
      VB: LaserScanner
    qualifiedName:
      CSharp: SEAN.Sensors.LaserScanner
      VB: SEAN.Sensors.LaserScanner
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Sensors
    source:
      id: LaserScanner
      path: ''
      startLine: 8350
    syntax:
      content:
        CSharp: 'public abstract class LaserScanner : MonoBehaviour'
        VB: >-
          Public MustInherit Class LaserScanner

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: SEAN.Sensors.LaserScanner.Scan
      commentId: M:SEAN.Sensors.LaserScanner.Scan
      language: CSharp
      name:
        CSharp: Scan()
        VB: Scan()
      nameWithType:
        CSharp: LaserScanner.Scan()
        VB: LaserScanner.Scan()
      qualifiedName:
        CSharp: SEAN.Sensors.LaserScanner.Scan()
        VB: SEAN.Sensors.LaserScanner.Scan()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: Scan
        path: ''
        startLine: 8351
      syntax:
        content:
          CSharp: public abstract float[] Scan()
          VB: Public MustOverride Function Scan As Single()
        return:
          type: System.Single[]
      overload: SEAN.Sensors.LaserScanner.Scan*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: SEAN.Sensors.LaserScanner.ScanPeriod
      commentId: M:SEAN.Sensors.LaserScanner.ScanPeriod
      language: CSharp
      name:
        CSharp: ScanPeriod()
        VB: ScanPeriod()
      nameWithType:
        CSharp: LaserScanner.ScanPeriod()
        VB: LaserScanner.ScanPeriod()
      qualifiedName:
        CSharp: SEAN.Sensors.LaserScanner.ScanPeriod()
        VB: SEAN.Sensors.LaserScanner.ScanPeriod()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: ScanPeriod
        path: ''
        startLine: 8352
      syntax:
        content:
          CSharp: public abstract float ScanPeriod()
          VB: Public MustOverride Function ScanPeriod As Single
        return:
          type: System.Single
      overload: SEAN.Sensors.LaserScanner.ScanPeriod*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
      commentId: M:SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
      language: CSharp
      name:
        CSharp: InitializeMessage(String)
        VB: InitializeMessage(String)
      nameWithType:
        CSharp: LaserScanner.InitializeMessage(String)
        VB: LaserScanner.InitializeMessage(String)
      qualifiedName:
        CSharp: SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
        VB: SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Sensors
      source:
        id: InitializeMessage
        path: ''
        startLine: 8353
      syntax:
        content:
          CSharp: public abstract MLaserScan InitializeMessage(string FrameID)
          VB: Public MustOverride Function InitializeMessage(FrameID As String) As MLaserScan
        parameters:
        - id: FrameID
          type: System.String
        return:
          type: RosMessageTypes.Sensor.MLaserScan
      overload: SEAN.Sensors.LaserScanner.InitializeMessage*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
- id: SEAN.Tasks
  commentId: N:SEAN.Tasks
  language: CSharp
  name:
    CSharp: SEAN.Tasks
    VB: SEAN.Tasks
  nameWithType:
    CSharp: SEAN.Tasks
    VB: SEAN.Tasks
  qualifiedName:
    CSharp: SEAN.Tasks
    VB: SEAN.Tasks
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Tasks.TaskRandomABNav
    commentId: T:SEAN.Tasks.TaskRandomABNav
    language: CSharp
    name:
      CSharp: TaskRandomABNav
      VB: TaskRandomABNav
    nameWithType:
      CSharp: TaskRandomABNav
      VB: TaskRandomABNav
    qualifiedName:
      CSharp: SEAN.Tasks.TaskRandomABNav
      VB: SEAN.Tasks.TaskRandomABNav
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: TaskRandomABNav
      path: ''
      startLine: 8367
    syntax:
      content:
        CSharp: 'public class TaskRandomABNav : BaseTask'
        VB: >-
          Public Class TaskRandomABNav

              Inherits BaseTask
    inheritance:
    - System.Object
    - SEAN.Tasks.BaseTask
    inheritedMembers:
    - SEAN.Tasks.BaseTask.start
    - SEAN.Tasks.BaseTask.goal
    - SEAN.Tasks.BaseTask.onNewTask
    - SEAN.Tasks.BaseTask.PublishGoal
    - SEAN.Tasks.BaseTask.Topic
    - SEAN.Tasks.BaseTask.FrameID
    - SEAN.Tasks.BaseTask.sean
    - SEAN.Tasks.BaseTask.debounceTimeoutSec
    - SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    - SEAN.Tasks.BaseTask.startTransform
    - SEAN.Tasks.BaseTask.goalTransform
    - SEAN.Tasks.BaseTask.completionDistance
    - SEAN.Tasks.BaseTask.isRunning
    - SEAN.Tasks.BaseTask.Start
    - SEAN.Tasks.BaseTask.Update
    - SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
    - SEAN.Tasks.BaseTask.GetRandomRotation
    - SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
    - SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Tasks.TaskRandomABNav.NewTask
      commentId: M:SEAN.Tasks.TaskRandomABNav.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: TaskRandomABNav.NewTask()
        VB: TaskRandomABNav.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.TaskRandomABNav.NewTask()
        VB: SEAN.Tasks.TaskRandomABNav.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8369
      syntax:
        content:
          CSharp: protected override bool NewTask()
          VB: Protected Overrides Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.TaskRandomABNav.NewTask*
      overridden: SEAN.Tasks.BaseTask.NewTask
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: SEAN.Tasks.OnNewTask
    commentId: T:SEAN.Tasks.OnNewTask
    language: CSharp
    name:
      CSharp: OnNewTask
      VB: OnNewTask
    nameWithType:
      CSharp: OnNewTask
      VB: OnNewTask
    qualifiedName:
      CSharp: SEAN.Tasks.OnNewTask
      VB: SEAN.Tasks.OnNewTask
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: OnNewTask
      path: ''
      startLine: 8399
    summary: "\nDelegates to call when a new task is started\n"
    example: []
    syntax:
      content:
        CSharp: public delegate void OnNewTask();
        VB: Public Delegate Sub OnNewTask
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: SEAN.Tasks.BaseTask
    commentId: T:SEAN.Tasks.BaseTask
    language: CSharp
    name:
      CSharp: BaseTask
      VB: BaseTask
    nameWithType:
      CSharp: BaseTask
      VB: BaseTask
    qualifiedName:
      CSharp: SEAN.Tasks.BaseTask
      VB: SEAN.Tasks.BaseTask
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: BaseTask
      path: ''
      startLine: 8401
    syntax:
      content:
        CSharp: 'public abstract class BaseTask : MonoBehaviour'
        VB: >-
          Public MustInherit Class BaseTask

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: SEAN.Tasks.BaseTask.start
      commentId: F:SEAN.Tasks.BaseTask.start
      language: CSharp
      name:
        CSharp: start
        VB: start
      nameWithType:
        CSharp: BaseTask.start
        VB: BaseTask.start
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.start
        VB: SEAN.Tasks.BaseTask.start
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: start
        path: ''
        startLine: 8403
      syntax:
        content:
          CSharp: public GameObject start
          VB: Public start As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.goal
      commentId: F:SEAN.Tasks.BaseTask.goal
      language: CSharp
      name:
        CSharp: goal
        VB: goal
      nameWithType:
        CSharp: BaseTask.goal
        VB: BaseTask.goal
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.goal
        VB: SEAN.Tasks.BaseTask.goal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: goal
        path: ''
        startLine: 8404
      syntax:
        content:
          CSharp: public GameObject goal
          VB: Public goal As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.onNewTask
      commentId: F:SEAN.Tasks.BaseTask.onNewTask
      language: CSharp
      name:
        CSharp: onNewTask
        VB: onNewTask
      nameWithType:
        CSharp: BaseTask.onNewTask
        VB: BaseTask.onNewTask
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.onNewTask
        VB: SEAN.Tasks.BaseTask.onNewTask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: onNewTask
        path: ''
        startLine: 8409
      syntax:
        content:
          CSharp: public OnNewTask onNewTask
          VB: Public onNewTask As OnNewTask
        return:
          type: SEAN.Tasks.OnNewTask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.PublishGoal
      commentId: F:SEAN.Tasks.BaseTask.PublishGoal
      language: CSharp
      name:
        CSharp: PublishGoal
        VB: PublishGoal
      nameWithType:
        CSharp: BaseTask.PublishGoal
        VB: BaseTask.PublishGoal
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.PublishGoal
        VB: SEAN.Tasks.BaseTask.PublishGoal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: PublishGoal
        path: ''
        startLine: 8411
      syntax:
        content:
          CSharp: public bool PublishGoal
          VB: Public PublishGoal As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.Topic
      commentId: F:SEAN.Tasks.BaseTask.Topic
      language: CSharp
      name:
        CSharp: Topic
        VB: Topic
      nameWithType:
        CSharp: BaseTask.Topic
        VB: BaseTask.Topic
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.Topic
        VB: SEAN.Tasks.BaseTask.Topic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: Topic
        path: ''
        startLine: 8412
      syntax:
        content:
          CSharp: public static string Topic
          VB: Public Shared Topic As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Tasks.BaseTask.FrameID
      commentId: F:SEAN.Tasks.BaseTask.FrameID
      language: CSharp
      name:
        CSharp: FrameID
        VB: FrameID
      nameWithType:
        CSharp: BaseTask.FrameID
        VB: BaseTask.FrameID
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.FrameID
        VB: SEAN.Tasks.BaseTask.FrameID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: FrameID
        path: ''
        startLine: 8413
      syntax:
        content:
          CSharp: public string FrameID
          VB: Public FrameID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.sean
      commentId: F:SEAN.Tasks.BaseTask.sean
      language: CSharp
      name:
        CSharp: sean
        VB: sean
      nameWithType:
        CSharp: BaseTask.sean
        VB: BaseTask.sean
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.sean
        VB: SEAN.Tasks.BaseTask.sean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: sean
        path: ''
        startLine: 8415
      syntax:
        content:
          CSharp: protected SEAN sean
          VB: Protected sean As SEAN
        return:
          type: SEAN.SEAN
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Tasks.BaseTask.debounceTimeoutSec
      commentId: F:SEAN.Tasks.BaseTask.debounceTimeoutSec
      language: CSharp
      name:
        CSharp: debounceTimeoutSec
        VB: debounceTimeoutSec
      nameWithType:
        CSharp: BaseTask.debounceTimeoutSec
        VB: BaseTask.debounceTimeoutSec
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.debounceTimeoutSec
        VB: SEAN.Tasks.BaseTask.debounceTimeoutSec
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: debounceTimeoutSec
        path: ''
        startLine: 8419
      syntax:
        content:
          CSharp: public float debounceTimeoutSec
          VB: Public debounceTimeoutSec As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
      commentId: F:SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
      language: CSharp
      name:
        CSharp: debounceStartupTimeoutSec
        VB: debounceStartupTimeoutSec
      nameWithType:
        CSharp: BaseTask.debounceStartupTimeoutSec
        VB: BaseTask.debounceStartupTimeoutSec
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
        VB: SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: debounceStartupTimeoutSec
        path: ''
        startLine: 8421
      syntax:
        content:
          CSharp: public float debounceStartupTimeoutSec
          VB: Public debounceStartupTimeoutSec As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.startTransform
      commentId: P:SEAN.Tasks.BaseTask.startTransform
      language: CSharp
      name:
        CSharp: startTransform
        VB: startTransform
      nameWithType:
        CSharp: BaseTask.startTransform
        VB: BaseTask.startTransform
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.startTransform
        VB: SEAN.Tasks.BaseTask.startTransform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: startTransform
        path: ''
        startLine: 8424
      syntax:
        content:
          CSharp: public Transform startTransform { get; set; }
          VB: Public Property startTransform As Transform
        parameters: []
        return:
          type: Global.Transform
      overload: SEAN.Tasks.BaseTask.startTransform*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.goalTransform
      commentId: P:SEAN.Tasks.BaseTask.goalTransform
      language: CSharp
      name:
        CSharp: goalTransform
        VB: goalTransform
      nameWithType:
        CSharp: BaseTask.goalTransform
        VB: BaseTask.goalTransform
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.goalTransform
        VB: SEAN.Tasks.BaseTask.goalTransform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: goalTransform
        path: ''
        startLine: 8432
      syntax:
        content:
          CSharp: public Transform goalTransform { get; set; }
          VB: Public Property goalTransform As Transform
        parameters: []
        return:
          type: Global.Transform
      overload: SEAN.Tasks.BaseTask.goalTransform*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.completionDistance
      commentId: F:SEAN.Tasks.BaseTask.completionDistance
      language: CSharp
      name:
        CSharp: completionDistance
        VB: completionDistance
      nameWithType:
        CSharp: BaseTask.completionDistance
        VB: BaseTask.completionDistance
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.completionDistance
        VB: SEAN.Tasks.BaseTask.completionDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: completionDistance
        path: ''
        startLine: 8441
      syntax:
        content:
          CSharp: public float completionDistance
          VB: Public completionDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.isRunning
      commentId: P:SEAN.Tasks.BaseTask.isRunning
      language: CSharp
      name:
        CSharp: isRunning
        VB: isRunning
      nameWithType:
        CSharp: BaseTask.isRunning
        VB: BaseTask.isRunning
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.isRunning
        VB: SEAN.Tasks.BaseTask.isRunning
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: isRunning
        path: ''
        startLine: 8443
      syntax:
        content:
          CSharp: public bool isRunning { get; }
          VB: Public ReadOnly Property isRunning As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: SEAN.Tasks.BaseTask.isRunning*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Tasks.BaseTask.NewTask
      commentId: M:SEAN.Tasks.BaseTask.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: BaseTask.NewTask()
        VB: BaseTask.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.NewTask()
        VB: SEAN.Tasks.BaseTask.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8446
      syntax:
        content:
          CSharp: protected abstract bool NewTask()
          VB: Protected MustOverride Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.BaseTask.NewTask*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: SEAN.Tasks.BaseTask.Start
      commentId: M:SEAN.Tasks.BaseTask.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: BaseTask.Start()
        VB: BaseTask.Start()
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.Start()
        VB: SEAN.Tasks.BaseTask.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: Start
        path: ''
        startLine: 8453
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: SEAN.Tasks.BaseTask.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: SEAN.Tasks.BaseTask.Update
      commentId: M:SEAN.Tasks.BaseTask.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: BaseTask.Update()
        VB: BaseTask.Update()
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.Update()
        VB: SEAN.Tasks.BaseTask.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: Update
        path: ''
        startLine: 8469
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: SEAN.Tasks.BaseTask.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.BaseTask.GetNavmeshRandomVector
      commentId: M:SEAN.Tasks.BaseTask.GetNavmeshRandomVector
      language: CSharp
      name:
        CSharp: GetNavmeshRandomVector()
        VB: GetNavmeshRandomVector()
      nameWithType:
        CSharp: BaseTask.GetNavmeshRandomVector()
        VB: BaseTask.GetNavmeshRandomVector()
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.GetNavmeshRandomVector()
        VB: SEAN.Tasks.BaseTask.GetNavmeshRandomVector()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: GetNavmeshRandomVector
        path: ''
        startLine: 8544
      summary: "\nSample a point on the navmesh.\nbased on: https://answers.unity.com/questions/857827/pick-random-point-on-navmesh.html\n"
      example: []
      syntax:
        content:
          CSharp: protected Vector3 GetNavmeshRandomVector()
          VB: Protected Function GetNavmeshRandomVector As Vector3
        return:
          type: Global.Vector3
          description: Vector3 uniform(ish) random point on navmesh
      overload: SEAN.Tasks.BaseTask.GetNavmeshRandomVector*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
      commentId: M:SEAN.Tasks.BaseTask.GetNavmeshRandomHit
      language: CSharp
      name:
        CSharp: GetNavmeshRandomHit()
        VB: GetNavmeshRandomHit()
      nameWithType:
        CSharp: BaseTask.GetNavmeshRandomHit()
        VB: BaseTask.GetNavmeshRandomHit()
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.GetNavmeshRandomHit()
        VB: SEAN.Tasks.BaseTask.GetNavmeshRandomHit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: GetNavmeshRandomHit
        path: ''
        startLine: 8568
      syntax:
        content:
          CSharp: protected UnityEngine.AI.NavMeshHit GetNavmeshRandomHit()
          VB: Protected Function GetNavmeshRandomHit As UnityEngine.AI.NavMeshHit
        return:
          type: Global.UnityEngine.AI.NavMeshHit
      overload: SEAN.Tasks.BaseTask.GetNavmeshRandomHit*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
      commentId: M:SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetNavmeshRandomHit(Vector3, Single, Single)
        VB: GetNavmeshRandomHit(Vector3, Single, Single)
      nameWithType:
        CSharp: BaseTask.GetNavmeshRandomHit(Vector3, Single, Single)
        VB: BaseTask.GetNavmeshRandomHit(Vector3, Single, Single)
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3, System.Single, System.Single)
        VB: SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: GetNavmeshRandomHit
        path: ''
        startLine: 8575
      syntax:
        content:
          CSharp: protected UnityEngine.AI.NavMeshHit GetNavmeshRandomHit(Vector3 nearPosition, float distance, float maxDistance = 1F)
          VB: Protected Function GetNavmeshRandomHit(nearPosition As Vector3, distance As Single, maxDistance As Single = 1F) As UnityEngine.AI.NavMeshHit
        parameters:
        - id: nearPosition
          type: Global.Vector3
        - id: distance
          type: System.Single
        - id: maxDistance
          type: System.Single
        return:
          type: Global.UnityEngine.AI.NavMeshHit
      overload: SEAN.Tasks.BaseTask.GetNavmeshRandomHit*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Tasks.BaseTask.GetRandomRotation
      commentId: M:SEAN.Tasks.BaseTask.GetRandomRotation
      language: CSharp
      name:
        CSharp: GetRandomRotation()
        VB: GetRandomRotation()
      nameWithType:
        CSharp: BaseTask.GetRandomRotation()
        VB: BaseTask.GetRandomRotation()
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.GetRandomRotation()
        VB: SEAN.Tasks.BaseTask.GetRandomRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: GetRandomRotation
        path: ''
        startLine: 8589
      summary: "\nGet a random rotation along the ground plane (y-axis rotation)\n"
      example: []
      syntax:
        content:
          CSharp: protected Quaternion GetRandomRotation()
          VB: Protected Function GetRandomRotation As Quaternion
        return:
          type: Global.Quaternion
          description: Quaternion randomly rotated aroudn the y-axis
      overload: SEAN.Tasks.BaseTask.GetRandomRotation*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
      commentId: M:SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
      language: CSharp
      name:
        CSharp: GetRandomGroup(out Vector3)
        VB: GetRandomGroup(ByRef Vector3)
      nameWithType:
        CSharp: BaseTask.GetRandomGroup(out Vector3)
        VB: BaseTask.GetRandomGroup(ByRef Vector3)
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.GetRandomGroup(out Vector3)
        VB: SEAN.Tasks.BaseTask.GetRandomGroup(ByRef Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: GetRandomGroup
        path: ''
        startLine: 8597
      summary: "\nSample a random group (from ground truth, if available)\n"
      example: []
      syntax:
        content:
          CSharp: protected bool GetRandomGroup(out Vector3 center)
          VB: Protected Function GetRandomGroup(ByRef center As Vector3) As Boolean
        parameters:
        - id: center
          type: Global.Vector3
        return:
          type: System.Boolean
          description: ''
      overload: SEAN.Tasks.BaseTask.GetRandomGroup*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
      commentId: M:SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
      language: CSharp
      name:
        CSharp: GetRandomGroupMembershipTransform(out Vector3, out Quaternion)
        VB: GetRandomGroupMembershipTransform(ByRef Vector3, ByRef Quaternion)
      nameWithType:
        CSharp: BaseTask.GetRandomGroupMembershipTransform(out Vector3, out Quaternion)
        VB: BaseTask.GetRandomGroupMembershipTransform(ByRef Vector3, ByRef Quaternion)
      qualifiedName:
        CSharp: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(out Vector3, out Quaternion)
        VB: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(ByRef Vector3, ByRef Quaternion)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: GetRandomGroupMembershipTransform
        path: ''
        startLine: 8610
      summary: "\nSample a random and unoccupied group member position (from ground truth, if available)\n"
      example: []
      syntax:
        content:
          CSharp: protected bool GetRandomGroupMembershipTransform(out Vector3 position, out Quaternion rotation)
          VB: Protected Function GetRandomGroupMembershipTransform(ByRef position As Vector3, ByRef rotation As Quaternion) As Boolean
        parameters:
        - id: position
          type: Global.Vector3
        - id: rotation
          type: Global.Quaternion
        return:
          type: System.Boolean
          description: true if a group center is found and returned via the output argument
      overload: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: SEAN.Tasks.TaskJoinGroup
    commentId: T:SEAN.Tasks.TaskJoinGroup
    language: CSharp
    name:
      CSharp: TaskJoinGroup
      VB: TaskJoinGroup
    nameWithType:
      CSharp: TaskJoinGroup
      VB: TaskJoinGroup
    qualifiedName:
      CSharp: SEAN.Tasks.TaskJoinGroup
      VB: SEAN.Tasks.TaskJoinGroup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: TaskJoinGroup
      path: ''
      startLine: 8640
    syntax:
      content:
        CSharp: 'public class TaskJoinGroup : BaseTask'
        VB: >-
          Public Class TaskJoinGroup

              Inherits BaseTask
    inheritance:
    - System.Object
    - SEAN.Tasks.BaseTask
    inheritedMembers:
    - SEAN.Tasks.BaseTask.start
    - SEAN.Tasks.BaseTask.goal
    - SEAN.Tasks.BaseTask.onNewTask
    - SEAN.Tasks.BaseTask.PublishGoal
    - SEAN.Tasks.BaseTask.Topic
    - SEAN.Tasks.BaseTask.FrameID
    - SEAN.Tasks.BaseTask.sean
    - SEAN.Tasks.BaseTask.debounceTimeoutSec
    - SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    - SEAN.Tasks.BaseTask.startTransform
    - SEAN.Tasks.BaseTask.goalTransform
    - SEAN.Tasks.BaseTask.completionDistance
    - SEAN.Tasks.BaseTask.isRunning
    - SEAN.Tasks.BaseTask.Start
    - SEAN.Tasks.BaseTask.Update
    - SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
    - SEAN.Tasks.BaseTask.GetRandomRotation
    - SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
    - SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Tasks.TaskJoinGroup.startDistance
      commentId: F:SEAN.Tasks.TaskJoinGroup.startDistance
      language: CSharp
      name:
        CSharp: startDistance
        VB: startDistance
      nameWithType:
        CSharp: TaskJoinGroup.startDistance
        VB: TaskJoinGroup.startDistance
      qualifiedName:
        CSharp: SEAN.Tasks.TaskJoinGroup.startDistance
        VB: SEAN.Tasks.TaskJoinGroup.startDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: startDistance
        path: ''
        startLine: 8642
      syntax:
        content:
          CSharp: public float startDistance
          VB: Public startDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.TaskJoinGroup.#ctor
      commentId: M:SEAN.Tasks.TaskJoinGroup.#ctor
      language: CSharp
      name:
        CSharp: TaskJoinGroup()
        VB: TaskJoinGroup()
      nameWithType:
        CSharp: TaskJoinGroup.TaskJoinGroup()
        VB: TaskJoinGroup.TaskJoinGroup()
      qualifiedName:
        CSharp: SEAN.Tasks.TaskJoinGroup.TaskJoinGroup()
        VB: SEAN.Tasks.TaskJoinGroup.TaskJoinGroup()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: .ctor
        path: ''
        startLine: 8643
      syntax:
        content:
          CSharp: public TaskJoinGroup()
          VB: Public Sub New
      overload: SEAN.Tasks.TaskJoinGroup.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.TaskJoinGroup.NewTask
      commentId: M:SEAN.Tasks.TaskJoinGroup.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: TaskJoinGroup.NewTask()
        VB: TaskJoinGroup.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.TaskJoinGroup.NewTask()
        VB: SEAN.Tasks.TaskJoinGroup.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8647
      syntax:
        content:
          CSharp: protected override bool NewTask()
          VB: Protected Overrides Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.TaskJoinGroup.NewTask*
      overridden: SEAN.Tasks.BaseTask.NewTask
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: SEAN.Tasks.TaskHandcraftedSocialSituation
    commentId: T:SEAN.Tasks.TaskHandcraftedSocialSituation
    language: CSharp
    name:
      CSharp: TaskHandcraftedSocialSituation
      VB: TaskHandcraftedSocialSituation
    nameWithType:
      CSharp: TaskHandcraftedSocialSituation
      VB: TaskHandcraftedSocialSituation
    qualifiedName:
      CSharp: SEAN.Tasks.TaskHandcraftedSocialSituation
      VB: SEAN.Tasks.TaskHandcraftedSocialSituation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: TaskHandcraftedSocialSituation
      path: ''
      startLine: 8701
    syntax:
      content:
        CSharp: 'public class TaskHandcraftedSocialSituation : BaseTask'
        VB: >-
          Public Class TaskHandcraftedSocialSituation

              Inherits BaseTask
    inheritance:
    - System.Object
    - SEAN.Tasks.BaseTask
    inheritedMembers:
    - SEAN.Tasks.BaseTask.start
    - SEAN.Tasks.BaseTask.goal
    - SEAN.Tasks.BaseTask.onNewTask
    - SEAN.Tasks.BaseTask.PublishGoal
    - SEAN.Tasks.BaseTask.Topic
    - SEAN.Tasks.BaseTask.FrameID
    - SEAN.Tasks.BaseTask.sean
    - SEAN.Tasks.BaseTask.debounceTimeoutSec
    - SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    - SEAN.Tasks.BaseTask.startTransform
    - SEAN.Tasks.BaseTask.goalTransform
    - SEAN.Tasks.BaseTask.completionDistance
    - SEAN.Tasks.BaseTask.isRunning
    - SEAN.Tasks.BaseTask.Start
    - SEAN.Tasks.BaseTask.Update
    - SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
    - SEAN.Tasks.BaseTask.GetRandomRotation
    - SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
    - SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Tasks.TaskHandcraftedSocialSituation.socialSituation
      commentId: F:SEAN.Tasks.TaskHandcraftedSocialSituation.socialSituation
      language: CSharp
      name:
        CSharp: socialSituation
        VB: socialSituation
      nameWithType:
        CSharp: TaskHandcraftedSocialSituation.socialSituation
        VB: TaskHandcraftedSocialSituation.socialSituation
      qualifiedName:
        CSharp: SEAN.Tasks.TaskHandcraftedSocialSituation.socialSituation
        VB: SEAN.Tasks.TaskHandcraftedSocialSituation.socialSituation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: socialSituation
        path: ''
        startLine: 8703
      syntax:
        content:
          CSharp: public SocialSituation socialSituation
          VB: Public socialSituation As SocialSituation
        return:
          type: SEAN.Situations.Scenario.SocialSituation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask
      commentId: M:SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: TaskHandcraftedSocialSituation.NewTask()
        VB: TaskHandcraftedSocialSituation.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask()
        VB: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8705
      syntax:
        content:
          CSharp: protected override bool NewTask()
          VB: Protected Overrides Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask*
      overridden: SEAN.Tasks.BaseTask.NewTask
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: SEAN.Tasks.TaskCrowdedABNav
    commentId: T:SEAN.Tasks.TaskCrowdedABNav
    language: CSharp
    name:
      CSharp: TaskCrowdedABNav
      VB: TaskCrowdedABNav
    nameWithType:
      CSharp: TaskCrowdedABNav
      VB: TaskCrowdedABNav
    qualifiedName:
      CSharp: SEAN.Tasks.TaskCrowdedABNav
      VB: SEAN.Tasks.TaskCrowdedABNav
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: TaskCrowdedABNav
      path: ''
      startLine: 8733
    syntax:
      content:
        CSharp: 'public class TaskCrowdedABNav : BaseTask'
        VB: >-
          Public Class TaskCrowdedABNav

              Inherits BaseTask
    inheritance:
    - System.Object
    - SEAN.Tasks.BaseTask
    inheritedMembers:
    - SEAN.Tasks.BaseTask.start
    - SEAN.Tasks.BaseTask.goal
    - SEAN.Tasks.BaseTask.onNewTask
    - SEAN.Tasks.BaseTask.PublishGoal
    - SEAN.Tasks.BaseTask.Topic
    - SEAN.Tasks.BaseTask.FrameID
    - SEAN.Tasks.BaseTask.sean
    - SEAN.Tasks.BaseTask.debounceTimeoutSec
    - SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    - SEAN.Tasks.BaseTask.startTransform
    - SEAN.Tasks.BaseTask.goalTransform
    - SEAN.Tasks.BaseTask.completionDistance
    - SEAN.Tasks.BaseTask.isRunning
    - SEAN.Tasks.BaseTask.Start
    - SEAN.Tasks.BaseTask.Update
    - SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
    - SEAN.Tasks.BaseTask.GetRandomRotation
    - SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
    - SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Tasks.TaskCrowdedABNav.DistanceFromBiggestGroupCentroid
      commentId: F:SEAN.Tasks.TaskCrowdedABNav.DistanceFromBiggestGroupCentroid
      language: CSharp
      name:
        CSharp: DistanceFromBiggestGroupCentroid
        VB: DistanceFromBiggestGroupCentroid
      nameWithType:
        CSharp: TaskCrowdedABNav.DistanceFromBiggestGroupCentroid
        VB: TaskCrowdedABNav.DistanceFromBiggestGroupCentroid
      qualifiedName:
        CSharp: SEAN.Tasks.TaskCrowdedABNav.DistanceFromBiggestGroupCentroid
        VB: SEAN.Tasks.TaskCrowdedABNav.DistanceFromBiggestGroupCentroid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: DistanceFromBiggestGroupCentroid
        path: ''
        startLine: 8737
      syntax:
        content:
          CSharp: public float DistanceFromBiggestGroupCentroid
          VB: Public DistanceFromBiggestGroupCentroid As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.TaskCrowdedABNav.NewTask
      commentId: M:SEAN.Tasks.TaskCrowdedABNav.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: TaskCrowdedABNav.NewTask()
        VB: TaskCrowdedABNav.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.TaskCrowdedABNav.NewTask()
        VB: SEAN.Tasks.TaskCrowdedABNav.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8739
      syntax:
        content:
          CSharp: protected override bool NewTask()
          VB: Protected Overrides Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.TaskCrowdedABNav.NewTask*
      overridden: SEAN.Tasks.BaseTask.NewTask
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: SEAN.Tasks.TaskLeaveGroup
    commentId: T:SEAN.Tasks.TaskLeaveGroup
    language: CSharp
    name:
      CSharp: TaskLeaveGroup
      VB: TaskLeaveGroup
    nameWithType:
      CSharp: TaskLeaveGroup
      VB: TaskLeaveGroup
    qualifiedName:
      CSharp: SEAN.Tasks.TaskLeaveGroup
      VB: SEAN.Tasks.TaskLeaveGroup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: TaskLeaveGroup
      path: ''
      startLine: 8794
    syntax:
      content:
        CSharp: 'public class TaskLeaveGroup : BaseTask'
        VB: >-
          Public Class TaskLeaveGroup

              Inherits BaseTask
    inheritance:
    - System.Object
    - SEAN.Tasks.BaseTask
    inheritedMembers:
    - SEAN.Tasks.BaseTask.start
    - SEAN.Tasks.BaseTask.goal
    - SEAN.Tasks.BaseTask.onNewTask
    - SEAN.Tasks.BaseTask.PublishGoal
    - SEAN.Tasks.BaseTask.Topic
    - SEAN.Tasks.BaseTask.FrameID
    - SEAN.Tasks.BaseTask.sean
    - SEAN.Tasks.BaseTask.debounceTimeoutSec
    - SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    - SEAN.Tasks.BaseTask.startTransform
    - SEAN.Tasks.BaseTask.goalTransform
    - SEAN.Tasks.BaseTask.completionDistance
    - SEAN.Tasks.BaseTask.isRunning
    - SEAN.Tasks.BaseTask.Start
    - SEAN.Tasks.BaseTask.Update
    - SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
    - SEAN.Tasks.BaseTask.GetRandomRotation
    - SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
    - SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Tasks.TaskLeaveGroup.NewTask
      commentId: M:SEAN.Tasks.TaskLeaveGroup.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: TaskLeaveGroup.NewTask()
        VB: TaskLeaveGroup.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.TaskLeaveGroup.NewTask()
        VB: SEAN.Tasks.TaskLeaveGroup.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8796
      syntax:
        content:
          CSharp: protected override bool NewTask()
          VB: Protected Overrides Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.TaskLeaveGroup.NewTask*
      overridden: SEAN.Tasks.BaseTask.NewTask
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: SEAN.Tasks.CustomStartGoalTask
    commentId: T:SEAN.Tasks.CustomStartGoalTask
    language: CSharp
    name:
      CSharp: CustomStartGoalTask
      VB: CustomStartGoalTask
    nameWithType:
      CSharp: CustomStartGoalTask
      VB: CustomStartGoalTask
    qualifiedName:
      CSharp: SEAN.Tasks.CustomStartGoalTask
      VB: SEAN.Tasks.CustomStartGoalTask
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: CustomStartGoalTask
      path: ''
      startLine: 8830
    syntax:
      content:
        CSharp: 'public class CustomStartGoalTask : BaseTask'
        VB: >-
          Public Class CustomStartGoalTask

              Inherits BaseTask
    inheritance:
    - System.Object
    - SEAN.Tasks.BaseTask
    inheritedMembers:
    - SEAN.Tasks.BaseTask.start
    - SEAN.Tasks.BaseTask.goal
    - SEAN.Tasks.BaseTask.onNewTask
    - SEAN.Tasks.BaseTask.PublishGoal
    - SEAN.Tasks.BaseTask.Topic
    - SEAN.Tasks.BaseTask.FrameID
    - SEAN.Tasks.BaseTask.sean
    - SEAN.Tasks.BaseTask.debounceTimeoutSec
    - SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    - SEAN.Tasks.BaseTask.startTransform
    - SEAN.Tasks.BaseTask.goalTransform
    - SEAN.Tasks.BaseTask.completionDistance
    - SEAN.Tasks.BaseTask.isRunning
    - SEAN.Tasks.BaseTask.Start
    - SEAN.Tasks.BaseTask.Update
    - SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
    - SEAN.Tasks.BaseTask.GetRandomRotation
    - SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
    - SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Tasks.CustomStartGoalTask.RobotStartLocation
      commentId: F:SEAN.Tasks.CustomStartGoalTask.RobotStartLocation
      language: CSharp
      name:
        CSharp: RobotStartLocation
        VB: RobotStartLocation
      nameWithType:
        CSharp: CustomStartGoalTask.RobotStartLocation
        VB: CustomStartGoalTask.RobotStartLocation
      qualifiedName:
        CSharp: SEAN.Tasks.CustomStartGoalTask.RobotStartLocation
        VB: SEAN.Tasks.CustomStartGoalTask.RobotStartLocation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: RobotStartLocation
        path: ''
        startLine: 8834
      syntax:
        content:
          CSharp: public GameObject RobotStartLocation
          VB: Public RobotStartLocation As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.CustomStartGoalTask.RobotGoalLocation
      commentId: F:SEAN.Tasks.CustomStartGoalTask.RobotGoalLocation
      language: CSharp
      name:
        CSharp: RobotGoalLocation
        VB: RobotGoalLocation
      nameWithType:
        CSharp: CustomStartGoalTask.RobotGoalLocation
        VB: CustomStartGoalTask.RobotGoalLocation
      qualifiedName:
        CSharp: SEAN.Tasks.CustomStartGoalTask.RobotGoalLocation
        VB: SEAN.Tasks.CustomStartGoalTask.RobotGoalLocation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: RobotGoalLocation
        path: ''
        startLine: 8835
      syntax:
        content:
          CSharp: public GameObject RobotGoalLocation
          VB: Public RobotGoalLocation As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.CustomStartGoalTask.NewTask
      commentId: M:SEAN.Tasks.CustomStartGoalTask.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: CustomStartGoalTask.NewTask()
        VB: CustomStartGoalTask.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.CustomStartGoalTask.NewTask()
        VB: SEAN.Tasks.CustomStartGoalTask.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8837
      syntax:
        content:
          CSharp: protected override bool NewTask()
          VB: Protected Overrides Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.CustomStartGoalTask.NewTask*
      overridden: SEAN.Tasks.BaseTask.NewTask
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: SEAN.Tasks.LabStudyTask
    commentId: T:SEAN.Tasks.LabStudyTask
    language: CSharp
    name:
      CSharp: LabStudyTask
      VB: LabStudyTask
    nameWithType:
      CSharp: LabStudyTask
      VB: LabStudyTask
    qualifiedName:
      CSharp: SEAN.Tasks.LabStudyTask
      VB: SEAN.Tasks.LabStudyTask
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Tasks
    source:
      id: LabStudyTask
      path: ''
      startLine: 8860
    syntax:
      content:
        CSharp: 'public class LabStudyTask : BaseTask'
        VB: >-
          Public Class LabStudyTask

              Inherits BaseTask
    inheritance:
    - System.Object
    - SEAN.Tasks.BaseTask
    inheritedMembers:
    - SEAN.Tasks.BaseTask.start
    - SEAN.Tasks.BaseTask.goal
    - SEAN.Tasks.BaseTask.onNewTask
    - SEAN.Tasks.BaseTask.PublishGoal
    - SEAN.Tasks.BaseTask.Topic
    - SEAN.Tasks.BaseTask.FrameID
    - SEAN.Tasks.BaseTask.sean
    - SEAN.Tasks.BaseTask.debounceTimeoutSec
    - SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    - SEAN.Tasks.BaseTask.startTransform
    - SEAN.Tasks.BaseTask.goalTransform
    - SEAN.Tasks.BaseTask.completionDistance
    - SEAN.Tasks.BaseTask.isRunning
    - SEAN.Tasks.BaseTask.Update
    - SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    - SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
    - SEAN.Tasks.BaseTask.GetRandomRotation
    - SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
    - SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Tasks.LabStudyTask.PersonStartLocationName
      commentId: F:SEAN.Tasks.LabStudyTask.PersonStartLocationName
      language: CSharp
      name:
        CSharp: PersonStartLocationName
        VB: PersonStartLocationName
      nameWithType:
        CSharp: LabStudyTask.PersonStartLocationName
        VB: LabStudyTask.PersonStartLocationName
      qualifiedName:
        CSharp: SEAN.Tasks.LabStudyTask.PersonStartLocationName
        VB: SEAN.Tasks.LabStudyTask.PersonStartLocationName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: PersonStartLocationName
        path: ''
        startLine: 8864
      syntax:
        content:
          CSharp: public string PersonStartLocationName
          VB: Public PersonStartLocationName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.LabStudyTask.PersonGoalLocationName
      commentId: F:SEAN.Tasks.LabStudyTask.PersonGoalLocationName
      language: CSharp
      name:
        CSharp: PersonGoalLocationName
        VB: PersonGoalLocationName
      nameWithType:
        CSharp: LabStudyTask.PersonGoalLocationName
        VB: LabStudyTask.PersonGoalLocationName
      qualifiedName:
        CSharp: SEAN.Tasks.LabStudyTask.PersonGoalLocationName
        VB: SEAN.Tasks.LabStudyTask.PersonGoalLocationName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: PersonGoalLocationName
        path: ''
        startLine: 8865
      syntax:
        content:
          CSharp: public string PersonGoalLocationName
          VB: Public PersonGoalLocationName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.LabStudyTask.RobotStartLocationName
      commentId: F:SEAN.Tasks.LabStudyTask.RobotStartLocationName
      language: CSharp
      name:
        CSharp: RobotStartLocationName
        VB: RobotStartLocationName
      nameWithType:
        CSharp: LabStudyTask.RobotStartLocationName
        VB: LabStudyTask.RobotStartLocationName
      qualifiedName:
        CSharp: SEAN.Tasks.LabStudyTask.RobotStartLocationName
        VB: SEAN.Tasks.LabStudyTask.RobotStartLocationName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: RobotStartLocationName
        path: ''
        startLine: 8866
      syntax:
        content:
          CSharp: public string RobotStartLocationName
          VB: Public RobotStartLocationName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.LabStudyTask.RobotGoalLocationName
      commentId: F:SEAN.Tasks.LabStudyTask.RobotGoalLocationName
      language: CSharp
      name:
        CSharp: RobotGoalLocationName
        VB: RobotGoalLocationName
      nameWithType:
        CSharp: LabStudyTask.RobotGoalLocationName
        VB: LabStudyTask.RobotGoalLocationName
      qualifiedName:
        CSharp: SEAN.Tasks.LabStudyTask.RobotGoalLocationName
        VB: SEAN.Tasks.LabStudyTask.RobotGoalLocationName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: RobotGoalLocationName
        path: ''
        startLine: 8867
      syntax:
        content:
          CSharp: public string RobotGoalLocationName
          VB: Public RobotGoalLocationName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Tasks.LabStudyTask.Start
      commentId: M:SEAN.Tasks.LabStudyTask.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LabStudyTask.Start()
        VB: LabStudyTask.Start()
      qualifiedName:
        CSharp: SEAN.Tasks.LabStudyTask.Start()
        VB: SEAN.Tasks.LabStudyTask.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: Start
        path: ''
        startLine: 8869
      syntax:
        content:
          CSharp: public override void Start()
          VB: Public Overrides Sub Start
      overload: SEAN.Tasks.LabStudyTask.Start*
      overridden: SEAN.Tasks.BaseTask.Start
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: SEAN.Tasks.LabStudyTask.NewTask
      commentId: M:SEAN.Tasks.LabStudyTask.NewTask
      language: CSharp
      name:
        CSharp: NewTask()
        VB: NewTask()
      nameWithType:
        CSharp: LabStudyTask.NewTask()
        VB: LabStudyTask.NewTask()
      qualifiedName:
        CSharp: SEAN.Tasks.LabStudyTask.NewTask()
        VB: SEAN.Tasks.LabStudyTask.NewTask()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Tasks
      source:
        id: NewTask
        path: ''
        startLine: 8877
      syntax:
        content:
          CSharp: protected override bool NewTask()
          VB: Protected Overrides Function NewTask As Boolean
        return:
          type: System.Boolean
      overload: SEAN.Tasks.LabStudyTask.NewTask*
      overridden: SEAN.Tasks.BaseTask.NewTask
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: SEAN.ROSClock
  commentId: N:SEAN.ROSClock
  language: CSharp
  name:
    CSharp: SEAN.ROSClock
    VB: SEAN.ROSClock
  nameWithType:
    CSharp: SEAN.ROSClock
    VB: SEAN.ROSClock
  qualifiedName:
    CSharp: SEAN.ROSClock
    VB: SEAN.ROSClock
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.ROSClock.GUIClockVisualization
    commentId: T:SEAN.ROSClock.GUIClockVisualization
    language: CSharp
    name:
      CSharp: GUIClockVisualization
      VB: GUIClockVisualization
    nameWithType:
      CSharp: GUIClockVisualization
      VB: GUIClockVisualization
    qualifiedName:
      CSharp: SEAN.ROSClock.GUIClockVisualization
      VB: SEAN.ROSClock.GUIClockVisualization
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.ROSClock
    source:
      id: GUIClockVisualization
      path: ''
      startLine: 8914
    syntax:
      content:
        CSharp: 'public class GUIClockVisualization : MonoBehaviour'
        VB: >-
          Public Class GUIClockVisualization

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: SEAN.ROSClock.ROSClockPublisher
    commentId: T:SEAN.ROSClock.ROSClockPublisher
    language: CSharp
    name:
      CSharp: ROSClockPublisher
      VB: ROSClockPublisher
    nameWithType:
      CSharp: ROSClockPublisher
      VB: ROSClockPublisher
    qualifiedName:
      CSharp: SEAN.ROSClock.ROSClockPublisher
      VB: SEAN.ROSClock.ROSClockPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.ROSClock
    source:
      id: ROSClockPublisher
      path: ''
      startLine: 8974
    syntax:
      content:
        CSharp: 'public class ROSClockPublisher : MonoBehaviour'
        VB: >-
          Public Class ROSClockPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.ROSClock.ROSClockPublisher.topicName
      commentId: F:SEAN.ROSClock.ROSClockPublisher.topicName
      language: CSharp
      name:
        CSharp: topicName
        VB: topicName
      nameWithType:
        CSharp: ROSClockPublisher.topicName
        VB: ROSClockPublisher.topicName
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.topicName
        VB: SEAN.ROSClock.ROSClockPublisher.topicName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: topicName
        path: ''
        startLine: 8977
      syntax:
        content:
          CSharp: public string topicName
          VB: Public topicName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.ROSClock.ROSClockPublisher.Instance
      commentId: P:SEAN.ROSClock.ROSClockPublisher.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: ROSClockPublisher.Instance
        VB: ROSClockPublisher.Instance
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.Instance
        VB: SEAN.ROSClock.ROSClockPublisher.Instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: Instance
        path: ''
        startLine: 8980
      syntax:
        content:
          CSharp: public static ROSClockPublisher Instance { get; }
          VB: Public Shared ReadOnly Property Instance As ROSClockPublisher
        parameters: []
        return:
          type: SEAN.ROSClock.ROSClockPublisher
      overload: SEAN.ROSClock.ROSClockPublisher.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.ROSClock.ROSClockPublisher.UNIX_EPOCH
      commentId: F:SEAN.ROSClock.ROSClockPublisher.UNIX_EPOCH
      language: CSharp
      name:
        CSharp: UNIX_EPOCH
        VB: UNIX_EPOCH
      nameWithType:
        CSharp: ROSClockPublisher.UNIX_EPOCH
        VB: ROSClockPublisher.UNIX_EPOCH
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.UNIX_EPOCH
        VB: SEAN.ROSClock.ROSClockPublisher.UNIX_EPOCH
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: UNIX_EPOCH
        path: ''
        startLine: 8982
      syntax:
        content:
          CSharp: public static DateTime UNIX_EPOCH
          VB: Public Shared UNIX_EPOCH As DateTime
        return:
          type: Global.DateTime
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.ROSClock.ROSClockPublisher.startMillis
      commentId: F:SEAN.ROSClock.ROSClockPublisher.startMillis
      language: CSharp
      name:
        CSharp: startMillis
        VB: startMillis
      nameWithType:
        CSharp: ROSClockPublisher.startMillis
        VB: ROSClockPublisher.startMillis
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.startMillis
        VB: SEAN.ROSClock.ROSClockPublisher.startMillis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: startMillis
        path: ''
        startLine: 8983
      syntax:
        content:
          CSharp: public Double startMillis
          VB: Public startMillis As Double
        return:
          type: Global.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.ROSClock.ROSClockPublisher.LastMSecs
      commentId: P:SEAN.ROSClock.ROSClockPublisher.LastMSecs
      language: CSharp
      name:
        CSharp: LastMSecs
        VB: LastMSecs
      nameWithType:
        CSharp: ROSClockPublisher.LastMSecs
        VB: ROSClockPublisher.LastMSecs
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.LastMSecs
        VB: SEAN.ROSClock.ROSClockPublisher.LastMSecs
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: LastMSecs
        path: ''
        startLine: 8987
      syntax:
        content:
          CSharp: public double LastMSecs { get; }
          VB: Public ReadOnly Property LastMSecs As Double
        parameters: []
        return:
          type: System.Double
      overload: SEAN.ROSClock.ROSClockPublisher.LastMSecs*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime
      commentId: M:SEAN.ROSClock.ROSClockPublisher.LastPublishedTime
      language: CSharp
      name:
        CSharp: LastPublishedTime()
        VB: LastPublishedTime()
      nameWithType:
        CSharp: ROSClockPublisher.LastPublishedTime()
        VB: ROSClockPublisher.LastPublishedTime()
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime()
        VB: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: LastPublishedTime
        path: ''
        startLine: 9037
      syntax:
        content:
          CSharp: public Std.MTime LastPublishedTime()
          VB: Public Function LastPublishedTime As Std.MTime
        return:
          type: RosMessageTypes.Std.MTime
      overload: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.ROSClock.ROSClockPublisher.Publish
      commentId: M:SEAN.ROSClock.ROSClockPublisher.Publish
      language: CSharp
      name:
        CSharp: Publish()
        VB: Publish()
      nameWithType:
        CSharp: ROSClockPublisher.Publish()
        VB: ROSClockPublisher.Publish()
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.Publish()
        VB: SEAN.ROSClock.ROSClockPublisher.Publish()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: Publish
        path: ''
        startLine: 9042
      syntax:
        content:
          CSharp: public void Publish()
          VB: Public Sub Publish
      overload: SEAN.ROSClock.ROSClockPublisher.Publish*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader(RosMessageTypes.Std.MHeader)
      commentId: M:SEAN.ROSClock.ROSClockPublisher.UpdateMHeader(RosMessageTypes.Std.MHeader)
      language: CSharp
      name:
        CSharp: UpdateMHeader(Std.MHeader)
        VB: UpdateMHeader(Std.MHeader)
      nameWithType:
        CSharp: ROSClockPublisher.UpdateMHeader(Std.MHeader)
        VB: ROSClockPublisher.UpdateMHeader(Std.MHeader)
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader(RosMessageTypes.Std.MHeader)
        VB: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader(RosMessageTypes.Std.MHeader)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: UpdateMHeader
        path: ''
        startLine: 9059
      syntax:
        content:
          CSharp: public void UpdateMHeader(Std.MHeader header)
          VB: Public Sub UpdateMHeader(header As Std.MHeader)
        parameters:
        - id: header
          type: RosMessageTypes.Std.MHeader
      overload: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders(System.Collections.Generic.List{RosMessageTypes.Std.MHeader})
      commentId: M:SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders(System.Collections.Generic.List{RosMessageTypes.Std.MHeader})
      language: CSharp
      name:
        CSharp: UpdateMHeaders(List<Std.MHeader>)
        VB: UpdateMHeaders(List(Of Std.MHeader))
      nameWithType:
        CSharp: ROSClockPublisher.UpdateMHeaders(List<Std.MHeader>)
        VB: ROSClockPublisher.UpdateMHeaders(List(Of Std.MHeader))
      qualifiedName:
        CSharp: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders(System.Collections.Generic.List<RosMessageTypes.Std.MHeader>)
        VB: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders(System.Collections.Generic.List(Of RosMessageTypes.Std.MHeader))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.ROSClock
      source:
        id: UpdateMHeaders
        path: ''
        startLine: 9064
      syntax:
        content:
          CSharp: public void UpdateMHeaders(List<Std.MHeader> headers)
          VB: Public Sub UpdateMHeaders(headers As List(Of Std.MHeader))
        parameters:
        - id: headers
          type: System.Collections.Generic.List{RosMessageTypes.Std.MHeader}
      overload: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Util
  commentId: N:SEAN.Util
  language: CSharp
  name:
    CSharp: SEAN.Util
    VB: SEAN.Util
  nameWithType:
    CSharp: SEAN.Util
    VB: SEAN.Util
  qualifiedName:
    CSharp: SEAN.Util
    VB: SEAN.Util
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Util.KalmanFilterVector3
    commentId: T:SEAN.Util.KalmanFilterVector3
    language: CSharp
    name:
      CSharp: KalmanFilterVector3
      VB: KalmanFilterVector3
    nameWithType:
      CSharp: KalmanFilterVector3
      VB: KalmanFilterVector3
    qualifiedName:
      CSharp: SEAN.Util.KalmanFilterVector3
      VB: SEAN.Util.KalmanFilterVector3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Util
    source:
      id: KalmanFilterVector3
      path: ''
      startLine: 9088
    summary: A Kalman filter implementation for <code>Vector3</code> values.
    example: []
    syntax:
      content:
        CSharp: public class KalmanFilterVector3
        VB: Public Class KalmanFilterVector3
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Util.KalmanFilterVector3.DEFAULT_Q
      commentId: F:SEAN.Util.KalmanFilterVector3.DEFAULT_Q
      language: CSharp
      name:
        CSharp: DEFAULT_Q
        VB: DEFAULT_Q
      nameWithType:
        CSharp: KalmanFilterVector3.DEFAULT_Q
        VB: KalmanFilterVector3.DEFAULT_Q
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.DEFAULT_Q
        VB: SEAN.Util.KalmanFilterVector3.DEFAULT_Q
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: DEFAULT_Q
        path: ''
        startLine: 9095
      syntax:
        content:
          CSharp: public const float DEFAULT_Q = 6E-07F
          VB: Public Const DEFAULT_Q As Single = 6E-07F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Util.KalmanFilterVector3.DEFAULT_R
      commentId: F:SEAN.Util.KalmanFilterVector3.DEFAULT_R
      language: CSharp
      name:
        CSharp: DEFAULT_R
        VB: DEFAULT_R
      nameWithType:
        CSharp: KalmanFilterVector3.DEFAULT_R
        VB: KalmanFilterVector3.DEFAULT_R
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.DEFAULT_R
        VB: SEAN.Util.KalmanFilterVector3.DEFAULT_R
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: DEFAULT_R
        path: ''
        startLine: 9096
      syntax:
        content:
          CSharp: public const float DEFAULT_R = 0.0006F
          VB: Public Const DEFAULT_R As Single = 0.0006F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Util.KalmanFilterVector3.DEFAULT_P
      commentId: F:SEAN.Util.KalmanFilterVector3.DEFAULT_P
      language: CSharp
      name:
        CSharp: DEFAULT_P
        VB: DEFAULT_P
      nameWithType:
        CSharp: KalmanFilterVector3.DEFAULT_P
        VB: KalmanFilterVector3.DEFAULT_P
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.DEFAULT_P
        VB: SEAN.Util.KalmanFilterVector3.DEFAULT_P
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: DEFAULT_P
        path: ''
        startLine: 9098
      syntax:
        content:
          CSharp: public const float DEFAULT_P = 1F
          VB: Public Const DEFAULT_P As Single = 1F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Util.KalmanFilterVector3.#ctor
      commentId: M:SEAN.Util.KalmanFilterVector3.#ctor
      language: CSharp
      name:
        CSharp: KalmanFilterVector3()
        VB: KalmanFilterVector3()
      nameWithType:
        CSharp: KalmanFilterVector3.KalmanFilterVector3()
        VB: KalmanFilterVector3.KalmanFilterVector3()
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.KalmanFilterVector3()
        VB: SEAN.Util.KalmanFilterVector3.KalmanFilterVector3()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: .ctor
        path: ''
        startLine: 9116
      syntax:
        content:
          CSharp: public KalmanFilterVector3()
          VB: Public Sub New
      overload: SEAN.Util.KalmanFilterVector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Util.KalmanFilterVector3.#ctor(System.Single,System.Single)
      commentId: M:SEAN.Util.KalmanFilterVector3.#ctor(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: KalmanFilterVector3(Single, Single)
        VB: KalmanFilterVector3(Single, Single)
      nameWithType:
        CSharp: KalmanFilterVector3.KalmanFilterVector3(Single, Single)
        VB: KalmanFilterVector3.KalmanFilterVector3(Single, Single)
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.KalmanFilterVector3(System.Single, System.Single)
        VB: SEAN.Util.KalmanFilterVector3.KalmanFilterVector3(System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: .ctor
        path: ''
        startLine: 9118
      syntax:
        content:
          CSharp: public KalmanFilterVector3(float aQ = 6E-07F, float aR = 0.0006F)
          VB: Public Sub New(aQ As Single = 6E-07F, aR As Single = 0.0006F)
        parameters:
        - id: aQ
          type: System.Single
        - id: aR
          type: System.Single
      overload: SEAN.Util.KalmanFilterVector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Util.KalmanFilterVector3.Update(Vector3,System.Nullable{System.Single},System.Nullable{System.Single})
      commentId: M:SEAN.Util.KalmanFilterVector3.Update(Vector3,System.Nullable{System.Single},System.Nullable{System.Single})
      language: CSharp
      name:
        CSharp: Update(Vector3, Nullable<Single>, Nullable<Single>)
        VB: Update(Vector3, Nullable(Of Single), Nullable(Of Single))
      nameWithType:
        CSharp: KalmanFilterVector3.Update(Vector3, Nullable<Single>, Nullable<Single>)
        VB: KalmanFilterVector3.Update(Vector3, Nullable(Of Single), Nullable(Of Single))
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.Update(Vector3, System.Nullable<System.Single>, System.Nullable<System.Single>)
        VB: SEAN.Util.KalmanFilterVector3.Update(Vector3, System.Nullable(Of System.Single), System.Nullable(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: Update
        path: ''
        startLine: 9128
      syntax:
        content:
          CSharp: public Vector3 Update(Vector3 measurement, float? newQ = null, float? newR = null)
          VB: Public Function Update(measurement As Vector3, newQ As Single? = Nothing, newR As Single? = Nothing) As Vector3
        parameters:
        - id: measurement
          type: Global.Vector3
        - id: newQ
          type: System.Nullable{System.Single}
        - id: newR
          type: System.Nullable{System.Single}
        return:
          type: Global.Vector3
      overload: SEAN.Util.KalmanFilterVector3.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Util.KalmanFilterVector3.Update(System.Collections.Generic.List{Vector3},System.Boolean,System.Nullable{System.Single},System.Nullable{System.Single})
      commentId: M:SEAN.Util.KalmanFilterVector3.Update(System.Collections.Generic.List{Vector3},System.Boolean,System.Nullable{System.Single},System.Nullable{System.Single})
      language: CSharp
      name:
        CSharp: Update(List<Vector3>, Boolean, Nullable<Single>, Nullable<Single>)
        VB: Update(List(Of Vector3), Boolean, Nullable(Of Single), Nullable(Of Single))
      nameWithType:
        CSharp: KalmanFilterVector3.Update(List<Vector3>, Boolean, Nullable<Single>, Nullable<Single>)
        VB: KalmanFilterVector3.Update(List(Of Vector3), Boolean, Nullable(Of Single), Nullable(Of Single))
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.Update(System.Collections.Generic.List<Vector3>, System.Boolean, System.Nullable<System.Single>, System.Nullable<System.Single>)
        VB: SEAN.Util.KalmanFilterVector3.Update(System.Collections.Generic.List(Of Vector3), System.Boolean, System.Nullable(Of System.Single), System.Nullable(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: Update
        path: ''
        startLine: 9153
      syntax:
        content:
          CSharp: public Vector3 Update(List<Vector3> measurements, bool areMeasurementsNewestFirst = false, float? newQ = null, float? newR = null)
          VB: Public Function Update(measurements As List(Of Vector3), areMeasurementsNewestFirst As Boolean = False, newQ As Single? = Nothing, newR As Single? = Nothing) As Vector3
        parameters:
        - id: measurements
          type: System.Collections.Generic.List{Vector3}
        - id: areMeasurementsNewestFirst
          type: System.Boolean
        - id: newQ
          type: System.Nullable{System.Single}
        - id: newR
          type: System.Nullable{System.Single}
        return:
          type: Global.Vector3
      overload: SEAN.Util.KalmanFilterVector3.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Util.KalmanFilterVector3.Reset
      commentId: M:SEAN.Util.KalmanFilterVector3.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: KalmanFilterVector3.Reset()
        VB: KalmanFilterVector3.Reset()
      qualifiedName:
        CSharp: SEAN.Util.KalmanFilterVector3.Reset()
        VB: SEAN.Util.KalmanFilterVector3.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: Reset
        path: ''
        startLine: 9178
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: SEAN.Util.KalmanFilterVector3.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Util.PoseStamped
    commentId: T:SEAN.Util.PoseStamped
    language: CSharp
    name:
      CSharp: PoseStamped
      VB: PoseStamped
    nameWithType:
      CSharp: PoseStamped
      VB: PoseStamped
    qualifiedName:
      CSharp: SEAN.Util.PoseStamped
      VB: SEAN.Util.PoseStamped
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Util
    source:
      id: PoseStamped
      path: ''
      startLine: 9196
    syntax:
      content:
        CSharp: public class PoseStamped
        VB: Public Class PoseStamped
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Util.PoseStamped.time
      commentId: F:SEAN.Util.PoseStamped.time
      language: CSharp
      name:
        CSharp: time
        VB: time
      nameWithType:
        CSharp: PoseStamped.time
        VB: PoseStamped.time
      qualifiedName:
        CSharp: SEAN.Util.PoseStamped.time
        VB: SEAN.Util.PoseStamped.time
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: time
        path: ''
        startLine: 9198
      syntax:
        content:
          CSharp: public float time
          VB: Public time As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Util.PoseStamped.position
      commentId: F:SEAN.Util.PoseStamped.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: PoseStamped.position
        VB: PoseStamped.position
      qualifiedName:
        CSharp: SEAN.Util.PoseStamped.position
        VB: SEAN.Util.PoseStamped.position
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: position
        path: ''
        startLine: 9199
      syntax:
        content:
          CSharp: public Vector3 position
          VB: Public position As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Util.PoseStamped.rotation
      commentId: F:SEAN.Util.PoseStamped.rotation
      language: CSharp
      name:
        CSharp: rotation
        VB: rotation
      nameWithType:
        CSharp: PoseStamped.rotation
        VB: PoseStamped.rotation
      qualifiedName:
        CSharp: SEAN.Util.PoseStamped.rotation
        VB: SEAN.Util.PoseStamped.rotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: rotation
        path: ''
        startLine: 9200
      syntax:
        content:
          CSharp: public Quaternion rotation
          VB: Public rotation As Quaternion
        return:
          type: Global.Quaternion
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Util.CappedQueue`1
    commentId: T:SEAN.Util.CappedQueue`1
    language: CSharp
    name:
      CSharp: CappedQueue<T>
      VB: CappedQueue(Of T)
    nameWithType:
      CSharp: CappedQueue<T>
      VB: CappedQueue(Of T)
    qualifiedName:
      CSharp: SEAN.Util.CappedQueue<T>
      VB: SEAN.Util.CappedQueue(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Util
    source:
      id: CappedQueue
      path: ''
      startLine: 9213
    syntax:
      content:
        CSharp: 'public sealed class CappedQueue<T> : Queue<T>, ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
        VB: >-
          Public NotInheritable Class CappedQueue(Of T)

              Inherits Queue(Of T)

              Implements ICollection, IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    - System.Collections.Generic.Queue{{T}}
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: SEAN.Util.CappedQueue`1.Capacity
      commentId: P:SEAN.Util.CappedQueue`1.Capacity
      language: CSharp
      name:
        CSharp: Capacity
        VB: Capacity
      nameWithType:
        CSharp: CappedQueue<T>.Capacity
        VB: CappedQueue(Of T).Capacity
      qualifiedName:
        CSharp: SEAN.Util.CappedQueue<T>.Capacity
        VB: SEAN.Util.CappedQueue(Of T).Capacity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: Capacity
        path: ''
        startLine: 9215
      syntax:
        content:
          CSharp: public int Capacity { get; }
          VB: Public ReadOnly Property Capacity As Integer
        parameters: []
        return:
          type: System.Int32
      overload: SEAN.Util.CappedQueue`1.Capacity*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Util.CappedQueue`1.#ctor(System.Int32)
      commentId: M:SEAN.Util.CappedQueue`1.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: CappedQueue(Int32)
        VB: CappedQueue(Int32)
      nameWithType:
        CSharp: CappedQueue<T>.CappedQueue(Int32)
        VB: CappedQueue(Of T).CappedQueue(Int32)
      qualifiedName:
        CSharp: SEAN.Util.CappedQueue<T>.CappedQueue(System.Int32)
        VB: SEAN.Util.CappedQueue(Of T).CappedQueue(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: .ctor
        path: ''
        startLine: 9216
      syntax:
        content:
          CSharp: public CappedQueue(int capacity)
          VB: Public Sub New(capacity As Integer)
        parameters:
        - id: capacity
          type: System.Int32
      overload: SEAN.Util.CappedQueue`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Util.CappedQueue`1.Enqueue(`0)
      commentId: M:SEAN.Util.CappedQueue`1.Enqueue(`0)
      language: CSharp
      name:
        CSharp: Enqueue(T)
        VB: Enqueue(T)
      nameWithType:
        CSharp: CappedQueue<T>.Enqueue(T)
        VB: CappedQueue(Of T).Enqueue(T)
      qualifiedName:
        CSharp: SEAN.Util.CappedQueue<T>.Enqueue(T)
        VB: SEAN.Util.CappedQueue(Of T).Enqueue(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: Enqueue
        path: ''
        startLine: 9220
      syntax:
        content:
          CSharp: public T Enqueue(T item)
          VB: Public Function Enqueue(item As T) As T
        parameters:
        - id: item
          type: '{T}'
        return:
          type: '{T}'
      overload: SEAN.Util.CappedQueue`1.Enqueue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Util.CSVReader
    commentId: T:SEAN.Util.CSVReader
    language: CSharp
    name:
      CSharp: CSVReader
      VB: CSVReader
    nameWithType:
      CSharp: CSVReader
      VB: CSVReader
    qualifiedName:
      CSharp: SEAN.Util.CSVReader
      VB: SEAN.Util.CSVReader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Util
    source:
      id: CSVReader
      path: ''
      startLine: 9243
    syntax:
      content:
        CSharp: public class CSVReader
        VB: Public Class CSVReader
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Util.CSVReader.Read(TextAsset)
      commentId: M:SEAN.Util.CSVReader.Read(TextAsset)
      language: CSharp
      name:
        CSharp: Read(TextAsset)
        VB: Read(TextAsset)
      nameWithType:
        CSharp: CSVReader.Read(TextAsset)
        VB: CSVReader.Read(TextAsset)
      qualifiedName:
        CSharp: SEAN.Util.CSVReader.Read(TextAsset)
        VB: SEAN.Util.CSVReader.Read(TextAsset)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: Read
        path: ''
        startLine: 9249
      syntax:
        content:
          CSharp: public static List<Dictionary<int, object>> Read(TextAsset csvFile)
          VB: Public Shared Function Read(csvFile As TextAsset) As List(Of Dictionary(Of Integer, Object))
        parameters:
        - id: csvFile
          type: Global.TextAsset
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Int32,System.Object}}
      overload: SEAN.Util.CSVReader.Read*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: SEAN.Util.Geometry
    commentId: T:SEAN.Util.Geometry
    language: CSharp
    name:
      CSharp: Geometry
      VB: Geometry
    nameWithType:
      CSharp: Geometry
      VB: Geometry
    qualifiedName:
      CSharp: SEAN.Util.Geometry
      VB: SEAN.Util.Geometry
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Util
    source:
      id: Geometry
      path: ''
      startLine: 9294
    syntax:
      content:
        CSharp: public class Geometry
        VB: Public Class Geometry
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Util.Geometry.GetGeometryVector3(Vector3{FLU})
      commentId: M:SEAN.Util.Geometry.GetGeometryVector3(Vector3{FLU})
      language: CSharp
      name:
        CSharp: GetGeometryVector3(Vector3<FLU>)
        VB: GetGeometryVector3(Vector3(Of FLU))
      nameWithType:
        CSharp: Geometry.GetGeometryVector3(Vector3<FLU>)
        VB: Geometry.GetGeometryVector3(Vector3(Of FLU))
      qualifiedName:
        CSharp: SEAN.Util.Geometry.GetGeometryVector3(Vector3<FLU>)
        VB: SEAN.Util.Geometry.GetGeometryVector3(Vector3(Of FLU))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: GetGeometryVector3
        path: ''
        startLine: 9296
      syntax:
        content:
          CSharp: public static Geometry.MVector3 GetGeometryVector3(Vector3<FLU> vector3)
          VB: Public Shared Function GetGeometryVector3(vector3 As Vector3(Of FLU)) As Geometry.MVector3
        parameters:
        - id: vector3
          type: Global.Vector3{FLU}
        return:
          type: RosMessageTypes.Geometry.MVector3
      overload: SEAN.Util.Geometry.GetGeometryVector3*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Util.Geometry.GetGeometryPoint(Vector3{FLU})
      commentId: M:SEAN.Util.Geometry.GetGeometryPoint(Vector3{FLU})
      language: CSharp
      name:
        CSharp: GetGeometryPoint(Vector3<FLU>)
        VB: GetGeometryPoint(Vector3(Of FLU))
      nameWithType:
        CSharp: Geometry.GetGeometryPoint(Vector3<FLU>)
        VB: Geometry.GetGeometryPoint(Vector3(Of FLU))
      qualifiedName:
        CSharp: SEAN.Util.Geometry.GetGeometryPoint(Vector3<FLU>)
        VB: SEAN.Util.Geometry.GetGeometryPoint(Vector3(Of FLU))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: GetGeometryPoint
        path: ''
        startLine: 9305
      syntax:
        content:
          CSharp: public static Geometry.MPoint GetGeometryPoint(Vector3<FLU> position)
          VB: Public Shared Function GetGeometryPoint(position As Vector3(Of FLU)) As Geometry.MPoint
        parameters:
        - id: position
          type: Global.Vector3{FLU}
        return:
          type: RosMessageTypes.Geometry.MPoint
      overload: SEAN.Util.Geometry.GetGeometryPoint*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Util.Geometry.GetGeometryQuaternion(Quaternion{FLU})
      commentId: M:SEAN.Util.Geometry.GetGeometryQuaternion(Quaternion{FLU})
      language: CSharp
      name:
        CSharp: GetGeometryQuaternion(Quaternion<FLU>)
        VB: GetGeometryQuaternion(Quaternion(Of FLU))
      nameWithType:
        CSharp: Geometry.GetGeometryQuaternion(Quaternion<FLU>)
        VB: Geometry.GetGeometryQuaternion(Quaternion(Of FLU))
      qualifiedName:
        CSharp: SEAN.Util.Geometry.GetGeometryQuaternion(Quaternion<FLU>)
        VB: SEAN.Util.Geometry.GetGeometryQuaternion(Quaternion(Of FLU))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: GetGeometryQuaternion
        path: ''
        startLine: 9314
      syntax:
        content:
          CSharp: public static Geometry.MQuaternion GetGeometryQuaternion(Quaternion<FLU> quaternion)
          VB: Public Shared Function GetGeometryQuaternion(quaternion As Quaternion(Of FLU)) As Geometry.MQuaternion
        parameters:
        - id: quaternion
          type: Global.Quaternion{FLU}
        return:
          type: RosMessageTypes.Geometry.MQuaternion
      overload: SEAN.Util.Geometry.GetGeometryQuaternion*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Util.Geometry.GetMPose(Transform)
      commentId: M:SEAN.Util.Geometry.GetMPose(Transform)
      language: CSharp
      name:
        CSharp: GetMPose(Transform)
        VB: GetMPose(Transform)
      nameWithType:
        CSharp: Geometry.GetMPose(Transform)
        VB: Geometry.GetMPose(Transform)
      qualifiedName:
        CSharp: SEAN.Util.Geometry.GetMPose(Transform)
        VB: SEAN.Util.Geometry.GetMPose(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: GetMPose
        path: ''
        startLine: 9324
      syntax:
        content:
          CSharp: public static Geometry.MPose GetMPose(Transform transform)
          VB: Public Shared Function GetMPose(transform As Transform) As Geometry.MPose
        parameters:
        - id: transform
          type: Global.Transform
        return:
          type: RosMessageTypes.Geometry.MPose
      overload: SEAN.Util.Geometry.GetMPose*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Util.Geometry.GroundPlaneDist(Vector3,Vector3)
      commentId: M:SEAN.Util.Geometry.GroundPlaneDist(Vector3,Vector3)
      language: CSharp
      name:
        CSharp: GroundPlaneDist(Vector3, Vector3)
        VB: GroundPlaneDist(Vector3, Vector3)
      nameWithType:
        CSharp: Geometry.GroundPlaneDist(Vector3, Vector3)
        VB: Geometry.GroundPlaneDist(Vector3, Vector3)
      qualifiedName:
        CSharp: SEAN.Util.Geometry.GroundPlaneDist(Vector3, Vector3)
        VB: SEAN.Util.Geometry.GroundPlaneDist(Vector3, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Util
      source:
        id: GroundPlaneDist
        path: ''
        startLine: 9332
      syntax:
        content:
          CSharp: public static float GroundPlaneDist(Vector3 a, Vector3 b)
          VB: Public Shared Function GroundPlaneDist(a As Vector3, b As Vector3) As Single
        parameters:
        - id: a
          type: Global.Vector3
        - id: b
          type: Global.Vector3
        return:
          type: System.Single
      overload: SEAN.Util.Geometry.GroundPlaneDist*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
- id: SEAN.Input
  commentId: N:SEAN.Input
  language: CSharp
  name:
    CSharp: SEAN.Input
    VB: SEAN.Input
  nameWithType:
    CSharp: SEAN.Input
    VB: SEAN.Input
  qualifiedName:
    CSharp: SEAN.Input
    VB: SEAN.Input
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Input.InputPublisher
    commentId: T:SEAN.Input.InputPublisher
    language: CSharp
    name:
      CSharp: InputPublisher
      VB: InputPublisher
    nameWithType:
      CSharp: InputPublisher
      VB: InputPublisher
    qualifiedName:
      CSharp: SEAN.Input.InputPublisher
      VB: SEAN.Input.InputPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Input
    source:
      id: InputPublisher
      path: ''
      startLine: 9351
    syntax:
      content:
        CSharp: 'public class InputPublisher : MonoBehaviour'
        VB: >-
          Public Class InputPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Input.InputPublisher.TopicCmdVel
      commentId: F:SEAN.Input.InputPublisher.TopicCmdVel
      language: CSharp
      name:
        CSharp: TopicCmdVel
        VB: TopicCmdVel
      nameWithType:
        CSharp: InputPublisher.TopicCmdVel
        VB: InputPublisher.TopicCmdVel
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.TopicCmdVel
        VB: SEAN.Input.InputPublisher.TopicCmdVel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: TopicCmdVel
        path: ''
        startLine: 9354
      syntax:
        content:
          CSharp: public string TopicCmdVel
          VB: Public TopicCmdVel As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.TopicTrigger
      commentId: F:SEAN.Input.InputPublisher.TopicTrigger
      language: CSharp
      name:
        CSharp: TopicTrigger
        VB: TopicTrigger
      nameWithType:
        CSharp: InputPublisher.TopicTrigger
        VB: InputPublisher.TopicTrigger
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.TopicTrigger
        VB: SEAN.Input.InputPublisher.TopicTrigger
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: TopicTrigger
        path: ''
        startLine: 9355
      syntax:
        content:
          CSharp: public string TopicTrigger
          VB: Public TopicTrigger As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.EnableJoystick
      commentId: F:SEAN.Input.InputPublisher.EnableJoystick
      language: CSharp
      name:
        CSharp: EnableJoystick
        VB: EnableJoystick
      nameWithType:
        CSharp: InputPublisher.EnableJoystick
        VB: InputPublisher.EnableJoystick
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.EnableJoystick
        VB: SEAN.Input.InputPublisher.EnableJoystick
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: EnableJoystick
        path: ''
        startLine: 9360
      summary: "\nenable local joystick input\n"
      example: []
      syntax:
        content:
          CSharp: public bool EnableJoystick
          VB: Public EnableJoystick As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.EnableKeyboard
      commentId: F:SEAN.Input.InputPublisher.EnableKeyboard
      language: CSharp
      name:
        CSharp: EnableKeyboard
        VB: EnableKeyboard
      nameWithType:
        CSharp: InputPublisher.EnableKeyboard
        VB: InputPublisher.EnableKeyboard
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.EnableKeyboard
        VB: SEAN.Input.InputPublisher.EnableKeyboard
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: EnableKeyboard
        path: ''
        startLine: 9364
      summary: "\nenable local keyboard input\n"
      example: []
      syntax:
        content:
          CSharp: public bool EnableKeyboard
          VB: Public EnableKeyboard As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.LocalInput
      commentId: P:SEAN.Input.InputPublisher.LocalInput
      language: CSharp
      name:
        CSharp: LocalInput
        VB: LocalInput
      nameWithType:
        CSharp: InputPublisher.LocalInput
        VB: InputPublisher.LocalInput
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.LocalInput
        VB: SEAN.Input.InputPublisher.LocalInput
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: LocalInput
        path: ''
        startLine: 9366
      syntax:
        content:
          CSharp: public bool LocalInput { get; }
          VB: Public ReadOnly Property LocalInput As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: SEAN.Input.InputPublisher.LocalInput*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Input.InputPublisher.JoystickScaleLinear
      commentId: F:SEAN.Input.InputPublisher.JoystickScaleLinear
      language: CSharp
      name:
        CSharp: JoystickScaleLinear
        VB: JoystickScaleLinear
      nameWithType:
        CSharp: InputPublisher.JoystickScaleLinear
        VB: InputPublisher.JoystickScaleLinear
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.JoystickScaleLinear
        VB: SEAN.Input.InputPublisher.JoystickScaleLinear
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: JoystickScaleLinear
        path: ''
        startLine: 9373
      summary: "\nscale joystick input by this amount\n"
      example: []
      syntax:
        content:
          CSharp: public float JoystickScaleLinear
          VB: Public JoystickScaleLinear As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.JoystickScaleAngular
      commentId: F:SEAN.Input.InputPublisher.JoystickScaleAngular
      language: CSharp
      name:
        CSharp: JoystickScaleAngular
        VB: JoystickScaleAngular
      nameWithType:
        CSharp: InputPublisher.JoystickScaleAngular
        VB: InputPublisher.JoystickScaleAngular
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.JoystickScaleAngular
        VB: SEAN.Input.InputPublisher.JoystickScaleAngular
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: JoystickScaleAngular
        path: ''
        startLine: 9374
      syntax:
        content:
          CSharp: public float JoystickScaleAngular
          VB: Public JoystickScaleAngular As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.FixedScaleLinear
      commentId: F:SEAN.Input.InputPublisher.FixedScaleLinear
      language: CSharp
      name:
        CSharp: FixedScaleLinear
        VB: FixedScaleLinear
      nameWithType:
        CSharp: InputPublisher.FixedScaleLinear
        VB: InputPublisher.FixedScaleLinear
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.FixedScaleLinear
        VB: SEAN.Input.InputPublisher.FixedScaleLinear
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: FixedScaleLinear
        path: ''
        startLine: 9379
      summary: "\nkeyboard inputs translate directly to this output value\n"
      example: []
      syntax:
        content:
          CSharp: public float FixedScaleLinear
          VB: Public FixedScaleLinear As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.FixedScaleAngular
      commentId: F:SEAN.Input.InputPublisher.FixedScaleAngular
      language: CSharp
      name:
        CSharp: FixedScaleAngular
        VB: FixedScaleAngular
      nameWithType:
        CSharp: InputPublisher.FixedScaleAngular
        VB: InputPublisher.FixedScaleAngular
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.FixedScaleAngular
        VB: SEAN.Input.InputPublisher.FixedScaleAngular
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: FixedScaleAngular
        path: ''
        startLine: 9380
      syntax:
        content:
          CSharp: public float FixedScaleAngular
          VB: Public FixedScaleAngular As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Input.InputPublisher.Horizontal
      commentId: P:SEAN.Input.InputPublisher.Horizontal
      language: CSharp
      name:
        CSharp: Horizontal
        VB: Horizontal
      nameWithType:
        CSharp: InputPublisher.Horizontal
        VB: InputPublisher.Horizontal
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.Horizontal
        VB: SEAN.Input.InputPublisher.Horizontal
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: Horizontal
        path: ''
        startLine: 9383
      syntax:
        content:
          CSharp: public float Horizontal { get; }
          VB: Public ReadOnly Property Horizontal As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Input.InputPublisher.Horizontal*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Input.InputPublisher.Vertical
      commentId: P:SEAN.Input.InputPublisher.Vertical
      language: CSharp
      name:
        CSharp: Vertical
        VB: Vertical
      nameWithType:
        CSharp: InputPublisher.Vertical
        VB: InputPublisher.Vertical
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.Vertical
        VB: SEAN.Input.InputPublisher.Vertical
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: Vertical
        path: ''
        startLine: 9385
      syntax:
        content:
          CSharp: public float Vertical { get; }
          VB: Public ReadOnly Property Vertical As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Input.InputPublisher.Vertical*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Input.InputPublisher.L1
      commentId: P:SEAN.Input.InputPublisher.L1
      language: CSharp
      name:
        CSharp: L1
        VB: L1
      nameWithType:
        CSharp: InputPublisher.L1
        VB: InputPublisher.L1
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.L1
        VB: SEAN.Input.InputPublisher.L1
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: L1
        path: ''
        startLine: 9387
      syntax:
        content:
          CSharp: public bool L1 { get; }
          VB: Public ReadOnly Property L1 As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: SEAN.Input.InputPublisher.L1*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Input.InputPublisher.CmdVel
      commentId: P:SEAN.Input.InputPublisher.CmdVel
      language: CSharp
      name:
        CSharp: CmdVel
        VB: CmdVel
      nameWithType:
        CSharp: InputPublisher.CmdVel
        VB: InputPublisher.CmdVel
      qualifiedName:
        CSharp: SEAN.Input.InputPublisher.CmdVel
        VB: SEAN.Input.InputPublisher.CmdVel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: CmdVel
        path: ''
        startLine: 9456
      syntax:
        content:
          CSharp: public Geometry.MTwist CmdVel { get; }
          VB: Public ReadOnly Property CmdVel As Geometry.MTwist
        parameters: []
        return:
          type: RosMessageTypes.Geometry.MTwist
      overload: SEAN.Input.InputPublisher.CmdVel*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: SEAN.Input.GUIInputVisualization
    commentId: T:SEAN.Input.GUIInputVisualization
    language: CSharp
    name:
      CSharp: GUIInputVisualization
      VB: GUIInputVisualization
    nameWithType:
      CSharp: GUIInputVisualization
      VB: GUIInputVisualization
    qualifiedName:
      CSharp: SEAN.Input.GUIInputVisualization
      VB: SEAN.Input.GUIInputVisualization
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Input
    source:
      id: GUIInputVisualization
      path: ''
      startLine: 9483
    syntax:
      content:
        CSharp: 'public class GUIInputVisualization : MonoBehaviour'
        VB: >-
          Public Class GUIInputVisualization

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Input.GUIInputVisualization.showControl
      commentId: F:SEAN.Input.GUIInputVisualization.showControl
      language: CSharp
      name:
        CSharp: showControl
        VB: showControl
      nameWithType:
        CSharp: GUIInputVisualization.showControl
        VB: GUIInputVisualization.showControl
      qualifiedName:
        CSharp: SEAN.Input.GUIInputVisualization.showControl
        VB: SEAN.Input.GUIInputVisualization.showControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Input
      source:
        id: showControl
        path: ''
        startLine: 9486
      syntax:
        content:
          CSharp: public bool showControl
          VB: Public showControl As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Situations
  commentId: N:SEAN.Situations
  language: CSharp
  name:
    CSharp: SEAN.Situations
    VB: SEAN.Situations
  nameWithType:
    CSharp: SEAN.Situations
    VB: SEAN.Situations
  qualifiedName:
    CSharp: SEAN.Situations
    VB: SEAN.Situations
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Situations.Situation
    commentId: T:SEAN.Situations.Situation
    language: CSharp
    name:
      CSharp: Situation
      VB: Situation
    nameWithType:
      CSharp: Situation
      VB: Situation
    qualifiedName:
      CSharp: SEAN.Situations.Situation
      VB: SEAN.Situations.Situation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations
    source:
      id: Situation
      path: ''
      startLine: 9524
    syntax:
      content:
        CSharp: public class Situation
        VB: Public Class Situation
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Situation.name
      commentId: P:SEAN.Situations.Situation.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: Situation.name
        VB: Situation.name
      qualifiedName:
        CSharp: SEAN.Situations.Situation.name
        VB: SEAN.Situations.Situation.name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: name
        path: ''
        startLine: 9530
      syntax:
        content:
          CSharp: public string name { get; }
          VB: Public ReadOnly Property name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Situation.name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Situation.idx
      commentId: P:SEAN.Situations.Situation.idx
      language: CSharp
      name:
        CSharp: idx
        VB: idx
      nameWithType:
        CSharp: Situation.idx
        VB: Situation.idx
      qualifiedName:
        CSharp: SEAN.Situations.Situation.idx
        VB: SEAN.Situations.Situation.idx
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: idx
        path: ''
        startLine: 9531
      syntax:
        content:
          CSharp: public int idx { get; }
          VB: Public ReadOnly Property idx As Integer
        parameters: []
        return:
          type: System.Int32
      overload: SEAN.Situations.Situation.idx*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Situation.val
      commentId: P:SEAN.Situations.Situation.val
      language: CSharp
      name:
        CSharp: val
        VB: val
      nameWithType:
        CSharp: Situation.val
        VB: Situation.val
      qualifiedName:
        CSharp: SEAN.Situations.Situation.val
        VB: SEAN.Situations.Situation.val
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: val
        path: ''
        startLine: 9532
      syntax:
        content:
          CSharp: public float val { get; }
          VB: Public ReadOnly Property val As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Situations.Situation.val*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Situation.ToString
      commentId: M:SEAN.Situations.Situation.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Situation.ToString()
        VB: Situation.ToString()
      qualifiedName:
        CSharp: SEAN.Situations.Situation.ToString()
        VB: SEAN.Situations.Situation.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: ToString
        path: ''
        startLine: 9533
      syntax:
        content:
          CSharp: public string ToString()
          VB: Public Function ToString As String
        return:
          type: System.String
      overload: SEAN.Situations.Situation.ToString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Situation.CrossPath
      commentId: P:SEAN.Situations.Situation.CrossPath
      language: CSharp
      name:
        CSharp: CrossPath
        VB: CrossPath
      nameWithType:
        CSharp: Situation.CrossPath
        VB: Situation.CrossPath
      qualifiedName:
        CSharp: SEAN.Situations.Situation.CrossPath
        VB: SEAN.Situations.Situation.CrossPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: CrossPath
        path: ''
        startLine: 9534
      syntax:
        content:
          CSharp: public static Situation CrossPath { get; }
          VB: Public Shared ReadOnly Property CrossPath As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Situation.CrossPath*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.Situations.Situation.Empty
      commentId: P:SEAN.Situations.Situation.Empty
      language: CSharp
      name:
        CSharp: Empty
        VB: Empty
      nameWithType:
        CSharp: Situation.Empty
        VB: Situation.Empty
      qualifiedName:
        CSharp: SEAN.Situations.Situation.Empty
        VB: SEAN.Situations.Situation.Empty
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: Empty
        path: ''
        startLine: 9535
      syntax:
        content:
          CSharp: public static Situation Empty { get; }
          VB: Public Shared ReadOnly Property Empty As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Situation.Empty*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.Situations.Situation.JoinGroup
      commentId: P:SEAN.Situations.Situation.JoinGroup
      language: CSharp
      name:
        CSharp: JoinGroup
        VB: JoinGroup
      nameWithType:
        CSharp: Situation.JoinGroup
        VB: Situation.JoinGroup
      qualifiedName:
        CSharp: SEAN.Situations.Situation.JoinGroup
        VB: SEAN.Situations.Situation.JoinGroup
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: JoinGroup
        path: ''
        startLine: 9536
      syntax:
        content:
          CSharp: public static Situation JoinGroup { get; }
          VB: Public Shared ReadOnly Property JoinGroup As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Situation.JoinGroup*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.Situations.Situation.LeaveGroup
      commentId: P:SEAN.Situations.Situation.LeaveGroup
      language: CSharp
      name:
        CSharp: LeaveGroup
        VB: LeaveGroup
      nameWithType:
        CSharp: Situation.LeaveGroup
        VB: Situation.LeaveGroup
      qualifiedName:
        CSharp: SEAN.Situations.Situation.LeaveGroup
        VB: SEAN.Situations.Situation.LeaveGroup
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: LeaveGroup
        path: ''
        startLine: 9537
      syntax:
        content:
          CSharp: public static Situation LeaveGroup { get; }
          VB: Public Shared ReadOnly Property LeaveGroup As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Situation.LeaveGroup*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.Situations.Situation.DownPath
      commentId: P:SEAN.Situations.Situation.DownPath
      language: CSharp
      name:
        CSharp: DownPath
        VB: DownPath
      nameWithType:
        CSharp: Situation.DownPath
        VB: Situation.DownPath
      qualifiedName:
        CSharp: SEAN.Situations.Situation.DownPath
        VB: SEAN.Situations.Situation.DownPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: DownPath
        path: ''
        startLine: 9538
      syntax:
        content:
          CSharp: public static Situation DownPath { get; }
          VB: Public Shared ReadOnly Property DownPath As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Situation.DownPath*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.Situations.Situation.op_Implicit(SEAN.Situations.Situation)~System.Boolean
      commentId: M:SEAN.Situations.Situation.op_Implicit(SEAN.Situations.Situation)~System.Boolean
      language: CSharp
      name:
        CSharp: Implicit(Situation to Boolean)
        VB: Widening(Situation to Boolean)
      nameWithType:
        CSharp: Situation.Implicit(Situation to Boolean)
        VB: Situation.Widening(Situation to Boolean)
      qualifiedName:
        CSharp: SEAN.Situations.Situation.Implicit(SEAN.Situations.Situation to System.Boolean)
        VB: SEAN.Situations.Situation.Widening(SEAN.Situations.Situation to System.Boolean)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: op_Implicit
        path: ''
        startLine: 9540
      syntax:
        content:
          CSharp: public static implicit operator bool (Situation s)
          VB: Public Shared Widening Operator CType(s As Situation) As Boolean
        parameters:
        - id: s
          type: SEAN.Situations.Situation
        return:
          type: System.Boolean
      overload: SEAN.Situations.Situation.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Situations.Situation.Set(System.Single)
      commentId: M:SEAN.Situations.Situation.Set(System.Single)
      language: CSharp
      name:
        CSharp: Set(Single)
        VB: Set(Single)
      nameWithType:
        CSharp: Situation.Set(Single)
        VB: Situation.Set(Single)
      qualifiedName:
        CSharp: SEAN.Situations.Situation.Set(System.Single)
        VB: SEAN.Situations.Situation.Set(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: Set
        path: ''
        startLine: 9542
      syntax:
        content:
          CSharp: public Situation Set(float val)
          VB: Public Function Set(val As Single) As Situation
        parameters:
        - id: val
          type: System.Single
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Situation.Set*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Situations.Robot
    commentId: T:SEAN.Situations.Robot
    language: CSharp
    name:
      CSharp: Robot
      VB: Robot
    nameWithType:
      CSharp: Robot
      VB: Robot
    qualifiedName:
      CSharp: SEAN.Situations.Robot
      VB: SEAN.Situations.Robot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations
    source:
      id: Robot
      path: ''
      startLine: 9557
    syntax:
      content:
        CSharp: 'public class Robot : MonoBehaviour'
        VB: >-
          Public Class Robot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Robot.radius
      commentId: F:SEAN.Situations.Robot.radius
      language: CSharp
      name:
        CSharp: radius
        VB: radius
      nameWithType:
        CSharp: Robot.radius
        VB: Robot.radius
      qualifiedName:
        CSharp: SEAN.Situations.Robot.radius
        VB: SEAN.Situations.Robot.radius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: radius
        path: ''
        startLine: 9558
      syntax:
        content:
          CSharp: public float radius
          VB: Public radius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Robot.base_link
      commentId: F:SEAN.Situations.Robot.base_link
      language: CSharp
      name:
        CSharp: base_link
        VB: base_link
      nameWithType:
        CSharp: Robot.base_link
        VB: Robot.base_link
      qualifiedName:
        CSharp: SEAN.Situations.Robot.base_link
        VB: SEAN.Situations.Robot.base_link
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: base_link
        path: ''
        startLine: 9559
      syntax:
        content:
          CSharp: public GameObject base_link
          VB: Public base_link As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Robot.trajectory
      commentId: P:SEAN.Situations.Robot.trajectory
      language: CSharp
      name:
        CSharp: trajectory
        VB: trajectory
      nameWithType:
        CSharp: Robot.trajectory
        VB: Robot.trajectory
      qualifiedName:
        CSharp: SEAN.Situations.Robot.trajectory
        VB: SEAN.Situations.Robot.trajectory
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: trajectory
        path: ''
        startLine: 9560
      syntax:
        content:
          CSharp: public TrackedTrajectory trajectory { get; }
          VB: Public ReadOnly Property trajectory As TrackedTrajectory
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedTrajectory
      overload: SEAN.Situations.Robot.trajectory*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Robot.Start
      commentId: M:SEAN.Situations.Robot.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Robot.Start()
        VB: Robot.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Robot.Start()
        VB: SEAN.Situations.Robot.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: Start
        path: ''
        startLine: 9569
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Situations.Robot.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Robot.transform
      commentId: P:SEAN.Situations.Robot.transform
      language: CSharp
      name:
        CSharp: transform
        VB: transform
      nameWithType:
        CSharp: Robot.transform
        VB: Robot.transform
      qualifiedName:
        CSharp: SEAN.Situations.Robot.transform
        VB: SEAN.Situations.Robot.transform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: transform
        path: ''
        startLine: 9572
      syntax:
        content:
          CSharp: public Transform transform { get; }
          VB: Public ReadOnly Property transform As Transform
        parameters: []
        return:
          type: Global.Transform
      overload: SEAN.Situations.Robot.transform*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Robot.position
      commentId: P:SEAN.Situations.Robot.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: Robot.position
        VB: Robot.position
      qualifiedName:
        CSharp: SEAN.Situations.Robot.position
        VB: SEAN.Situations.Robot.position
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: position
        path: ''
        startLine: 9575
      syntax:
        content:
          CSharp: public Vector3 position { get; }
          VB: Public ReadOnly Property position As Vector3
        parameters: []
        return:
          type: Global.Vector3
      overload: SEAN.Situations.Robot.position*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Robot.rotation
      commentId: P:SEAN.Situations.Robot.rotation
      language: CSharp
      name:
        CSharp: rotation
        VB: rotation
      nameWithType:
        CSharp: Robot.rotation
        VB: Robot.rotation
      qualifiedName:
        CSharp: SEAN.Situations.Robot.rotation
        VB: SEAN.Situations.Robot.rotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: rotation
        path: ''
        startLine: 9578
      syntax:
        content:
          CSharp: public Quaternion rotation { get; }
          VB: Public ReadOnly Property rotation As Quaternion
        parameters: []
        return:
          type: Global.Quaternion
      overload: SEAN.Situations.Robot.rotation*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Robot.ToString
      commentId: M:SEAN.Situations.Robot.ToString
      language: CSharp
      name:
        CSharp: ToString()
        VB: ToString()
      nameWithType:
        CSharp: Robot.ToString()
        VB: Robot.ToString()
      qualifiedName:
        CSharp: SEAN.Situations.Robot.ToString()
        VB: SEAN.Situations.Robot.ToString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: ToString
        path: ''
        startLine: 9581
      syntax:
        content:
          CSharp: public override string ToString()
          VB: Public Overrides Function ToString As String
        return:
          type: System.String
      overload: SEAN.Situations.Robot.ToString*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: SEAN.Situations.GUISituationVisualization
    commentId: T:SEAN.Situations.GUISituationVisualization
    language: CSharp
    name:
      CSharp: GUISituationVisualization
      VB: GUISituationVisualization
    nameWithType:
      CSharp: GUISituationVisualization
      VB: GUISituationVisualization
    qualifiedName:
      CSharp: SEAN.Situations.GUISituationVisualization
      VB: SEAN.Situations.GUISituationVisualization
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations
    source:
      id: GUISituationVisualization
      path: ''
      startLine: 9595
    syntax:
      content:
        CSharp: 'public class GUISituationVisualization : MonoBehaviour'
        VB: >-
          Public Class GUISituationVisualization

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.GUISituationVisualization.showSituations
      commentId: F:SEAN.Situations.GUISituationVisualization.showSituations
      language: CSharp
      name:
        CSharp: showSituations
        VB: showSituations
      nameWithType:
        CSharp: GUISituationVisualization.showSituations
        VB: GUISituationVisualization.showSituations
      qualifiedName:
        CSharp: SEAN.Situations.GUISituationVisualization.showSituations
        VB: SEAN.Situations.GUISituationVisualization.showSituations
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations
      source:
        id: showSituations
        path: ''
        startLine: 9598
      syntax:
        content:
          CSharp: public bool showSituations
          VB: Public showSituations As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Situations.Agents
  commentId: N:SEAN.Situations.Agents
  language: CSharp
  name:
    CSharp: SEAN.Situations.Agents
    VB: SEAN.Situations.Agents
  nameWithType:
    CSharp: SEAN.Situations.Agents
    VB: SEAN.Situations.Agents
  qualifiedName:
    CSharp: SEAN.Situations.Agents
    VB: SEAN.Situations.Agents
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Situations.Agents.AgentMover
    commentId: T:SEAN.Situations.Agents.AgentMover
    language: CSharp
    name:
      CSharp: AgentMover
      VB: AgentMover
    nameWithType:
      CSharp: AgentMover
      VB: AgentMover
    qualifiedName:
      CSharp: SEAN.Situations.Agents.AgentMover
      VB: SEAN.Situations.Agents.AgentMover
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Agents
    source:
      id: AgentMover
      path: ''
      startLine: 9637
    syntax:
      content:
        CSharp: 'public class AgentMover : MonoBehaviour'
        VB: >-
          Public Class AgentMover

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Agents.AgentMover.m_MovingTurnSpeed
      commentId: F:SEAN.Situations.Agents.AgentMover.m_MovingTurnSpeed
      language: CSharp
      name:
        CSharp: m_MovingTurnSpeed
        VB: m_MovingTurnSpeed
      nameWithType:
        CSharp: AgentMover.m_MovingTurnSpeed
        VB: AgentMover.m_MovingTurnSpeed
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.m_MovingTurnSpeed
        VB: SEAN.Situations.Agents.AgentMover.m_MovingTurnSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: m_MovingTurnSpeed
        path: ''
        startLine: 9642
      syntax:
        content:
          CSharp: public float m_MovingTurnSpeed
          VB: Public m_MovingTurnSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.m_StationaryTurnSpeed
      commentId: F:SEAN.Situations.Agents.AgentMover.m_StationaryTurnSpeed
      language: CSharp
      name:
        CSharp: m_StationaryTurnSpeed
        VB: m_StationaryTurnSpeed
      nameWithType:
        CSharp: AgentMover.m_StationaryTurnSpeed
        VB: AgentMover.m_StationaryTurnSpeed
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.m_StationaryTurnSpeed
        VB: SEAN.Situations.Agents.AgentMover.m_StationaryTurnSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: m_StationaryTurnSpeed
        path: ''
        startLine: 9643
      syntax:
        content:
          CSharp: public float m_StationaryTurnSpeed
          VB: Public m_StationaryTurnSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.m_MoveSpeedMultiplier
      commentId: F:SEAN.Situations.Agents.AgentMover.m_MoveSpeedMultiplier
      language: CSharp
      name:
        CSharp: m_MoveSpeedMultiplier
        VB: m_MoveSpeedMultiplier
      nameWithType:
        CSharp: AgentMover.m_MoveSpeedMultiplier
        VB: AgentMover.m_MoveSpeedMultiplier
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.m_MoveSpeedMultiplier
        VB: SEAN.Situations.Agents.AgentMover.m_MoveSpeedMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: m_MoveSpeedMultiplier
        path: ''
        startLine: 9647
      syntax:
        content:
          CSharp: public float m_MoveSpeedMultiplier
          VB: Public m_MoveSpeedMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.m_AnimSpeedMultiplier
      commentId: F:SEAN.Situations.Agents.AgentMover.m_AnimSpeedMultiplier
      language: CSharp
      name:
        CSharp: m_AnimSpeedMultiplier
        VB: m_AnimSpeedMultiplier
      nameWithType:
        CSharp: AgentMover.m_AnimSpeedMultiplier
        VB: AgentMover.m_AnimSpeedMultiplier
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.m_AnimSpeedMultiplier
        VB: SEAN.Situations.Agents.AgentMover.m_AnimSpeedMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: m_AnimSpeedMultiplier
        path: ''
        startLine: 9648
      syntax:
        content:
          CSharp: public float m_AnimSpeedMultiplier
          VB: Public m_AnimSpeedMultiplier As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.m_GroundCheckDistance
      commentId: F:SEAN.Situations.Agents.AgentMover.m_GroundCheckDistance
      language: CSharp
      name:
        CSharp: m_GroundCheckDistance
        VB: m_GroundCheckDistance
      nameWithType:
        CSharp: AgentMover.m_GroundCheckDistance
        VB: AgentMover.m_GroundCheckDistance
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.m_GroundCheckDistance
        VB: SEAN.Situations.Agents.AgentMover.m_GroundCheckDistance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: m_GroundCheckDistance
        path: ''
        startLine: 9649
      syntax:
        content:
          CSharp: public float m_GroundCheckDistance
          VB: Public m_GroundCheckDistance As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.pause(System.Boolean)
      commentId: M:SEAN.Situations.Agents.AgentMover.pause(System.Boolean)
      language: CSharp
      name:
        CSharp: pause(Boolean)
        VB: pause(Boolean)
      nameWithType:
        CSharp: AgentMover.pause(Boolean)
        VB: AgentMover.pause(Boolean)
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.pause(System.Boolean)
        VB: SEAN.Situations.Agents.AgentMover.pause(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: pause
        path: ''
        startLine: 9672
      syntax:
        content:
          CSharp: public void pause(bool paused)
          VB: Public Sub pause(paused As Boolean)
        parameters:
        - id: paused
          type: System.Boolean
      overload: SEAN.Situations.Agents.AgentMover.pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.Move(Vector3,System.Single,System.Boolean,System.Boolean)
      commentId: M:SEAN.Situations.Agents.AgentMover.Move(Vector3,System.Single,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: Move(Vector3, Single, Boolean, Boolean)
        VB: Move(Vector3, Single, Boolean, Boolean)
      nameWithType:
        CSharp: AgentMover.Move(Vector3, Single, Boolean, Boolean)
        VB: AgentMover.Move(Vector3, Single, Boolean, Boolean)
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.Move(Vector3, System.Single, System.Boolean, System.Boolean)
        VB: SEAN.Situations.Agents.AgentMover.Move(Vector3, System.Single, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: Move
        path: ''
        startLine: 9690
      syntax:
        content:
          CSharp: public void Move(Vector3 move, float speed, bool crouch, bool jump)
          VB: Public Sub Move(move As Vector3, speed As Single, crouch As Boolean, jump As Boolean)
        parameters:
        - id: move
          type: Global.Vector3
        - id: speed
          type: System.Single
        - id: crouch
          type: System.Boolean
        - id: jump
          type: System.Boolean
      overload: SEAN.Situations.Agents.AgentMover.Move*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed
      commentId: M:SEAN.Situations.Agents.AgentMover.PauseAnimatorPed
      language: CSharp
      name:
        CSharp: PauseAnimatorPed()
        VB: PauseAnimatorPed()
      nameWithType:
        CSharp: AgentMover.PauseAnimatorPed()
        VB: AgentMover.PauseAnimatorPed()
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed()
        VB: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: PauseAnimatorPed
        path: ''
        startLine: 9792
      syntax:
        content:
          CSharp: public void PauseAnimatorPed()
          VB: Public Sub PauseAnimatorPed
      overload: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.AgentMover.OnAnimatorMove
      commentId: M:SEAN.Situations.Agents.AgentMover.OnAnimatorMove
      language: CSharp
      name:
        CSharp: OnAnimatorMove()
        VB: OnAnimatorMove()
      nameWithType:
        CSharp: AgentMover.OnAnimatorMove()
        VB: AgentMover.OnAnimatorMove()
      qualifiedName:
        CSharp: SEAN.Situations.Agents.AgentMover.OnAnimatorMove()
        VB: SEAN.Situations.Agents.AgentMover.OnAnimatorMove()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: OnAnimatorMove
        path: ''
        startLine: 9866
      syntax:
        content:
          CSharp: public void OnAnimatorMove()
          VB: Public Sub OnAnimatorMove
      overload: SEAN.Situations.Agents.AgentMover.OnAnimatorMove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Situations.Agents.SocialForce
    commentId: T:SEAN.Situations.Agents.SocialForce
    language: CSharp
    name:
      CSharp: SocialForce
      VB: SocialForce
    nameWithType:
      CSharp: SocialForce
      VB: SocialForce
    qualifiedName:
      CSharp: SEAN.Situations.Agents.SocialForce
      VB: SEAN.Situations.Agents.SocialForce
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Agents
    source:
      id: SocialForce
      path: ''
      startLine: 9917
    syntax:
      content:
        CSharp: public class SocialForce
        VB: Public Class SocialForce
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Agents.SocialForce.force
      commentId: F:SEAN.Situations.Agents.SocialForce.force
      language: CSharp
      name:
        CSharp: force
        VB: force
      nameWithType:
        CSharp: SocialForce.force
        VB: SocialForce.force
      qualifiedName:
        CSharp: SEAN.Situations.Agents.SocialForce.force
        VB: SEAN.Situations.Agents.SocialForce.force
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: force
        path: ''
        startLine: 9919
      syntax:
        content:
          CSharp: public Vector3 force
          VB: Public force As Vector3
        return:
          type: Global.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.SocialForce.anyAgentInFront
      commentId: F:SEAN.Situations.Agents.SocialForce.anyAgentInFront
      language: CSharp
      name:
        CSharp: anyAgentInFront
        VB: anyAgentInFront
      nameWithType:
        CSharp: SocialForce.anyAgentInFront
        VB: SocialForce.anyAgentInFront
      qualifiedName:
        CSharp: SEAN.Situations.Agents.SocialForce.anyAgentInFront
        VB: SEAN.Situations.Agents.SocialForce.anyAgentInFront
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: anyAgentInFront
        path: ''
        startLine: 9920
      syntax:
        content:
          CSharp: public bool anyAgentInFront
          VB: Public anyAgentInFront As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.SocialForce.anyAgentApproaching
      commentId: F:SEAN.Situations.Agents.SocialForce.anyAgentApproaching
      language: CSharp
      name:
        CSharp: anyAgentApproaching
        VB: anyAgentApproaching
      nameWithType:
        CSharp: SocialForce.anyAgentApproaching
        VB: SocialForce.anyAgentApproaching
      qualifiedName:
        CSharp: SEAN.Situations.Agents.SocialForce.anyAgentApproaching
        VB: SEAN.Situations.Agents.SocialForce.anyAgentApproaching
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: anyAgentApproaching
        path: ''
        startLine: 9921
      syntax:
        content:
          CSharp: public bool anyAgentApproaching
          VB: Public anyAgentApproaching As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.SocialForce.#ctor
      commentId: M:SEAN.Situations.Agents.SocialForce.#ctor
      language: CSharp
      name:
        CSharp: SocialForce()
        VB: SocialForce()
      nameWithType:
        CSharp: SocialForce.SocialForce()
        VB: SocialForce.SocialForce()
      qualifiedName:
        CSharp: SEAN.Situations.Agents.SocialForce.SocialForce()
        VB: SEAN.Situations.Agents.SocialForce.SocialForce()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: .ctor
        path: ''
        startLine: 9923
      syntax:
        content:
          CSharp: public SocialForce()
          VB: Public Sub New
      overload: SEAN.Situations.Agents.SocialForce.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.SocialForce.pauseable
      commentId: P:SEAN.Situations.Agents.SocialForce.pauseable
      language: CSharp
      name:
        CSharp: pauseable
        VB: pauseable
      nameWithType:
        CSharp: SocialForce.pauseable
        VB: SocialForce.pauseable
      qualifiedName:
        CSharp: SEAN.Situations.Agents.SocialForce.pauseable
        VB: SEAN.Situations.Agents.SocialForce.pauseable
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: pauseable
        path: ''
        startLine: 9930
      syntax:
        content:
          CSharp: public bool pauseable { get; }
          VB: Public ReadOnly Property pauseable As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: SEAN.Situations.Agents.SocialForce.pauseable*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: SEAN.Situations.Agents.HandcraftedAgentManager
    commentId: T:SEAN.Situations.Agents.HandcraftedAgentManager
    language: CSharp
    name:
      CSharp: HandcraftedAgentManager
      VB: HandcraftedAgentManager
    nameWithType:
      CSharp: HandcraftedAgentManager
      VB: HandcraftedAgentManager
    qualifiedName:
      CSharp: SEAN.Situations.Agents.HandcraftedAgentManager
      VB: SEAN.Situations.Agents.HandcraftedAgentManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Agents
    source:
      id: HandcraftedAgentManager
      path: ''
      startLine: 9945
    syntax:
      content:
        CSharp: 'public class HandcraftedAgentManager : MonoBehaviour'
        VB: >-
          Public Class HandcraftedAgentManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.instance
      commentId: P:SEAN.Situations.Agents.HandcraftedAgentManager.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: HandcraftedAgentManager.instance
        VB: HandcraftedAgentManager.instance
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.instance
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.instance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: instance
        path: ''
        startLine: 9948
      syntax:
        content:
          CSharp: public static HandcraftedAgentManager instance { get; }
          VB: Public Shared ReadOnly Property instance As HandcraftedAgentManager
        parameters: []
        return:
          type: SEAN.Situations.Agents.HandcraftedAgentManager
      overload: SEAN.Situations.Agents.HandcraftedAgentManager.instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.agents
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.agents
      language: CSharp
      name:
        CSharp: agents
        VB: agents
      nameWithType:
        CSharp: HandcraftedAgentManager.agents
        VB: HandcraftedAgentManager.agents
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.agents
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.agents
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: agents
        path: ''
        startLine: 9950
      syntax:
        content:
          CSharp: public List<INavigable> agents
          VB: Public agents As List(Of INavigable)
        return:
          type: System.Collections.Generic.List{IVI.INavigable}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.groups
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.groups
      language: CSharp
      name:
        CSharp: groups
        VB: groups
      nameWithType:
        CSharp: HandcraftedAgentManager.groups
        VB: HandcraftedAgentManager.groups
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.groups
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.groups
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: groups
        path: ''
        startLine: 9951
      syntax:
        content:
          CSharp: public List<TrackedGroup> groups
          VB: Public groups As List(Of TrackedGroup)
        return:
          type: System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedGroup}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.PATHFINDING_FREQ_IN_FRAMES
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.PATHFINDING_FREQ_IN_FRAMES
      language: CSharp
      name:
        CSharp: PATHFINDING_FREQ_IN_FRAMES
        VB: PATHFINDING_FREQ_IN_FRAMES
      nameWithType:
        CSharp: HandcraftedAgentManager.PATHFINDING_FREQ_IN_FRAMES
        VB: HandcraftedAgentManager.PATHFINDING_FREQ_IN_FRAMES
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.PATHFINDING_FREQ_IN_FRAMES
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.PATHFINDING_FREQ_IN_FRAMES
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: PATHFINDING_FREQ_IN_FRAMES
        path: ''
        startLine: 9953
      syntax:
        content:
          CSharp: public const int PATHFINDING_FREQ_IN_FRAMES = 10
          VB: Public Const PATHFINDING_FREQ_IN_FRAMES As Integer = 10
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.SPAWN_HEIGHT
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.SPAWN_HEIGHT
      language: CSharp
      name:
        CSharp: SPAWN_HEIGHT
        VB: SPAWN_HEIGHT
      nameWithType:
        CSharp: HandcraftedAgentManager.SPAWN_HEIGHT
        VB: HandcraftedAgentManager.SPAWN_HEIGHT
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.SPAWN_HEIGHT
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.SPAWN_HEIGHT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: SPAWN_HEIGHT
        path: ''
        startLine: 9954
      syntax:
        content:
          CSharp: public float SPAWN_HEIGHT
          VB: Public SPAWN_HEIGHT As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.WAYPOINT_DIST
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.WAYPOINT_DIST
      language: CSharp
      name:
        CSharp: WAYPOINT_DIST
        VB: WAYPOINT_DIST
      nameWithType:
        CSharp: HandcraftedAgentManager.WAYPOINT_DIST
        VB: HandcraftedAgentManager.WAYPOINT_DIST
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.WAYPOINT_DIST
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.WAYPOINT_DIST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: WAYPOINT_DIST
        path: ''
        startLine: 9955
      syntax:
        content:
          CSharp: public float WAYPOINT_DIST
          VB: Public WAYPOINT_DIST As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.elapsedFrames
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.elapsedFrames
      language: CSharp
      name:
        CSharp: elapsedFrames
        VB: elapsedFrames
      nameWithType:
        CSharp: HandcraftedAgentManager.elapsedFrames
        VB: HandcraftedAgentManager.elapsedFrames
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.elapsedFrames
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.elapsedFrames
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: elapsedFrames
        path: ''
        startLine: 9957
      syntax:
        content:
          CSharp: public static int elapsedFrames
          VB: Public Shared elapsedFrames As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.agentPrefab
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.agentPrefab
      language: CSharp
      name:
        CSharp: agentPrefab
        VB: agentPrefab
      nameWithType:
        CSharp: HandcraftedAgentManager.agentPrefab
        VB: HandcraftedAgentManager.agentPrefab
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.agentPrefab
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.agentPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: agentPrefab
        path: ''
        startLine: 9959
      syntax:
        content:
          CSharp: public GameObject agentPrefab
          VB: Public agentPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.openGroupLocation
      commentId: F:SEAN.Situations.Agents.HandcraftedAgentManager.openGroupLocation
      language: CSharp
      name:
        CSharp: openGroupLocation
        VB: openGroupLocation
      nameWithType:
        CSharp: HandcraftedAgentManager.openGroupLocation
        VB: HandcraftedAgentManager.openGroupLocation
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.openGroupLocation
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.openGroupLocation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: openGroupLocation
        path: ''
        startLine: 9966
      syntax:
        content:
          CSharp: public Pose openGroupLocation
          VB: Public openGroupLocation As Pose
        return:
          type: Global.Pose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name
      commentId: P:SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name
      language: CSharp
      name:
        CSharp: scenario_name
        VB: scenario_name
      nameWithType:
        CSharp: HandcraftedAgentManager.scenario_name
        VB: HandcraftedAgentManager.scenario_name
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: scenario_name
        path: ''
        startLine: 9968
      syntax:
        content:
          CSharp: public string scenario_name { get; }
          VB: Public ReadOnly Property scenario_name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario(SEAN.Situations.Scenario.SocialSituation,GameObject,GameObject)
      commentId: M:SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario(SEAN.Situations.Scenario.SocialSituation,GameObject,GameObject)
      language: CSharp
      name:
        CSharp: NewScenario(SocialSituation, GameObject, GameObject)
        VB: NewScenario(SocialSituation, GameObject, GameObject)
      nameWithType:
        CSharp: HandcraftedAgentManager.NewScenario(SocialSituation, GameObject, GameObject)
        VB: HandcraftedAgentManager.NewScenario(SocialSituation, GameObject, GameObject)
      qualifiedName:
        CSharp: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario(SEAN.Situations.Scenario.SocialSituation, GameObject, GameObject)
        VB: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario(SEAN.Situations.Scenario.SocialSituation, GameObject, GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Agents
      source:
        id: NewScenario
        path: ''
        startLine: 10009
      syntax:
        content:
          CSharp: public void NewScenario(SocialSituation situation, GameObject socialSituationEnv, GameObject spawnLocations)
          VB: Public Sub NewScenario(situation As SocialSituation, socialSituationEnv As GameObject, spawnLocations As GameObject)
        parameters:
        - id: situation
          type: SEAN.Situations.Scenario.SocialSituation
        - id: socialSituationEnv
          type: Global.GameObject
        - id: spawnLocations
          type: Global.GameObject
      overload: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Situations.Classifier
  commentId: N:SEAN.Situations.Classifier
  language: CSharp
  name:
    CSharp: SEAN.Situations.Classifier
    VB: SEAN.Situations.Classifier
  nameWithType:
    CSharp: SEAN.Situations.Classifier
    VB: SEAN.Situations.Classifier
  qualifiedName:
    CSharp: SEAN.Situations.Classifier
    VB: SEAN.Situations.Classifier
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Situations.Classifier.SituationClassifier
    commentId: T:SEAN.Situations.Classifier.SituationClassifier
    language: CSharp
    name:
      CSharp: SituationClassifier
      VB: SituationClassifier
    nameWithType:
      CSharp: SituationClassifier
      VB: SituationClassifier
    qualifiedName:
      CSharp: SEAN.Situations.Classifier.SituationClassifier
      VB: SEAN.Situations.Classifier.SituationClassifier
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Classifier
    source:
      id: SituationClassifier
      path: ''
      startLine: 10116
    syntax:
      content:
        CSharp: 'public abstract class SituationClassifier : MonoBehaviour'
        VB: >-
          Public MustInherit Class SituationClassifier

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: SEAN.Situations.Classifier.SituationClassifier.ros
      commentId: F:SEAN.Situations.Classifier.SituationClassifier.ros
      language: CSharp
      name:
        CSharp: ros
        VB: ros
      nameWithType:
        CSharp: SituationClassifier.ros
        VB: SituationClassifier.ros
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.ros
        VB: SEAN.Situations.Classifier.SituationClassifier.ros
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: ros
        path: ''
        startLine: 10118
      syntax:
        content:
          CSharp: protected ROSConnection ros
          VB: Protected ros As ROSConnection
        return:
          type: Global.ROSConnection
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Situations.Classifier.SituationClassifier.sean
      commentId: F:SEAN.Situations.Classifier.SituationClassifier.sean
      language: CSharp
      name:
        CSharp: sean
        VB: sean
      nameWithType:
        CSharp: SituationClassifier.sean
        VB: SituationClassifier.sean
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.sean
        VB: SEAN.Situations.Classifier.SituationClassifier.sean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: sean
        path: ''
        startLine: 10119
      syntax:
        content:
          CSharp: protected SEAN sean
          VB: Protected sean As SEAN
        return:
          type: SEAN.SEAN
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Situations.Classifier.SituationClassifier.BaseTopic
      commentId: F:SEAN.Situations.Classifier.SituationClassifier.BaseTopic
      language: CSharp
      name:
        CSharp: BaseTopic
        VB: BaseTopic
      nameWithType:
        CSharp: SituationClassifier.BaseTopic
        VB: SituationClassifier.BaseTopic
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.BaseTopic
        VB: SEAN.Situations.Classifier.SituationClassifier.BaseTopic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: BaseTopic
        path: ''
        startLine: 10120
      syntax:
        content:
          CSharp: protected string BaseTopic
          VB: Protected BaseTopic As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
      commentId: P:SEAN.Situations.Classifier.SituationClassifier.ClassifierType
      language: CSharp
      name:
        CSharp: ClassifierType
        VB: ClassifierType
      nameWithType:
        CSharp: SituationClassifier.ClassifierType
        VB: SituationClassifier.ClassifierType
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
        VB: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: ClassifierType
        path: ''
        startLine: 10122
      syntax:
        content:
          CSharp: protected abstract string ClassifierType { get; }
          VB: Protected MustOverride ReadOnly Property ClassifierType As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Classifier.SituationClassifier.ClassifierType*
      modifiers:
        CSharp:
        - protected
        - abstract
        - get
        VB:
        - Protected
        - MustOverride
        - ReadOnly
    - id: SEAN.Situations.Classifier.SituationClassifier.empty
      commentId: P:SEAN.Situations.Classifier.SituationClassifier.empty
      language: CSharp
      name:
        CSharp: empty
        VB: empty
      nameWithType:
        CSharp: SituationClassifier.empty
        VB: SituationClassifier.empty
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.empty
        VB: SEAN.Situations.Classifier.SituationClassifier.empty
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: empty
        path: ''
        startLine: 10124
      syntax:
        content:
          CSharp: public Situation empty { get; }
          VB: Public ReadOnly Property empty As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Classifier.SituationClassifier.empty*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Classifier.SituationClassifier.downPath
      commentId: P:SEAN.Situations.Classifier.SituationClassifier.downPath
      language: CSharp
      name:
        CSharp: downPath
        VB: downPath
      nameWithType:
        CSharp: SituationClassifier.downPath
        VB: SituationClassifier.downPath
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.downPath
        VB: SEAN.Situations.Classifier.SituationClassifier.downPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: downPath
        path: ''
        startLine: 10125
      syntax:
        content:
          CSharp: public Situation downPath { get; }
          VB: Public ReadOnly Property downPath As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Classifier.SituationClassifier.downPath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Classifier.SituationClassifier.crossPath
      commentId: P:SEAN.Situations.Classifier.SituationClassifier.crossPath
      language: CSharp
      name:
        CSharp: crossPath
        VB: crossPath
      nameWithType:
        CSharp: SituationClassifier.crossPath
        VB: SituationClassifier.crossPath
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.crossPath
        VB: SEAN.Situations.Classifier.SituationClassifier.crossPath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: crossPath
        path: ''
        startLine: 10126
      syntax:
        content:
          CSharp: public Situation crossPath { get; }
          VB: Public ReadOnly Property crossPath As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Classifier.SituationClassifier.crossPath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
      commentId: P:SEAN.Situations.Classifier.SituationClassifier.leaveGroup
      language: CSharp
      name:
        CSharp: leaveGroup
        VB: leaveGroup
      nameWithType:
        CSharp: SituationClassifier.leaveGroup
        VB: SituationClassifier.leaveGroup
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
        VB: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: leaveGroup
        path: ''
        startLine: 10127
      syntax:
        content:
          CSharp: public Situation leaveGroup { get; }
          VB: Public ReadOnly Property leaveGroup As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Classifier.SituationClassifier.leaveGroup*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Classifier.SituationClassifier.joinGroup
      commentId: P:SEAN.Situations.Classifier.SituationClassifier.joinGroup
      language: CSharp
      name:
        CSharp: joinGroup
        VB: joinGroup
      nameWithType:
        CSharp: SituationClassifier.joinGroup
        VB: SituationClassifier.joinGroup
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.joinGroup
        VB: SEAN.Situations.Classifier.SituationClassifier.joinGroup
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: joinGroup
        path: ''
        startLine: 10128
      syntax:
        content:
          CSharp: public Situation joinGroup { get; }
          VB: Public ReadOnly Property joinGroup As Situation
        parameters: []
        return:
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Classifier.SituationClassifier.joinGroup*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
      commentId: P:SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
      language: CSharp
      name:
        CSharp: lastUpdateTime
        VB: lastUpdateTime
      nameWithType:
        CSharp: SituationClassifier.lastUpdateTime
        VB: SituationClassifier.lastUpdateTime
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
        VB: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: lastUpdateTime
        path: ''
        startLine: 10130
      syntax:
        content:
          CSharp: public float lastUpdateTime { get; protected set; }
          VB: Public Property lastUpdateTime As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: SEAN.Situations.Classifier.SituationClassifier.Start
      commentId: M:SEAN.Situations.Classifier.SituationClassifier.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: SituationClassifier.Start()
        VB: SituationClassifier.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.Start()
        VB: SEAN.Situations.Classifier.SituationClassifier.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: Start
        path: ''
        startLine: 10132
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: SEAN.Situations.Classifier.SituationClassifier.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
      commentId: M:SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
      language: CSharp
      name:
        CSharp: Publish(Situation)
        VB: Publish(Situation)
      nameWithType:
        CSharp: SituationClassifier.Publish(Situation)
        VB: SituationClassifier.Publish(Situation)
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
        VB: SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: Publish
        path: ''
        startLine: 10144
      syntax:
        content:
          CSharp: protected void Publish(Situation situation)
          VB: Protected Sub Publish(situation As Situation)
        parameters:
        - id: situation
          type: SEAN.Situations.Situation
      overload: SEAN.Situations.Classifier.SituationClassifier.Publish*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: SEAN.Situations.Classifier.SituationRuleBased
    commentId: T:SEAN.Situations.Classifier.SituationRuleBased
    language: CSharp
    name:
      CSharp: SituationRuleBased
      VB: SituationRuleBased
    nameWithType:
      CSharp: SituationRuleBased
      VB: SituationRuleBased
    qualifiedName:
      CSharp: SEAN.Situations.Classifier.SituationRuleBased
      VB: SEAN.Situations.Classifier.SituationRuleBased
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Classifier
    source:
      id: SituationRuleBased
      path: ''
      startLine: 10167
    syntax:
      content:
        CSharp: 'public class SituationRuleBased : SituationClassifier'
        VB: >-
          Public Class SituationRuleBased

              Inherits SituationClassifier
    inheritance:
    - System.Object
    - SEAN.Situations.Classifier.SituationClassifier
    inheritedMembers:
    - SEAN.Situations.Classifier.SituationClassifier.ros
    - SEAN.Situations.Classifier.SituationClassifier.sean
    - SEAN.Situations.Classifier.SituationClassifier.BaseTopic
    - SEAN.Situations.Classifier.SituationClassifier.empty
    - SEAN.Situations.Classifier.SituationClassifier.downPath
    - SEAN.Situations.Classifier.SituationClassifier.crossPath
    - SEAN.Situations.Classifier.SituationClassifier.leaveGroup
    - SEAN.Situations.Classifier.SituationClassifier.joinGroup
    - SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
    - SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType
      commentId: P:SEAN.Situations.Classifier.SituationRuleBased.ClassifierType
      language: CSharp
      name:
        CSharp: ClassifierType
        VB: ClassifierType
      nameWithType:
        CSharp: SituationRuleBased.ClassifierType
        VB: SituationRuleBased.ClassifierType
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType
        VB: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: ClassifierType
        path: ''
        startLine: 10170
      syntax:
        content:
          CSharp: protected override string ClassifierType { get; }
          VB: Protected Overrides ReadOnly Property ClassifierType As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType*
      overridden: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
      modifiers:
        CSharp:
        - protected
        - override
        - get
        VB:
        - Protected
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Classifier.SituationRuleBased.UpdateFrequency
      commentId: F:SEAN.Situations.Classifier.SituationRuleBased.UpdateFrequency
      language: CSharp
      name:
        CSharp: UpdateFrequency
        VB: UpdateFrequency
      nameWithType:
        CSharp: SituationRuleBased.UpdateFrequency
        VB: SituationRuleBased.UpdateFrequency
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.UpdateFrequency
        VB: SEAN.Situations.Classifier.SituationRuleBased.UpdateFrequency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: UpdateFrequency
        path: ''
        startLine: 10175
      summary: Classifer update frequency
      example: []
      syntax:
        content:
          CSharp: public float UpdateFrequency
          VB: Public UpdateFrequency As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyPedestrianThreshold
      commentId: F:SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyPedestrianThreshold
      language: CSharp
      name:
        CSharp: ParamNearbyPedestrianThreshold
        VB: ParamNearbyPedestrianThreshold
      nameWithType:
        CSharp: SituationRuleBased.ParamNearbyPedestrianThreshold
        VB: SituationRuleBased.ParamNearbyPedestrianThreshold
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyPedestrianThreshold
        VB: SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyPedestrianThreshold
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: ParamNearbyPedestrianThreshold
        path: ''
        startLine: 10177
      summary: Pedestrians within this many meters of the robot will be considered.
      example: []
      syntax:
        content:
          CSharp: public float ParamNearbyPedestrianThreshold
          VB: Public ParamNearbyPedestrianThreshold As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyGroupThreshold
      commentId: F:SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyGroupThreshold
      language: CSharp
      name:
        CSharp: ParamNearbyGroupThreshold
        VB: ParamNearbyGroupThreshold
      nameWithType:
        CSharp: SituationRuleBased.ParamNearbyGroupThreshold
        VB: SituationRuleBased.ParamNearbyGroupThreshold
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyGroupThreshold
        VB: SEAN.Situations.Classifier.SituationRuleBased.ParamNearbyGroupThreshold
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: ParamNearbyGroupThreshold
        path: ''
        startLine: 10179
      summary: Groups within this many meters of the robot will be considered.
      example: []
      syntax:
        content:
          CSharp: public float ParamNearbyGroupThreshold
          VB: Public ParamNearbyGroupThreshold As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Classifier.SituationRuleBased.ParamThetaDegreesEpsilon
      commentId: F:SEAN.Situations.Classifier.SituationRuleBased.ParamThetaDegreesEpsilon
      language: CSharp
      name:
        CSharp: ParamThetaDegreesEpsilon
        VB: ParamThetaDegreesEpsilon
      nameWithType:
        CSharp: SituationRuleBased.ParamThetaDegreesEpsilon
        VB: SituationRuleBased.ParamThetaDegreesEpsilon
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.ParamThetaDegreesEpsilon
        VB: SEAN.Situations.Classifier.SituationRuleBased.ParamThetaDegreesEpsilon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: ParamThetaDegreesEpsilon
        path: ''
        startLine: 10181
      summary: +/- this many degrees from 90 or 180 will still be considered parallel or perpendicular
      example: []
      syntax:
        content:
          CSharp: public float ParamThetaDegreesEpsilon
          VB: Public ParamThetaDegreesEpsilon As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Classifier.SituationRuleBased.ParamTrajectoryMinVel
      commentId: F:SEAN.Situations.Classifier.SituationRuleBased.ParamTrajectoryMinVel
      language: CSharp
      name:
        CSharp: ParamTrajectoryMinVel
        VB: ParamTrajectoryMinVel
      nameWithType:
        CSharp: SituationRuleBased.ParamTrajectoryMinVel
        VB: SituationRuleBased.ParamTrajectoryMinVel
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.ParamTrajectoryMinVel
        VB: SEAN.Situations.Classifier.SituationRuleBased.ParamTrajectoryMinVel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: ParamTrajectoryMinVel
        path: ''
        startLine: 10184
      summary: Minimum average velocity to consider a pedestrian trajectory as &quot;moving&quot;
      example: []
      syntax:
        content:
          CSharp: public float ParamTrajectoryMinVel
          VB: Public ParamTrajectoryMinVel As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Classifier.SituationRuleBased.VectorMagnitudeMinMoving
      commentId: F:SEAN.Situations.Classifier.SituationRuleBased.VectorMagnitudeMinMoving
      language: CSharp
      name:
        CSharp: VectorMagnitudeMinMoving
        VB: VectorMagnitudeMinMoving
      nameWithType:
        CSharp: SituationRuleBased.VectorMagnitudeMinMoving
        VB: SituationRuleBased.VectorMagnitudeMinMoving
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.VectorMagnitudeMinMoving
        VB: SEAN.Situations.Classifier.SituationRuleBased.VectorMagnitudeMinMoving
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: VectorMagnitudeMinMoving
        path: ''
        startLine: 10186
      summary: Minimum magnitude to consider a vector &quot;moving&quot;
      example: []
      syntax:
        content:
          CSharp: public float VectorMagnitudeMinMoving
          VB: Public VectorMagnitudeMinMoving As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Classifier.SituationRuleBased.Start
      commentId: M:SEAN.Situations.Classifier.SituationRuleBased.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: SituationRuleBased.Start()
        VB: SituationRuleBased.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Classifier.SituationRuleBased.Start()
        VB: SEAN.Situations.Classifier.SituationRuleBased.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Classifier
      source:
        id: Start
        path: ''
        startLine: 10190
      syntax:
        content:
          CSharp: public override void Start()
          VB: Public Overrides Sub Start
      overload: SEAN.Situations.Classifier.SituationRuleBased.Start*
      overridden: SEAN.Situations.Classifier.SituationClassifier.Start
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: SEAN.Situations.Scenario
  commentId: N:SEAN.Situations.Scenario
  language: CSharp
  name:
    CSharp: SEAN.Situations.Scenario
    VB: SEAN.Situations.Scenario
  nameWithType:
    CSharp: SEAN.Situations.Scenario
    VB: SEAN.Situations.Scenario
  qualifiedName:
    CSharp: SEAN.Situations.Scenario
    VB: SEAN.Situations.Scenario
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Situations.Scenario.HandcraftedSocialSituations
    commentId: T:SEAN.Situations.Scenario.HandcraftedSocialSituations
    language: CSharp
    name:
      CSharp: HandcraftedSocialSituations
      VB: HandcraftedSocialSituations
    nameWithType:
      CSharp: HandcraftedSocialSituations
      VB: HandcraftedSocialSituations
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations
      VB: SEAN.Situations.Scenario.HandcraftedSocialSituations
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: HandcraftedSocialSituations
      path: ''
      startLine: 10343
    syntax:
      content:
        CSharp: 'public class HandcraftedSocialSituations : BaseScenario'
        VB: >-
          Public Class HandcraftedSocialSituations

              Inherits BaseScenario
    inheritance:
    - System.Object
    - SEAN.Situations.Scenario.BaseScenario
    inheritedMembers:
    - SEAN.Situations.Scenario.BaseScenario.pedestrianControl
    - SEAN.Situations.Scenario.BaseScenario._name
    - SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.start
      commentId: F:SEAN.Situations.Scenario.HandcraftedSocialSituations.start
      language: CSharp
      name:
        CSharp: start
        VB: start
      nameWithType:
        CSharp: HandcraftedSocialSituations.start
        VB: HandcraftedSocialSituations.start
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations.start
        VB: SEAN.Situations.Scenario.HandcraftedSocialSituations.start
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: start
        path: ''
        startLine: 10356
      syntax:
        content:
          CSharp: public Pose start
          VB: Public start As Pose
        return:
          type: Global.Pose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.goal
      commentId: F:SEAN.Situations.Scenario.HandcraftedSocialSituations.goal
      language: CSharp
      name:
        CSharp: goal
        VB: goal
      nameWithType:
        CSharp: HandcraftedSocialSituations.goal
        VB: HandcraftedSocialSituations.goal
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations.goal
        VB: SEAN.Situations.Scenario.HandcraftedSocialSituations.goal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: goal
        path: ''
        startLine: 10357
      syntax:
        content:
          CSharp: public Pose goal
          VB: Public goal As Pose
        return:
          type: Global.Pose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name
      commentId: P:SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name
      language: CSharp
      name:
        CSharp: scenario_name
        VB: scenario_name
      nameWithType:
        CSharp: HandcraftedSocialSituations.scenario_name
        VB: HandcraftedSocialSituations.scenario_name
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name
        VB: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: scenario_name
        path: ''
        startLine: 10361
      syntax:
        content:
          CSharp: public override string scenario_name { get; }
          VB: Public Overrides ReadOnly Property scenario_name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name*
      overridden: SEAN.Situations.Scenario.BaseScenario.scenario_name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start
      commentId: M:SEAN.Situations.Scenario.HandcraftedSocialSituations.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: HandcraftedSocialSituations.Start()
        VB: HandcraftedSocialSituations.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start()
        VB: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: Start
        path: ''
        startLine: 10367
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario(SEAN.Situations.Scenario.SocialSituation)
      commentId: M:SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario(SEAN.Situations.Scenario.SocialSituation)
      language: CSharp
      name:
        CSharp: NewScenario(SocialSituation)
        VB: NewScenario(SocialSituation)
      nameWithType:
        CSharp: HandcraftedSocialSituations.NewScenario(SocialSituation)
        VB: HandcraftedSocialSituations.NewScenario(SocialSituation)
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario(SEAN.Situations.Scenario.SocialSituation)
        VB: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario(SEAN.Situations.Scenario.SocialSituation)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: NewScenario
        path: ''
        startLine: 10414
      syntax:
        content:
          CSharp: public bool NewScenario(SocialSituation socialSituation)
          VB: Public Function NewScenario(socialSituation As SocialSituation) As Boolean
        parameters:
        - id: socialSituation
          type: SEAN.Situations.Scenario.SocialSituation
        return:
          type: System.Boolean
      overload: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups
      commentId: P:SEAN.Situations.Scenario.HandcraftedSocialSituations.groups
      language: CSharp
      name:
        CSharp: groups
        VB: groups
      nameWithType:
        CSharp: HandcraftedSocialSituations.groups
        VB: HandcraftedSocialSituations.groups
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups
        VB: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: groups
        path: ''
        startLine: 10518
      syntax:
        content:
          CSharp: public override TrackedGroup[] groups { get; }
          VB: Public Overrides ReadOnly Property groups As TrackedGroup()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup[]
      overload: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups*
      overridden: SEAN.Situations.Scenario.BaseScenario.groups
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents
      commentId: P:SEAN.Situations.Scenario.HandcraftedSocialSituations.agents
      language: CSharp
      name:
        CSharp: agents
        VB: agents
      nameWithType:
        CSharp: HandcraftedSocialSituations.agents
        VB: HandcraftedSocialSituations.agents
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents
        VB: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: agents
        path: ''
        startLine: 10530
      syntax:
        content:
          CSharp: public override TrackedAgent[] agents { get; }
          VB: Public Overrides ReadOnly Property agents As TrackedAgent()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedAgent[]
      overload: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents*
      overridden: SEAN.Situations.Scenario.BaseScenario.agents
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
  - id: SEAN.Situations.Scenario.GroupPublisher
    commentId: T:SEAN.Situations.Scenario.GroupPublisher
    language: CSharp
    name:
      CSharp: GroupPublisher
      VB: GroupPublisher
    nameWithType:
      CSharp: GroupPublisher
      VB: GroupPublisher
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.GroupPublisher
      VB: SEAN.Situations.Scenario.GroupPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: GroupPublisher
      path: ''
      startLine: 10555
    syntax:
      content:
        CSharp: 'public class GroupPublisher : MonoBehaviour'
        VB: >-
          Public Class GroupPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Scenario.GroupPublisher.topicName
      commentId: F:SEAN.Situations.Scenario.GroupPublisher.topicName
      language: CSharp
      name:
        CSharp: topicName
        VB: topicName
      nameWithType:
        CSharp: GroupPublisher.topicName
        VB: GroupPublisher.topicName
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.GroupPublisher.topicName
        VB: SEAN.Situations.Scenario.GroupPublisher.topicName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: topicName
        path: ''
        startLine: 10560
      syntax:
        content:
          CSharp: public string topicName
          VB: Public topicName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.GroupPublisher.frame
      commentId: F:SEAN.Situations.Scenario.GroupPublisher.frame
      language: CSharp
      name:
        CSharp: frame
        VB: frame
      nameWithType:
        CSharp: GroupPublisher.frame
        VB: GroupPublisher.frame
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.GroupPublisher.frame
        VB: SEAN.Situations.Scenario.GroupPublisher.frame
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: frame
        path: ''
        startLine: 10561
      syntax:
        content:
          CSharp: public string frame
          VB: Public frame As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Situations.Scenario.SocialSituation
    commentId: T:SEAN.Situations.Scenario.SocialSituation
    language: CSharp
    name:
      CSharp: SocialSituation
      VB: SocialSituation
    nameWithType:
      CSharp: SocialSituation
      VB: SocialSituation
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.SocialSituation
      VB: SEAN.Situations.Scenario.SocialSituation
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: SocialSituation
      path: ''
      startLine: 10595
    syntax:
      content:
        CSharp: public enum SocialSituation
        VB: Public Enum SocialSituation
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: SEAN.Situations.Scenario.SocialSituation.Empty
      commentId: F:SEAN.Situations.Scenario.SocialSituation.Empty
      language: CSharp
      name:
        CSharp: Empty
        VB: Empty
      nameWithType:
        CSharp: SocialSituation.Empty
        VB: SocialSituation.Empty
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.SocialSituation.Empty
        VB: SEAN.Situations.Scenario.SocialSituation.Empty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: Empty
        path: ''
        startLine: 10596
      syntax:
        content:
          CSharp: Empty = 0
          VB: Empty = 0
        return:
          type: SEAN.Situations.Scenario.SocialSituation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Situations.Scenario.SocialSituation.JoinGroup
      commentId: F:SEAN.Situations.Scenario.SocialSituation.JoinGroup
      language: CSharp
      name:
        CSharp: JoinGroup
        VB: JoinGroup
      nameWithType:
        CSharp: SocialSituation.JoinGroup
        VB: SocialSituation.JoinGroup
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.SocialSituation.JoinGroup
        VB: SEAN.Situations.Scenario.SocialSituation.JoinGroup
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: JoinGroup
        path: ''
        startLine: 10597
      syntax:
        content:
          CSharp: JoinGroup = 1
          VB: JoinGroup = 1
        return:
          type: SEAN.Situations.Scenario.SocialSituation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Situations.Scenario.SocialSituation.LeaveGroup
      commentId: F:SEAN.Situations.Scenario.SocialSituation.LeaveGroup
      language: CSharp
      name:
        CSharp: LeaveGroup
        VB: LeaveGroup
      nameWithType:
        CSharp: SocialSituation.LeaveGroup
        VB: SocialSituation.LeaveGroup
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.SocialSituation.LeaveGroup
        VB: SEAN.Situations.Scenario.SocialSituation.LeaveGroup
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: LeaveGroup
        path: ''
        startLine: 10598
      syntax:
        content:
          CSharp: LeaveGroup = 2
          VB: LeaveGroup = 2
        return:
          type: SEAN.Situations.Scenario.SocialSituation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Situations.Scenario.SocialSituation.DownPath
      commentId: F:SEAN.Situations.Scenario.SocialSituation.DownPath
      language: CSharp
      name:
        CSharp: DownPath
        VB: DownPath
      nameWithType:
        CSharp: SocialSituation.DownPath
        VB: SocialSituation.DownPath
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.SocialSituation.DownPath
        VB: SEAN.Situations.Scenario.SocialSituation.DownPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: DownPath
        path: ''
        startLine: 10599
      syntax:
        content:
          CSharp: DownPath = 3
          VB: DownPath = 3
        return:
          type: SEAN.Situations.Scenario.SocialSituation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: SEAN.Situations.Scenario.SocialSituation.CrossPath
      commentId: F:SEAN.Situations.Scenario.SocialSituation.CrossPath
      language: CSharp
      name:
        CSharp: CrossPath
        VB: CrossPath
      nameWithType:
        CSharp: SocialSituation.CrossPath
        VB: SocialSituation.CrossPath
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.SocialSituation.CrossPath
        VB: SEAN.Situations.Scenario.SocialSituation.CrossPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: CrossPath
        path: ''
        startLine: 10600
      syntax:
        content:
          CSharp: CrossPath = 4
          VB: CrossPath = 4
        return:
          type: SEAN.Situations.Scenario.SocialSituation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: SEAN.Situations.Scenario.BaseScenario
    commentId: T:SEAN.Situations.Scenario.BaseScenario
    language: CSharp
    name:
      CSharp: BaseScenario
      VB: BaseScenario
    nameWithType:
      CSharp: BaseScenario
      VB: BaseScenario
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.BaseScenario
      VB: SEAN.Situations.Scenario.BaseScenario
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: BaseScenario
      path: ''
      startLine: 10603
    syntax:
      content:
        CSharp: 'public abstract class BaseScenario : MonoBehaviour'
        VB: >-
          Public MustInherit Class BaseScenario

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: SEAN.Situations.Scenario.BaseScenario.pedestrianControl
      commentId: F:SEAN.Situations.Scenario.BaseScenario.pedestrianControl
      language: CSharp
      name:
        CSharp: pedestrianControl
        VB: pedestrianControl
      nameWithType:
        CSharp: BaseScenario.pedestrianControl
        VB: BaseScenario.pedestrianControl
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.BaseScenario.pedestrianControl
        VB: SEAN.Situations.Scenario.BaseScenario.pedestrianControl
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: pedestrianControl
        path: ''
        startLine: 10604
      syntax:
        content:
          CSharp: protected GameObject pedestrianControl
          VB: Protected pedestrianControl As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Situations.Scenario.BaseScenario.Start
      commentId: M:SEAN.Situations.Scenario.BaseScenario.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: BaseScenario.Start()
        VB: BaseScenario.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.BaseScenario.Start()
        VB: SEAN.Situations.Scenario.BaseScenario.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: Start
        path: ''
        startLine: 10606
      syntax:
        content:
          CSharp: protected void Start()
          VB: Protected Sub Start
      overload: SEAN.Situations.Scenario.BaseScenario.Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Situations.Scenario.BaseScenario._name
      commentId: F:SEAN.Situations.Scenario.BaseScenario._name
      language: CSharp
      name:
        CSharp: _name
        VB: _name
      nameWithType:
        CSharp: BaseScenario._name
        VB: BaseScenario._name
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.BaseScenario._name
        VB: SEAN.Situations.Scenario.BaseScenario._name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: _name
        path: ''
        startLine: 10610
      syntax:
        content:
          CSharp: protected string _name
          VB: Protected _name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Situations.Scenario.BaseScenario.scenario_name
      commentId: P:SEAN.Situations.Scenario.BaseScenario.scenario_name
      language: CSharp
      name:
        CSharp: scenario_name
        VB: scenario_name
      nameWithType:
        CSharp: BaseScenario.scenario_name
        VB: BaseScenario.scenario_name
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.BaseScenario.scenario_name
        VB: SEAN.Situations.Scenario.BaseScenario.scenario_name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: scenario_name
        path: ''
        startLine: 10611
      syntax:
        content:
          CSharp: public virtual string scenario_name { get; }
          VB: Public Overridable ReadOnly Property scenario_name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Scenario.BaseScenario.scenario_name*
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
      commentId: M:SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
      language: CSharp
      name:
        CSharp: SetScenarioName(String)
        VB: SetScenarioName(String)
      nameWithType:
        CSharp: BaseScenario.SetScenarioName(String)
        VB: BaseScenario.SetScenarioName(String)
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
        VB: SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: SetScenarioName
        path: ''
        startLine: 10619
      syntax:
        content:
          CSharp: public void SetScenarioName(string name)
          VB: Public Sub SetScenarioName(name As String)
        parameters:
        - id: name
          type: System.String
      overload: SEAN.Situations.Scenario.BaseScenario.SetScenarioName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.BaseScenario.groups
      commentId: P:SEAN.Situations.Scenario.BaseScenario.groups
      language: CSharp
      name:
        CSharp: groups
        VB: groups
      nameWithType:
        CSharp: BaseScenario.groups
        VB: BaseScenario.groups
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.BaseScenario.groups
        VB: SEAN.Situations.Scenario.BaseScenario.groups
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: groups
        path: ''
        startLine: 10624
      syntax:
        content:
          CSharp: public abstract TrackedGroup[] groups { get; }
          VB: Public MustOverride ReadOnly Property groups As TrackedGroup()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup[]
      overload: SEAN.Situations.Scenario.BaseScenario.groups*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: SEAN.Situations.Scenario.BaseScenario.agents
      commentId: P:SEAN.Situations.Scenario.BaseScenario.agents
      language: CSharp
      name:
        CSharp: agents
        VB: agents
      nameWithType:
        CSharp: BaseScenario.agents
        VB: BaseScenario.agents
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.BaseScenario.agents
        VB: SEAN.Situations.Scenario.BaseScenario.agents
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: agents
        path: ''
        startLine: 10625
      syntax:
        content:
          CSharp: public abstract TrackedAgent[] agents { get; }
          VB: Public MustOverride ReadOnly Property agents As TrackedAgent()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedAgent[]
      overload: SEAN.Situations.Scenario.BaseScenario.agents*
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
  - id: SEAN.Situations.Scenario.PlaybackScenario
    commentId: T:SEAN.Situations.Scenario.PlaybackScenario
    language: CSharp
    name:
      CSharp: PlaybackScenario
      VB: PlaybackScenario
    nameWithType:
      CSharp: PlaybackScenario
      VB: PlaybackScenario
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.PlaybackScenario
      VB: SEAN.Situations.Scenario.PlaybackScenario
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: PlaybackScenario
      path: ''
      startLine: 10639
    syntax:
      content:
        CSharp: 'public class PlaybackScenario : BaseScenario'
        VB: >-
          Public Class PlaybackScenario

              Inherits BaseScenario
    inheritance:
    - System.Object
    - SEAN.Situations.Scenario.BaseScenario
    inheritedMembers:
    - SEAN.Situations.Scenario.BaseScenario.pedestrianControl
    - SEAN.Situations.Scenario.BaseScenario._name
    - SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Scenario.PlaybackScenario.scenario_name
      commentId: P:SEAN.Situations.Scenario.PlaybackScenario.scenario_name
      language: CSharp
      name:
        CSharp: scenario_name
        VB: scenario_name
      nameWithType:
        CSharp: PlaybackScenario.scenario_name
        VB: PlaybackScenario.scenario_name
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.PlaybackScenario.scenario_name
        VB: SEAN.Situations.Scenario.PlaybackScenario.scenario_name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: scenario_name
        path: ''
        startLine: 10645
      syntax:
        content:
          CSharp: public override string scenario_name { get; }
          VB: Public Overrides ReadOnly Property scenario_name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Scenario.PlaybackScenario.scenario_name*
      overridden: SEAN.Situations.Scenario.BaseScenario.scenario_name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.PlaybackScenario.Start
      commentId: M:SEAN.Situations.Scenario.PlaybackScenario.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PlaybackScenario.Start()
        VB: PlaybackScenario.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.PlaybackScenario.Start()
        VB: SEAN.Situations.Scenario.PlaybackScenario.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: Start
        path: ''
        startLine: 10647
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Situations.Scenario.PlaybackScenario.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.PlaybackScenario.groups
      commentId: P:SEAN.Situations.Scenario.PlaybackScenario.groups
      language: CSharp
      name:
        CSharp: groups
        VB: groups
      nameWithType:
        CSharp: PlaybackScenario.groups
        VB: PlaybackScenario.groups
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.PlaybackScenario.groups
        VB: SEAN.Situations.Scenario.PlaybackScenario.groups
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: groups
        path: ''
        startLine: 10670
      syntax:
        content:
          CSharp: public override TrackedGroup[] groups { get; }
          VB: Public Overrides ReadOnly Property groups As TrackedGroup()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup[]
      overload: SEAN.Situations.Scenario.PlaybackScenario.groups*
      overridden: SEAN.Situations.Scenario.BaseScenario.groups
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.PlaybackScenario.agents
      commentId: P:SEAN.Situations.Scenario.PlaybackScenario.agents
      language: CSharp
      name:
        CSharp: agents
        VB: agents
      nameWithType:
        CSharp: PlaybackScenario.agents
        VB: PlaybackScenario.agents
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.PlaybackScenario.agents
        VB: SEAN.Situations.Scenario.PlaybackScenario.agents
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: agents
        path: ''
        startLine: 10679
      syntax:
        content:
          CSharp: public override TrackedAgent[] agents { get; }
          VB: Public Overrides ReadOnly Property agents As TrackedAgent()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedAgent[]
      overload: SEAN.Situations.Scenario.PlaybackScenario.agents*
      overridden: SEAN.Situations.Scenario.BaseScenario.agents
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
  - id: SEAN.Situations.Scenario.LabStudyScenario
    commentId: T:SEAN.Situations.Scenario.LabStudyScenario
    language: CSharp
    name:
      CSharp: LabStudyScenario
      VB: LabStudyScenario
    nameWithType:
      CSharp: LabStudyScenario
      VB: LabStudyScenario
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.LabStudyScenario
      VB: SEAN.Situations.Scenario.LabStudyScenario
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: LabStudyScenario
      path: ''
      startLine: 10703
    syntax:
      content:
        CSharp: 'public class LabStudyScenario : BaseScenario'
        VB: >-
          Public Class LabStudyScenario

              Inherits BaseScenario
    inheritance:
    - System.Object
    - SEAN.Situations.Scenario.BaseScenario
    inheritedMembers:
    - SEAN.Situations.Scenario.BaseScenario.pedestrianControl
    - SEAN.Situations.Scenario.BaseScenario._name
    - SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Scenario.LabStudyScenario.scenario_name
      commentId: P:SEAN.Situations.Scenario.LabStudyScenario.scenario_name
      language: CSharp
      name:
        CSharp: scenario_name
        VB: scenario_name
      nameWithType:
        CSharp: LabStudyScenario.scenario_name
        VB: LabStudyScenario.scenario_name
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.LabStudyScenario.scenario_name
        VB: SEAN.Situations.Scenario.LabStudyScenario.scenario_name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: scenario_name
        path: ''
        startLine: 10709
      syntax:
        content:
          CSharp: public override string scenario_name { get; }
          VB: Public Overrides ReadOnly Property scenario_name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Scenario.LabStudyScenario.scenario_name*
      overridden: SEAN.Situations.Scenario.BaseScenario.scenario_name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.LabStudyScenario.Start
      commentId: M:SEAN.Situations.Scenario.LabStudyScenario.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LabStudyScenario.Start()
        VB: LabStudyScenario.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.LabStudyScenario.Start()
        VB: SEAN.Situations.Scenario.LabStudyScenario.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: Start
        path: ''
        startLine: 10711
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Situations.Scenario.LabStudyScenario.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.LabStudyScenario.positions
      commentId: P:SEAN.Situations.Scenario.LabStudyScenario.positions
      language: CSharp
      name:
        CSharp: positions
        VB: positions
      nameWithType:
        CSharp: LabStudyScenario.positions
        VB: LabStudyScenario.positions
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.LabStudyScenario.positions
        VB: SEAN.Situations.Scenario.LabStudyScenario.positions
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: positions
        path: ''
        startLine: 10719
      syntax:
        content:
          CSharp: public Dictionary<string, GameObject> positions { get; }
          VB: Public ReadOnly Property positions As Dictionary(Of String, GameObject)
        parameters: []
        return:
          type: System.Collections.Generic.Dictionary{System.String,GameObject}
      overload: SEAN.Situations.Scenario.LabStudyScenario.positions*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Scenario.LabStudyScenario.AgentStart(Transform)
      commentId: M:SEAN.Situations.Scenario.LabStudyScenario.AgentStart(Transform)
      language: CSharp
      name:
        CSharp: AgentStart(Transform)
        VB: AgentStart(Transform)
      nameWithType:
        CSharp: LabStudyScenario.AgentStart(Transform)
        VB: LabStudyScenario.AgentStart(Transform)
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.LabStudyScenario.AgentStart(Transform)
        VB: SEAN.Situations.Scenario.LabStudyScenario.AgentStart(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: AgentStart
        path: ''
        startLine: 10723
      syntax:
        content:
          CSharp: public void AgentStart(Transform start)
          VB: Public Sub AgentStart(start As Transform)
        parameters:
        - id: start
          type: Global.Transform
      overload: SEAN.Situations.Scenario.LabStudyScenario.AgentStart*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal(Transform)
      commentId: M:SEAN.Situations.Scenario.LabStudyScenario.AgentGoal(Transform)
      language: CSharp
      name:
        CSharp: AgentGoal(Transform)
        VB: AgentGoal(Transform)
      nameWithType:
        CSharp: LabStudyScenario.AgentGoal(Transform)
        VB: LabStudyScenario.AgentGoal(Transform)
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal(Transform)
        VB: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: AgentGoal
        path: ''
        startLine: 10730
      syntax:
        content:
          CSharp: public void AgentGoal(Transform goalTransform)
          VB: Public Sub AgentGoal(goalTransform As Transform)
        parameters:
        - id: goalTransform
          type: Global.Transform
      overload: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.LabStudyScenario.groups
      commentId: P:SEAN.Situations.Scenario.LabStudyScenario.groups
      language: CSharp
      name:
        CSharp: groups
        VB: groups
      nameWithType:
        CSharp: LabStudyScenario.groups
        VB: LabStudyScenario.groups
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.LabStudyScenario.groups
        VB: SEAN.Situations.Scenario.LabStudyScenario.groups
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: groups
        path: ''
        startLine: 10736
      syntax:
        content:
          CSharp: public override TrackedGroup[] groups { get; }
          VB: Public Overrides ReadOnly Property groups As TrackedGroup()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup[]
      overload: SEAN.Situations.Scenario.LabStudyScenario.groups*
      overridden: SEAN.Situations.Scenario.BaseScenario.groups
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.LabStudyScenario.agents
      commentId: P:SEAN.Situations.Scenario.LabStudyScenario.agents
      language: CSharp
      name:
        CSharp: agents
        VB: agents
      nameWithType:
        CSharp: LabStudyScenario.agents
        VB: LabStudyScenario.agents
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.LabStudyScenario.agents
        VB: SEAN.Situations.Scenario.LabStudyScenario.agents
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: agents
        path: ''
        startLine: 10740
      syntax:
        content:
          CSharp: public override TrackedAgent[] agents { get; }
          VB: Public Overrides ReadOnly Property agents As TrackedAgent()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedAgent[]
      overload: SEAN.Situations.Scenario.LabStudyScenario.agents*
      overridden: SEAN.Situations.Scenario.BaseScenario.agents
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
  - id: SEAN.Situations.Scenario.ScenarioPublisher
    commentId: T:SEAN.Situations.Scenario.ScenarioPublisher
    language: CSharp
    name:
      CSharp: ScenarioPublisher
      VB: ScenarioPublisher
    nameWithType:
      CSharp: ScenarioPublisher
      VB: ScenarioPublisher
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.ScenarioPublisher
      VB: SEAN.Situations.Scenario.ScenarioPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: ScenarioPublisher
      path: ''
      startLine: 10757
    syntax:
      content:
        CSharp: 'public class ScenarioPublisher : MonoBehaviour'
        VB: >-
          Public Class ScenarioPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Scenario.ScenarioPublisher.Topic
      commentId: F:SEAN.Situations.Scenario.ScenarioPublisher.Topic
      language: CSharp
      name:
        CSharp: Topic
        VB: Topic
      nameWithType:
        CSharp: ScenarioPublisher.Topic
        VB: ScenarioPublisher.Topic
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.ScenarioPublisher.Topic
        VB: SEAN.Situations.Scenario.ScenarioPublisher.Topic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: Topic
        path: ''
        startLine: 10759
      syntax:
        content:
          CSharp: public string Topic
          VB: Public Topic As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Situations.Scenario.GraphScenario
    commentId: T:SEAN.Situations.Scenario.GraphScenario
    language: CSharp
    name:
      CSharp: GraphScenario
      VB: GraphScenario
    nameWithType:
      CSharp: GraphScenario
      VB: GraphScenario
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.GraphScenario
      VB: SEAN.Situations.Scenario.GraphScenario
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: GraphScenario
      path: ''
      startLine: 10798
    syntax:
      content:
        CSharp: 'public class GraphScenario : BaseScenario'
        VB: >-
          Public Class GraphScenario

              Inherits BaseScenario
    inheritance:
    - System.Object
    - SEAN.Situations.Scenario.BaseScenario
    inheritedMembers:
    - SEAN.Situations.Scenario.BaseScenario.pedestrianControl
    - SEAN.Situations.Scenario.BaseScenario._name
    - SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Scenario.GraphScenario.scenario_name
      commentId: P:SEAN.Situations.Scenario.GraphScenario.scenario_name
      language: CSharp
      name:
        CSharp: scenario_name
        VB: scenario_name
      nameWithType:
        CSharp: GraphScenario.scenario_name
        VB: GraphScenario.scenario_name
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.GraphScenario.scenario_name
        VB: SEAN.Situations.Scenario.GraphScenario.scenario_name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: scenario_name
        path: ''
        startLine: 10804
      syntax:
        content:
          CSharp: public override string scenario_name { get; }
          VB: Public Overrides ReadOnly Property scenario_name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Situations.Scenario.GraphScenario.scenario_name*
      overridden: SEAN.Situations.Scenario.BaseScenario.scenario_name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.GraphScenario.Start
      commentId: M:SEAN.Situations.Scenario.GraphScenario.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: GraphScenario.Start()
        VB: GraphScenario.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.GraphScenario.Start()
        VB: SEAN.Situations.Scenario.GraphScenario.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: Start
        path: ''
        startLine: 10812
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Situations.Scenario.GraphScenario.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.GraphScenario.groups
      commentId: P:SEAN.Situations.Scenario.GraphScenario.groups
      language: CSharp
      name:
        CSharp: groups
        VB: groups
      nameWithType:
        CSharp: GraphScenario.groups
        VB: GraphScenario.groups
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.GraphScenario.groups
        VB: SEAN.Situations.Scenario.GraphScenario.groups
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: groups
        path: ''
        startLine: 10832
      syntax:
        content:
          CSharp: public override TrackedGroup[] groups { get; }
          VB: Public Overrides ReadOnly Property groups As TrackedGroup()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup[]
      overload: SEAN.Situations.Scenario.GraphScenario.groups*
      overridden: SEAN.Situations.Scenario.BaseScenario.groups
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: SEAN.Situations.Scenario.GraphScenario.agents
      commentId: P:SEAN.Situations.Scenario.GraphScenario.agents
      language: CSharp
      name:
        CSharp: agents
        VB: agents
      nameWithType:
        CSharp: GraphScenario.agents
        VB: GraphScenario.agents
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.GraphScenario.agents
        VB: SEAN.Situations.Scenario.GraphScenario.agents
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: agents
        path: ''
        startLine: 10847
      syntax:
        content:
          CSharp: public override TrackedAgent[] agents { get; }
          VB: Public Overrides ReadOnly Property agents As TrackedAgent()
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedAgent[]
      overload: SEAN.Situations.Scenario.GraphScenario.agents*
      overridden: SEAN.Situations.Scenario.BaseScenario.agents
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
  - id: SEAN.Situations.Scenario.AgentPublisher
    commentId: T:SEAN.Situations.Scenario.AgentPublisher
    language: CSharp
    name:
      CSharp: AgentPublisher
      VB: AgentPublisher
    nameWithType:
      CSharp: AgentPublisher
      VB: AgentPublisher
    qualifiedName:
      CSharp: SEAN.Situations.Scenario.AgentPublisher
      VB: SEAN.Situations.Scenario.AgentPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Scenario
    source:
      id: AgentPublisher
      path: ''
      startLine: 10868
    syntax:
      content:
        CSharp: 'public class AgentPublisher : MonoBehaviour'
        VB: >-
          Public Class AgentPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Scenario.AgentPublisher.topicName
      commentId: F:SEAN.Situations.Scenario.AgentPublisher.topicName
      language: CSharp
      name:
        CSharp: topicName
        VB: topicName
      nameWithType:
        CSharp: AgentPublisher.topicName
        VB: AgentPublisher.topicName
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.AgentPublisher.topicName
        VB: SEAN.Situations.Scenario.AgentPublisher.topicName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: topicName
        path: ''
        startLine: 10873
      syntax:
        content:
          CSharp: public string topicName
          VB: Public topicName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Scenario.AgentPublisher.frame
      commentId: F:SEAN.Situations.Scenario.AgentPublisher.frame
      language: CSharp
      name:
        CSharp: frame
        VB: frame
      nameWithType:
        CSharp: AgentPublisher.frame
        VB: AgentPublisher.frame
      qualifiedName:
        CSharp: SEAN.Situations.Scenario.AgentPublisher.frame
        VB: SEAN.Situations.Scenario.AgentPublisher.frame
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Scenario
      source:
        id: frame
        path: ''
        startLine: 10874
      syntax:
        content:
          CSharp: public string frame
          VB: Public frame As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Situations.Trajectory
  commentId: N:SEAN.Situations.Trajectory
  language: CSharp
  name:
    CSharp: SEAN.Situations.Trajectory
    VB: SEAN.Situations.Trajectory
  nameWithType:
    CSharp: SEAN.Situations.Trajectory
    VB: SEAN.Situations.Trajectory
  qualifiedName:
    CSharp: SEAN.Situations.Trajectory
    VB: SEAN.Situations.Trajectory
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Situations.Trajectory.TrackedAgent
    commentId: T:SEAN.Situations.Trajectory.TrackedAgent
    language: CSharp
    name:
      CSharp: TrackedAgent
      VB: TrackedAgent
    nameWithType:
      CSharp: TrackedAgent
      VB: TrackedAgent
    qualifiedName:
      CSharp: SEAN.Situations.Trajectory.TrackedAgent
      VB: SEAN.Situations.Trajectory.TrackedAgent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Trajectory
    source:
      id: TrackedAgent
      path: ''
      startLine: 10914
    syntax:
      content:
        CSharp: 'public class TrackedAgent : MonoBehaviour'
        VB: >-
          Public Class TrackedAgent

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Trajectory.TrackedAgent.trajectory
      commentId: P:SEAN.Situations.Trajectory.TrackedAgent.trajectory
      language: CSharp
      name:
        CSharp: trajectory
        VB: trajectory
      nameWithType:
        CSharp: TrackedAgent.trajectory
        VB: TrackedAgent.trajectory
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedAgent.trajectory
        VB: SEAN.Situations.Trajectory.TrackedAgent.trajectory
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: trajectory
        path: ''
        startLine: 10916
      syntax:
        content:
          CSharp: public TrackedTrajectory trajectory { get; }
          VB: Public ReadOnly Property trajectory As TrackedTrajectory
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedTrajectory
      overload: SEAN.Situations.Trajectory.TrackedAgent.trajectory*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedAgent.Start
      commentId: M:SEAN.Situations.Trajectory.TrackedAgent.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: TrackedAgent.Start()
        VB: TrackedAgent.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedAgent.Start()
        VB: SEAN.Situations.Trajectory.TrackedAgent.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: Start
        path: ''
        startLine: 10928
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: SEAN.Situations.Trajectory.TrackedAgent.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: SEAN.Situations.Trajectory.TrackedGroup
    commentId: T:SEAN.Situations.Trajectory.TrackedGroup
    language: CSharp
    name:
      CSharp: TrackedGroup
      VB: TrackedGroup
    nameWithType:
      CSharp: TrackedGroup
      VB: TrackedGroup
    qualifiedName:
      CSharp: SEAN.Situations.Trajectory.TrackedGroup
      VB: SEAN.Situations.Trajectory.TrackedGroup
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Trajectory
    source:
      id: TrackedGroup
      path: ''
      startLine: 10945
    syntax:
      content:
        CSharp: 'public class TrackedGroup : MonoBehaviour'
        VB: >-
          Public Class TrackedGroup

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Trajectory.TrackedGroup.SearchRadius
      commentId: F:SEAN.Situations.Trajectory.TrackedGroup.SearchRadius
      language: CSharp
      name:
        CSharp: SearchRadius
        VB: SearchRadius
      nameWithType:
        CSharp: TrackedGroup.SearchRadius
        VB: TrackedGroup.SearchRadius
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedGroup.SearchRadius
        VB: SEAN.Situations.Trajectory.TrackedGroup.SearchRadius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: SearchRadius
        path: ''
        startLine: 10947
      syntax:
        content:
          CSharp: public float SearchRadius
          VB: Public SearchRadius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedGroup.radius
      commentId: P:SEAN.Situations.Trajectory.TrackedGroup.radius
      language: CSharp
      name:
        CSharp: radius
        VB: radius
      nameWithType:
        CSharp: TrackedGroup.radius
        VB: TrackedGroup.radius
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedGroup.radius
        VB: SEAN.Situations.Trajectory.TrackedGroup.radius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: radius
        path: ''
        startLine: 10948
      syntax:
        content:
          CSharp: public float radius { get; }
          VB: Public ReadOnly Property radius As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Situations.Trajectory.TrackedGroup.radius*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedGroup.center
      commentId: P:SEAN.Situations.Trajectory.TrackedGroup.center
      language: CSharp
      name:
        CSharp: center
        VB: center
      nameWithType:
        CSharp: TrackedGroup.center
        VB: TrackedGroup.center
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedGroup.center
        VB: SEAN.Situations.Trajectory.TrackedGroup.center
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: center
        path: ''
        startLine: 10949
      syntax:
        content:
          CSharp: public Vector3 center { get; }
          VB: Public ReadOnly Property center As Vector3
        parameters: []
        return:
          type: Global.Vector3
      overload: SEAN.Situations.Trajectory.TrackedGroup.center*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach(GameObject)
      commentId: M:SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach(GameObject)
      language: CSharp
      name:
        CSharp: GetOrAttach(GameObject)
        VB: GetOrAttach(GameObject)
      nameWithType:
        CSharp: TrackedGroup.GetOrAttach(GameObject)
        VB: TrackedGroup.GetOrAttach(GameObject)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach(GameObject)
        VB: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: GetOrAttach
        path: ''
        startLine: 10950
      syntax:
        content:
          CSharp: public static TrackedGroup GetOrAttach(GameObject go)
          VB: Public Shared Function GetOrAttach(go As GameObject) As TrackedGroup
        parameters:
        - id: go
          type: Global.GameObject
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup
      overload: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers(System.Single,System.Single)
      commentId: M:SEAN.Situations.Trajectory.TrackedGroup.GroupMembers(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GroupMembers(Single, Single)
        VB: GroupMembers(Single, Single)
      nameWithType:
        CSharp: TrackedGroup.GroupMembers(Single, Single)
        VB: TrackedGroup.GroupMembers(Single, Single)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers(System.Single, System.Single)
        VB: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: GroupMembers
        path: ''
        startLine: 10964
      example: []
      syntax:
        content:
          CSharp: public List<TrackedTrajectory> GroupMembers(float movingVelocity = 1.5F, float degreesEpsilon = 45F)
          VB: Public Function GroupMembers(movingVelocity As Single = 1.5F, degreesEpsilon As Single = 45F) As List(Of TrackedTrajectory)
        parameters:
        - id: movingVelocity
          type: System.Single
        - id: degreesEpsilon
          type: System.Single
        return:
          type: System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedTrajectory}
      overload: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator(Vector3@,Quaternion@,System.Single)
      commentId: M:SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator(Vector3@,Quaternion@,System.Single)
      language: CSharp
      name:
        CSharp: GroupMemberLocationGenerator(out Vector3, out Quaternion, Single)
        VB: GroupMemberLocationGenerator(ByRef Vector3, ByRef Quaternion, Single)
      nameWithType:
        CSharp: TrackedGroup.GroupMemberLocationGenerator(out Vector3, out Quaternion, Single)
        VB: TrackedGroup.GroupMemberLocationGenerator(ByRef Vector3, ByRef Quaternion, Single)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator(out Vector3, out Quaternion, System.Single)
        VB: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator(ByRef Vector3, ByRef Quaternion, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: GroupMemberLocationGenerator
        path: ''
        startLine: 10990
      syntax:
        content:
          CSharp: public bool GroupMemberLocationGenerator(out Vector3 position, out Quaternion rotation, float defaultRadius = 0.5F)
          VB: Public Function GroupMemberLocationGenerator(ByRef position As Vector3, ByRef rotation As Quaternion, defaultRadius As Single = 0.5F) As Boolean
        parameters:
        - id: position
          type: Global.Vector3
        - id: rotation
          type: Global.Quaternion
        - id: defaultRadius
          type: System.Single
        return:
          type: System.Boolean
      overload: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform(Transform)
      commentId: M:SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform(Transform)
      language: CSharp
      name:
        CSharp: ContainsTransform(Transform)
        VB: ContainsTransform(Transform)
      nameWithType:
        CSharp: TrackedGroup.ContainsTransform(Transform)
        VB: TrackedGroup.ContainsTransform(Transform)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform(Transform)
        VB: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: ContainsTransform
        path: ''
        startLine: 11038
      syntax:
        content:
          CSharp: public bool ContainsTransform(Transform transform)
          VB: Public Function ContainsTransform(transform As Transform) As Boolean
        parameters:
        - id: transform
          type: Global.Transform
        return:
          type: System.Boolean
      overload: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Situations.Trajectory.LinearTrajectory
    commentId: T:SEAN.Situations.Trajectory.LinearTrajectory
    language: CSharp
    name:
      CSharp: LinearTrajectory
      VB: LinearTrajectory
    nameWithType:
      CSharp: LinearTrajectory
      VB: LinearTrajectory
    qualifiedName:
      CSharp: SEAN.Situations.Trajectory.LinearTrajectory
      VB: SEAN.Situations.Trajectory.LinearTrajectory
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Trajectory
    source:
      id: LinearTrajectory
      path: ''
      startLine: 11063
    syntax:
      content:
        CSharp: public class LinearTrajectory
        VB: Public Class LinearTrajectory
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Trajectory.LinearTrajectory.poses
      commentId: P:SEAN.Situations.Trajectory.LinearTrajectory.poses
      language: CSharp
      name:
        CSharp: poses
        VB: poses
      nameWithType:
        CSharp: LinearTrajectory.poses
        VB: LinearTrajectory.poses
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.LinearTrajectory.poses
        VB: SEAN.Situations.Trajectory.LinearTrajectory.poses
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: poses
        path: ''
        startLine: 11072
      syntax:
        content:
          CSharp: public PoseStamped[] poses { get; }
          VB: Public ReadOnly Property poses As PoseStamped()
        parameters: []
        return:
          type: SEAN.Util.PoseStamped[]
      overload: SEAN.Situations.Trajectory.LinearTrajectory.poses*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses
      commentId: P:SEAN.Situations.Trajectory.LinearTrajectory.hasPoses
      language: CSharp
      name:
        CSharp: hasPoses
        VB: hasPoses
      nameWithType:
        CSharp: LinearTrajectory.hasPoses
        VB: LinearTrajectory.hasPoses
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses
        VB: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: hasPoses
        path: ''
        startLine: 11074
      syntax:
        content:
          CSharp: public bool hasPoses { get; }
          VB: Public ReadOnly Property hasPoses As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.LinearTrajectory.velocity
      commentId: P:SEAN.Situations.Trajectory.LinearTrajectory.velocity
      language: CSharp
      name:
        CSharp: velocity
        VB: velocity
      nameWithType:
        CSharp: LinearTrajectory.velocity
        VB: LinearTrajectory.velocity
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.LinearTrajectory.velocity
        VB: SEAN.Situations.Trajectory.LinearTrajectory.velocity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: velocity
        path: ''
        startLine: 11078
      syntax:
        content:
          CSharp: public float velocity { get; }
          VB: Public ReadOnly Property velocity As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Situations.Trajectory.LinearTrajectory.velocity*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.LinearTrajectory.vector
      commentId: P:SEAN.Situations.Trajectory.LinearTrajectory.vector
      language: CSharp
      name:
        CSharp: vector
        VB: vector
      nameWithType:
        CSharp: LinearTrajectory.vector
        VB: LinearTrajectory.vector
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.LinearTrajectory.vector
        VB: SEAN.Situations.Trajectory.LinearTrajectory.vector
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: vector
        path: ''
        startLine: 11087
      syntax:
        content:
          CSharp: public Vector2 vector { get; }
          VB: Public ReadOnly Property vector As Vector2
        parameters: []
        return:
          type: Global.Vector2
      overload: SEAN.Situations.Trajectory.LinearTrajectory.vector*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.LinearTrajectory.position
      commentId: P:SEAN.Situations.Trajectory.LinearTrajectory.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: LinearTrajectory.position
        VB: LinearTrajectory.position
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.LinearTrajectory.position
        VB: SEAN.Situations.Trajectory.LinearTrajectory.position
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: position
        path: ''
        startLine: 11095
      syntax:
        content:
          CSharp: public Vector2 position { get; }
          VB: Public ReadOnly Property position As Vector2
        parameters: []
        return:
          type: Global.Vector2
      overload: SEAN.Situations.Trajectory.LinearTrajectory.position*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.LinearTrajectory.#ctor(System.Int32)
      commentId: M:SEAN.Situations.Trajectory.LinearTrajectory.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: LinearTrajectory(Int32)
        VB: LinearTrajectory(Int32)
      nameWithType:
        CSharp: LinearTrajectory.LinearTrajectory(Int32)
        VB: LinearTrajectory.LinearTrajectory(Int32)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.LinearTrajectory.LinearTrajectory(System.Int32)
        VB: SEAN.Situations.Trajectory.LinearTrajectory.LinearTrajectory(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: .ctor
        path: ''
        startLine: 11100
      syntax:
        content:
          CSharp: public LinearTrajectory(int TrajectoryPoints)
          VB: Public Sub New(TrajectoryPoints As Integer)
        parameters:
        - id: TrajectoryPoints
          type: System.Int32
      overload: SEAN.Situations.Trajectory.LinearTrajectory.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.LinearTrajectory.Add(Transform)
      commentId: M:SEAN.Situations.Trajectory.LinearTrajectory.Add(Transform)
      language: CSharp
      name:
        CSharp: Add(Transform)
        VB: Add(Transform)
      nameWithType:
        CSharp: LinearTrajectory.Add(Transform)
        VB: LinearTrajectory.Add(Transform)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.LinearTrajectory.Add(Transform)
        VB: SEAN.Situations.Trajectory.LinearTrajectory.Add(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: Add
        path: ''
        startLine: 11105
      summary: Add a point to the fixed size queue. Call this method on some regular interval for a path composed of points evenly spaced in time.
      example: []
      syntax:
        content:
          CSharp: public void Add(Transform transform)
          VB: Public Sub Add(transform As Transform)
        parameters:
        - id: transform
          type: Global.Transform
      overload: SEAN.Situations.Trajectory.LinearTrajectory.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Situations.Trajectory.TrackedTrajectory
    commentId: T:SEAN.Situations.Trajectory.TrackedTrajectory
    language: CSharp
    name:
      CSharp: TrackedTrajectory
      VB: TrackedTrajectory
    nameWithType:
      CSharp: TrackedTrajectory
      VB: TrackedTrajectory
    qualifiedName:
      CSharp: SEAN.Situations.Trajectory.TrackedTrajectory
      VB: SEAN.Situations.Trajectory.TrackedTrajectory
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Trajectory
    source:
      id: TrackedTrajectory
      path: ''
      startLine: 11203
    syntax:
      content:
        CSharp: 'public class TrackedTrajectory : MonoBehaviour'
        VB: >-
          Public Class TrackedTrajectory

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory
      commentId: P:SEAN.Situations.Trajectory.TrackedTrajectory.trajectory
      language: CSharp
      name:
        CSharp: trajectory
        VB: trajectory
      nameWithType:
        CSharp: TrackedTrajectory.trajectory
        VB: TrackedTrajectory.trajectory
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: trajectory
        path: ''
        startLine: 11207
      syntax:
        content:
          CSharp: public LinearTrajectory trajectory { get; }
          VB: Public ReadOnly Property trajectory As LinearTrajectory
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.LinearTrajectory
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject
      commentId: P:SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject
      language: CSharp
      name:
        CSharp: mainGameObject
        VB: mainGameObject
      nameWithType:
        CSharp: TrackedTrajectory.mainGameObject
        VB: TrackedTrajectory.mainGameObject
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: mainGameObject
        path: ''
        startLine: 11211
      syntax:
        content:
          CSharp: public GameObject mainGameObject { get; set; }
          VB: Public Property mainGameObject As GameObject
        parameters: []
        return:
          type: Global.GameObject
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryDeltaSec
      commentId: F:SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryDeltaSec
      language: CSharp
      name:
        CSharp: TrajectoryDeltaSec
        VB: TrajectoryDeltaSec
      nameWithType:
        CSharp: TrackedTrajectory.TrajectoryDeltaSec
        VB: TrackedTrajectory.TrajectoryDeltaSec
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryDeltaSec
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryDeltaSec
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: TrajectoryDeltaSec
        path: ''
        startLine: 11227
      syntax:
        content:
          CSharp: public float TrajectoryDeltaSec
          VB: Public TrajectoryDeltaSec As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryPoints
      commentId: F:SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryPoints
      language: CSharp
      name:
        CSharp: TrajectoryPoints
        VB: TrajectoryPoints
      nameWithType:
        CSharp: TrackedTrajectory.TrajectoryPoints
        VB: TrackedTrajectory.TrajectoryPoints
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryPoints
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.TrajectoryPoints
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: TrajectoryPoints
        path: ''
        startLine: 11228
      syntax:
        content:
          CSharp: public int TrajectoryPoints
          VB: Public TrajectoryPoints As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.position
      commentId: P:SEAN.Situations.Trajectory.TrackedTrajectory.position
      language: CSharp
      name:
        CSharp: position
        VB: position
      nameWithType:
        CSharp: TrackedTrajectory.position
        VB: TrackedTrajectory.position
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.position
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.position
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: position
        path: ''
        startLine: 11234
      syntax:
        content:
          CSharp: public Vector3 position { get; }
          VB: Public ReadOnly Property position As Vector3
        parameters: []
        return:
          type: Global.Vector3
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.position*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.orientation
      commentId: P:SEAN.Situations.Trajectory.TrackedTrajectory.orientation
      language: CSharp
      name:
        CSharp: orientation
        VB: orientation
      nameWithType:
        CSharp: TrackedTrajectory.orientation
        VB: TrackedTrajectory.orientation
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.orientation
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.orientation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: orientation
        path: ''
        startLine: 11241
      syntax:
        content:
          CSharp: public Vector3 orientation { get; }
          VB: Public ReadOnly Property orientation As Vector3
        parameters: []
        return:
          type: Global.Vector3
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.orientation*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.velocity
      commentId: P:SEAN.Situations.Trajectory.TrackedTrajectory.velocity
      language: CSharp
      name:
        CSharp: velocity
        VB: velocity
      nameWithType:
        CSharp: TrackedTrajectory.velocity
        VB: TrackedTrajectory.velocity
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.velocity
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.velocity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: velocity
        path: ''
        startLine: 11248
      syntax:
        content:
          CSharp: public float velocity { get; }
          VB: Public ReadOnly Property velocity As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.velocity*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.vector
      commentId: P:SEAN.Situations.Trajectory.TrackedTrajectory.vector
      language: CSharp
      name:
        CSharp: vector
        VB: vector
      nameWithType:
        CSharp: TrackedTrajectory.vector
        VB: TrackedTrajectory.vector
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.vector
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.vector
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: vector
        path: ''
        startLine: 11255
      syntax:
        content:
          CSharp: public Vector2 vector { get; }
          VB: Public ReadOnly Property vector As Vector2
        parameters: []
        return:
          type: Global.Vector2
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.vector*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt(Vector3,System.Single)
      commentId: M:SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt(Vector3,System.Single)
      language: CSharp
      name:
        CSharp: lookingAt(Vector3, Single)
        VB: lookingAt(Vector3, Single)
      nameWithType:
        CSharp: TrackedTrajectory.lookingAt(Vector3, Single)
        VB: TrackedTrajectory.lookingAt(Vector3, Single)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt(Vector3, System.Single)
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt(Vector3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: lookingAt
        path: ''
        startLine: 11264
      syntax:
        content:
          CSharp: public bool lookingAt(Vector3 groupCenter, float degreesEpsilon = 45F)
          VB: Public Function lookingAt(groupCenter As Vector3, degreesEpsilon As Single = 45F) As Boolean
        parameters:
        - id: groupCenter
          type: Global.Vector3
        - id: degreesEpsilon
          type: System.Single
        return:
          type: System.Boolean
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards(Vector3,System.Single)
      commentId: M:SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards(Vector3,System.Single)
      language: CSharp
      name:
        CSharp: movingTowards(Vector3, Single)
        VB: movingTowards(Vector3, Single)
      nameWithType:
        CSharp: TrackedTrajectory.movingTowards(Vector3, Single)
        VB: TrackedTrajectory.movingTowards(Vector3, Single)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards(Vector3, System.Single)
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards(Vector3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: movingTowards
        path: ''
        startLine: 11271
      syntax:
        content:
          CSharp: public bool movingTowards(Vector3 point, float minVelocity = 0.5F)
          VB: Public Function movingTowards(point As Vector3, minVelocity As Single = 0.5F) As Boolean
        parameters:
        - id: point
          type: Global.Vector3
        - id: minVelocity
          type: System.Single
        return:
          type: System.Boolean
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents(System.Single)
      commentId: M:SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents(System.Single)
      language: CSharp
      name:
        CSharp: nearbyAgents(Single)
        VB: nearbyAgents(Single)
      nameWithType:
        CSharp: TrackedTrajectory.nearbyAgents(Single)
        VB: TrackedTrajectory.nearbyAgents(Single)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents(System.Single)
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: nearbyAgents
        path: ''
        startLine: 11280
      summary: "\nTrackedTrajectories|Agents|Robots near this game object\nMust have an attached collider and script of the appropriate type\n"
      example: []
      syntax:
        content:
          CSharp: public List<TrackedAgent> nearbyAgents(float Threshold)
          VB: Public Function nearbyAgents(Threshold As Single) As List(Of TrackedAgent)
        parameters:
        - id: Threshold
          type: System.Single
        return:
          type: System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedAgent}
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.Angle(SEAN.Situations.Trajectory.TrackedTrajectory)
      commentId: M:SEAN.Situations.Trajectory.TrackedTrajectory.Angle(SEAN.Situations.Trajectory.TrackedTrajectory)
      language: CSharp
      name:
        CSharp: Angle(TrackedTrajectory)
        VB: Angle(TrackedTrajectory)
      nameWithType:
        CSharp: TrackedTrajectory.Angle(TrackedTrajectory)
        VB: TrackedTrajectory.Angle(TrackedTrajectory)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.Angle(SEAN.Situations.Trajectory.TrackedTrajectory)
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.Angle(SEAN.Situations.Trajectory.TrackedTrajectory)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: Angle
        path: ''
        startLine: 11304
      syntax:
        content:
          CSharp: public float Angle(TrackedTrajectory b)
          VB: Public Function Angle(b As TrackedTrajectory) As Single
        parameters:
        - id: b
          type: SEAN.Situations.Trajectory.TrackedTrajectory
        return:
          type: System.Single
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.Angle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.Angle(Vector2)
      commentId: M:SEAN.Situations.Trajectory.TrackedTrajectory.Angle(Vector2)
      language: CSharp
      name:
        CSharp: Angle(Vector2)
        VB: Angle(Vector2)
      nameWithType:
        CSharp: TrackedTrajectory.Angle(Vector2)
        VB: TrackedTrajectory.Angle(Vector2)
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.Angle(Vector2)
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.Angle(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: Angle
        path: ''
        startLine: 11310
      syntax:
        content:
          CSharp: public float Angle(Vector2 b)
          VB: Public Function Angle(b As Vector2) As Single
        parameters:
        - id: b
          type: Global.Vector2
        return:
          type: System.Single
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.Angle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.Start
      commentId: M:SEAN.Situations.Trajectory.TrackedTrajectory.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: TrackedTrajectory.Start()
        VB: TrackedTrajectory.Start()
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.Start()
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: Start
        path: ''
        startLine: 11316
      syntax:
        content:
          CSharp: public virtual void Start()
          VB: Public Overridable Sub Start
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.Start*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: SEAN.Situations.Trajectory.TrackedTrajectory.Update
      commentId: M:SEAN.Situations.Trajectory.TrackedTrajectory.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TrackedTrajectory.Update()
        VB: TrackedTrajectory.Update()
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.TrackedTrajectory.Update()
        VB: SEAN.Situations.Trajectory.TrackedTrajectory.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: Update
        path: ''
        startLine: 11321
      syntax:
        content:
          CSharp: public virtual void Update()
          VB: Public Overridable Sub Update
      overload: SEAN.Situations.Trajectory.TrackedTrajectory.Update*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: SEAN.Situations.Trajectory.ITrackedGroup
    commentId: T:SEAN.Situations.Trajectory.ITrackedGroup
    language: CSharp
    name:
      CSharp: ITrackedGroup
      VB: ITrackedGroup
    nameWithType:
      CSharp: ITrackedGroup
      VB: ITrackedGroup
    qualifiedName:
      CSharp: SEAN.Situations.Trajectory.ITrackedGroup
      VB: SEAN.Situations.Trajectory.ITrackedGroup
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Situations.Trajectory
    source:
      id: ITrackedGroup
      path: ''
      startLine: 11346
    syntax:
      content:
        CSharp: public interface ITrackedGroup
        VB: Public Interface ITrackedGroup
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: SEAN.Situations.Trajectory.ITrackedGroup.group
      commentId: P:SEAN.Situations.Trajectory.ITrackedGroup.group
      language: CSharp
      name:
        CSharp: group
        VB: group
      nameWithType:
        CSharp: ITrackedGroup.group
        VB: ITrackedGroup.group
      qualifiedName:
        CSharp: SEAN.Situations.Trajectory.ITrackedGroup.group
        VB: SEAN.Situations.Trajectory.ITrackedGroup.group
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Situations.Trajectory
      source:
        id: group
        path: ''
        startLine: 11348
      syntax:
        content:
          CSharp: TrackedGroup group { get; }
          VB: ReadOnly Property group As TrackedGroup
        parameters: []
        return:
          type: SEAN.Situations.Trajectory.TrackedGroup
      overload: SEAN.Situations.Trajectory.ITrackedGroup.group*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
- id: SEAN.Environment
  commentId: N:SEAN.Environment
  language: CSharp
  name:
    CSharp: SEAN.Environment
    VB: SEAN.Environment
  nameWithType:
    CSharp: SEAN.Environment
    VB: SEAN.Environment
  qualifiedName:
    CSharp: SEAN.Environment
    VB: SEAN.Environment
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Environment.Environment
    commentId: T:SEAN.Environment.Environment
    language: CSharp
    name:
      CSharp: Environment
      VB: Environment
    nameWithType:
      CSharp: Environment
      VB: Environment
    qualifiedName:
      CSharp: SEAN.Environment.Environment
      VB: SEAN.Environment.Environment
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Environment
    source:
      id: Environment
      path: ''
      startLine: 11362
    syntax:
      content:
        CSharp: 'public class Environment : MonoBehaviour'
        VB: >-
          Public Class Environment

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Environment.Environment.name
      commentId: P:SEAN.Environment.Environment.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: Environment.name
        VB: Environment.name
      qualifiedName:
        CSharp: SEAN.Environment.Environment.name
        VB: SEAN.Environment.Environment.name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Environment
      source:
        id: name
        path: ''
        startLine: 11364
      syntax:
        content:
          CSharp: public string name { get; }
          VB: Public ReadOnly Property name As String
        parameters: []
        return:
          type: System.String
      overload: SEAN.Environment.Environment.name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Environment.Environment.Start
      commentId: M:SEAN.Environment.Environment.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Environment.Start()
        VB: Environment.Start()
      qualifiedName:
        CSharp: SEAN.Environment.Environment.Start()
        VB: SEAN.Environment.Environment.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Environment
      source:
        id: Start
        path: ''
        startLine: 11366
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: SEAN.Environment.Environment.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Display
  commentId: N:SEAN.Display
  language: CSharp
  name:
    CSharp: SEAN.Display
    VB: SEAN.Display
  nameWithType:
    CSharp: SEAN.Display
    VB: SEAN.Display
  qualifiedName:
    CSharp: SEAN.Display
    VB: SEAN.Display
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Display.PlanVisualizer
    commentId: T:SEAN.Display.PlanVisualizer
    language: CSharp
    name:
      CSharp: PlanVisualizer
      VB: PlanVisualizer
    nameWithType:
      CSharp: PlanVisualizer
      VB: PlanVisualizer
    qualifiedName:
      CSharp: SEAN.Display.PlanVisualizer
      VB: SEAN.Display.PlanVisualizer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Display
    source:
      id: PlanVisualizer
      path: ''
      startLine: 11387
    syntax:
      content:
        CSharp: 'public class PlanVisualizer : MonoBehaviour'
        VB: >-
          Public Class PlanVisualizer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Display.PlanVisualizer.Topic
      commentId: F:SEAN.Display.PlanVisualizer.Topic
      language: CSharp
      name:
        CSharp: Topic
        VB: Topic
      nameWithType:
        CSharp: PlanVisualizer.Topic
        VB: PlanVisualizer.Topic
      qualifiedName:
        CSharp: SEAN.Display.PlanVisualizer.Topic
        VB: SEAN.Display.PlanVisualizer.Topic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display
      source:
        id: Topic
        path: ''
        startLine: 11391
      syntax:
        content:
          CSharp: public string Topic
          VB: Public Topic As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.PlanVisualizer.LineColor
      commentId: F:SEAN.Display.PlanVisualizer.LineColor
      language: CSharp
      name:
        CSharp: LineColor
        VB: LineColor
      nameWithType:
        CSharp: PlanVisualizer.LineColor
        VB: PlanVisualizer.LineColor
      qualifiedName:
        CSharp: SEAN.Display.PlanVisualizer.LineColor
        VB: SEAN.Display.PlanVisualizer.LineColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display
      source:
        id: LineColor
        path: ''
        startLine: 11392
      syntax:
        content:
          CSharp: public Color LineColor
          VB: Public LineColor As Color
        return:
          type: Global.Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.PlanVisualizer.waitSec
      commentId: F:SEAN.Display.PlanVisualizer.waitSec
      language: CSharp
      name:
        CSharp: waitSec
        VB: waitSec
      nameWithType:
        CSharp: PlanVisualizer.waitSec
        VB: PlanVisualizer.waitSec
      qualifiedName:
        CSharp: SEAN.Display.PlanVisualizer.waitSec
        VB: SEAN.Display.PlanVisualizer.waitSec
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display
      source:
        id: waitSec
        path: ''
        startLine: 11393
      syntax:
        content:
          CSharp: public float waitSec
          VB: Public waitSec As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.PlanVisualizer.pThresh
      commentId: F:SEAN.Display.PlanVisualizer.pThresh
      language: CSharp
      name:
        CSharp: pThresh
        VB: pThresh
      nameWithType:
        CSharp: PlanVisualizer.pThresh
        VB: PlanVisualizer.pThresh
      qualifiedName:
        CSharp: SEAN.Display.PlanVisualizer.pThresh
        VB: SEAN.Display.PlanVisualizer.pThresh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display
      source:
        id: pThresh
        path: ''
        startLine: 11394
      syntax:
        content:
          CSharp: public float pThresh
          VB: Public pThresh As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.PlanVisualizer.LightSaberMaterial
      commentId: F:SEAN.Display.PlanVisualizer.LightSaberMaterial
      language: CSharp
      name:
        CSharp: LightSaberMaterial
        VB: LightSaberMaterial
      nameWithType:
        CSharp: PlanVisualizer.LightSaberMaterial
        VB: PlanVisualizer.LightSaberMaterial
      qualifiedName:
        CSharp: SEAN.Display.PlanVisualizer.LightSaberMaterial
        VB: SEAN.Display.PlanVisualizer.LightSaberMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display
      source:
        id: LightSaberMaterial
        path: ''
        startLine: 11402
      syntax:
        content:
          CSharp: public Material LightSaberMaterial
          VB: Public LightSaberMaterial As Material
        return:
          type: Global.Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.PlanVisualizer.SampledPath
      commentId: F:SEAN.Display.PlanVisualizer.SampledPath
      language: CSharp
      name:
        CSharp: SampledPath
        VB: SampledPath
      nameWithType:
        CSharp: PlanVisualizer.SampledPath
        VB: PlanVisualizer.SampledPath
      qualifiedName:
        CSharp: SEAN.Display.PlanVisualizer.SampledPath
        VB: SEAN.Display.PlanVisualizer.SampledPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display
      source:
        id: SampledPath
        path: ''
        startLine: 11404
      syntax:
        content:
          CSharp: public int SampledPath
          VB: Public SampledPath As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Display.FPSDisplay
    commentId: T:SEAN.Display.FPSDisplay
    language: CSharp
    name:
      CSharp: FPSDisplay
      VB: FPSDisplay
    nameWithType:
      CSharp: FPSDisplay
      VB: FPSDisplay
    qualifiedName:
      CSharp: SEAN.Display.FPSDisplay
      VB: SEAN.Display.FPSDisplay
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Display
    source:
      id: FPSDisplay
      path: ''
      startLine: 11494
    syntax:
      content:
        CSharp: 'public class FPSDisplay : MonoBehaviour'
        VB: >-
          Public Class FPSDisplay

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: SEAN.Display.DisableRosPanel
    commentId: T:SEAN.Display.DisableRosPanel
    language: CSharp
    name:
      CSharp: DisableRosPanel
      VB: DisableRosPanel
    nameWithType:
      CSharp: DisableRosPanel
      VB: DisableRosPanel
    qualifiedName:
      CSharp: SEAN.Display.DisableRosPanel
      VB: SEAN.Display.DisableRosPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Display
    source:
      id: DisableRosPanel
      path: ''
      startLine: 11523
    syntax:
      content:
        CSharp: 'public class DisableRosPanel : MonoBehaviour'
        VB: >-
          Public Class DisableRosPanel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: SEAN.Display.VolumetricLine
  commentId: N:SEAN.Display.VolumetricLine
  language: CSharp
  name:
    CSharp: SEAN.Display.VolumetricLine
    VB: SEAN.Display.VolumetricLine
  nameWithType:
    CSharp: SEAN.Display.VolumetricLine
    VB: SEAN.Display.VolumetricLine
  qualifiedName:
    CSharp: SEAN.Display.VolumetricLine
    VB: SEAN.Display.VolumetricLine
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
    commentId: T:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
    language: CSharp
    name:
      CSharp: VolumetricLineStripBehavior
      VB: VolumetricLineStripBehavior
    nameWithType:
      CSharp: VolumetricLineStripBehavior
      VB: VolumetricLineStripBehavior
    qualifiedName:
      CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
      VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Display.VolumetricLine
    source:
      id: VolumetricLineStripBehavior
      path: ''
      startLine: 11559
    syntax:
      content:
        CSharp: 'public class VolumetricLineStripBehavior : MonoBehaviour'
        VB: >-
          Public Class VolumetricLineStripBehavior

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.m_templateMaterial
      commentId: F:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.m_templateMaterial
      language: CSharp
      name:
        CSharp: m_templateMaterial
        VB: m_templateMaterial
      nameWithType:
        CSharp: VolumetricLineStripBehavior.m_templateMaterial
        VB: VolumetricLineStripBehavior.m_templateMaterial
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.m_templateMaterial
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.m_templateMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: m_templateMaterial
        path: ''
        startLine: 11572
      summary: "\nTemplate material to be used\n"
      example: []
      syntax:
        content:
          CSharp: public Material m_templateMaterial
          VB: Public m_templateMaterial As Material
        return:
          type: Global.Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial
      commentId: P:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial
      language: CSharp
      name:
        CSharp: TemplateMaterial
        VB: TemplateMaterial
      nameWithType:
        CSharp: VolumetricLineStripBehavior.TemplateMaterial
        VB: VolumetricLineStripBehavior.TemplateMaterial
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: TemplateMaterial
        path: ''
        startLine: 11623
      summary: "\nGets or sets the tmplate material.\nSetting this will only have an impact once. \nSubsequent changes will be ignored.\n"
      example: []
      syntax:
        content:
          CSharp: public Material TemplateMaterial { get; set; }
          VB: Public Property TemplateMaterial As Material
        parameters: []
        return:
          type: Global.Material
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
      commentId: P:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
      language: CSharp
      name:
        CSharp: DoNotOverwriteTemplateMaterialProperties
        VB: DoNotOverwriteTemplateMaterialProperties
      nameWithType:
        CSharp: VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
        VB: VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: DoNotOverwriteTemplateMaterialProperties
        path: ''
        startLine: 11636
      summary: "\nGets or sets whether or not the template material properties\nshould be used (false) or if the properties of this MonoBehavior\ninstance should be used (true, default).\nSetting this will only have an impact once, and then only if it\nis set before TemplateMaterial has been assigned.\n"
      example: []
      syntax:
        content:
          CSharp: public bool DoNotOverwriteTemplateMaterialProperties { get; set; }
          VB: Public Property DoNotOverwriteTemplateMaterialProperties As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor
      commentId: P:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor
      language: CSharp
      name:
        CSharp: LineColor
        VB: LineColor
      nameWithType:
        CSharp: VolumetricLineStripBehavior.LineColor
        VB: VolumetricLineStripBehavior.LineColor
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: LineColor
        path: ''
        startLine: 11645
      summary: "\nGet or set the line color of this volumetric line&apos;s material\n"
      example: []
      syntax:
        content:
          CSharp: public Color LineColor { get; set; }
          VB: Public Property LineColor As Color
        parameters: []
        return:
          type: Global.Color
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth
      commentId: P:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth
      language: CSharp
      name:
        CSharp: LineWidth
        VB: LineWidth
      nameWithType:
        CSharp: VolumetricLineStripBehavior.LineWidth
        VB: VolumetricLineStripBehavior.LineWidth
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: LineWidth
        path: ''
        startLine: 11662
      summary: "\nGet or set the line width of this volumetric line&apos;s material\n"
      example: []
      syntax:
        content:
          CSharp: public float LineWidth { get; set; }
          VB: Public Property LineWidth As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor
      commentId: P:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor
      language: CSharp
      name:
        CSharp: LightSaberFactor
        VB: LightSaberFactor
      nameWithType:
        CSharp: VolumetricLineStripBehavior.LightSaberFactor
        VB: VolumetricLineStripBehavior.LightSaberFactor
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: LightSaberFactor
        path: ''
        startLine: 11680
      summary: "\nGet or set the light saber factor of this volumetric line&apos;s material\n"
      example: []
      syntax:
        content:
          CSharp: public float LightSaberFactor { get; set; }
          VB: Public Property LightSaberFactor As Single
        parameters: []
        return:
          type: System.Single
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices
      commentId: P:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices
      language: CSharp
      name:
        CSharp: LineVertices
        VB: LineVertices
      nameWithType:
        CSharp: VolumetricLineStripBehavior.LineVertices
        VB: VolumetricLineStripBehavior.LineVertices
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: LineVertices
        path: ''
        startLine: 11697
      summary: "\nGets the vertices of this line strip\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3[] LineVertices { get; }
          VB: Public ReadOnly Property LineVertices As Vector3()
        parameters: []
        return:
          type: Global.Vector3[]
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale
      commentId: M:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale
      language: CSharp
      name:
        CSharp: UpdateLineScale()
        VB: UpdateLineScale()
      nameWithType:
        CSharp: VolumetricLineStripBehavior.UpdateLineScale()
        VB: VolumetricLineStripBehavior.UpdateLineScale()
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale()
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: UpdateLineScale
        path: ''
        startLine: 11747
      summary: "\nUpdates the line scaling of this volumetric line based on the current object scaling.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateLineScale()
          VB: Public Sub UpdateLineScale
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds
      commentId: M:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds
      language: CSharp
      name:
        CSharp: UpdateBounds()
        VB: UpdateBounds()
      nameWithType:
        CSharp: VolumetricLineStripBehavior.UpdateBounds()
        VB: VolumetricLineStripBehavior.UpdateBounds()
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds()
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: UpdateBounds
        path: ''
        startLine: 11818
      summary: "\nUpdates the bounds of this line according to the current properties, \nwhich there are: coordinates of the line vertices, line width, scaling of the object.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateBounds()
          VB: Public Sub UpdateBounds
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices(Vector3[])
      commentId: M:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices(Vector3[])
      language: CSharp
      name:
        CSharp: UpdateLineVertices(Vector3[])
        VB: UpdateLineVertices(Vector3())
      nameWithType:
        CSharp: VolumetricLineStripBehavior.UpdateLineVertices(Vector3[])
        VB: VolumetricLineStripBehavior.UpdateLineVertices(Vector3())
      qualifiedName:
        CSharp: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices(Vector3[])
        VB: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices(Vector3())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Display.VolumetricLine
      source:
        id: UpdateLineVertices
        path: ''
        startLine: 11836
      summary: "\nUpdates the vertices of this VolumetricLineStrip.\nThis is an expensive operation.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateLineVertices(Vector3[] newSetOfVertices)
          VB: Public Sub UpdateLineVertices(newSetOfVertices As Vector3())
        parameters:
        - id: newSetOfVertices
          type: Global.Vector3[]
          description: new set of vertices for the line strip.
      overload: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.TF
  commentId: N:SEAN.TF
  language: CSharp
  name:
    CSharp: SEAN.TF
    VB: SEAN.TF
  nameWithType:
    CSharp: SEAN.TF
    VB: SEAN.TF
  qualifiedName:
    CSharp: SEAN.TF
    VB: SEAN.TF
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.TF.OdometryPublisher
    commentId: T:SEAN.TF.OdometryPublisher
    language: CSharp
    name:
      CSharp: OdometryPublisher
      VB: OdometryPublisher
    nameWithType:
      CSharp: OdometryPublisher
      VB: OdometryPublisher
    qualifiedName:
      CSharp: SEAN.TF.OdometryPublisher
      VB: SEAN.TF.OdometryPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.TF
    source:
      id: OdometryPublisher
      path: ''
      startLine: 12045
    syntax:
      content:
        CSharp: 'public class OdometryPublisher : MonoBehaviour'
        VB: >-
          Public Class OdometryPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.TF.OdometryPublisher.publishMessageFrequency
      commentId: F:SEAN.TF.OdometryPublisher.publishMessageFrequency
      language: CSharp
      name:
        CSharp: publishMessageFrequency
        VB: publishMessageFrequency
      nameWithType:
        CSharp: OdometryPublisher.publishMessageFrequency
        VB: OdometryPublisher.publishMessageFrequency
      qualifiedName:
        CSharp: SEAN.TF.OdometryPublisher.publishMessageFrequency
        VB: SEAN.TF.OdometryPublisher.publishMessageFrequency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: publishMessageFrequency
        path: ''
        startLine: 12048
      syntax:
        content:
          CSharp: public float publishMessageFrequency
          VB: Public publishMessageFrequency As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.TF.OdometryPublisher.topicName
      commentId: F:SEAN.TF.OdometryPublisher.topicName
      language: CSharp
      name:
        CSharp: topicName
        VB: topicName
      nameWithType:
        CSharp: OdometryPublisher.topicName
        VB: OdometryPublisher.topicName
      qualifiedName:
        CSharp: SEAN.TF.OdometryPublisher.topicName
        VB: SEAN.TF.OdometryPublisher.topicName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: topicName
        path: ''
        startLine: 12050
      syntax:
        content:
          CSharp: public string topicName
          VB: Public topicName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.TF.OdometryPublisher.PublishedTransform
      commentId: F:SEAN.TF.OdometryPublisher.PublishedTransform
      language: CSharp
      name:
        CSharp: PublishedTransform
        VB: PublishedTransform
      nameWithType:
        CSharp: OdometryPublisher.PublishedTransform
        VB: OdometryPublisher.PublishedTransform
      qualifiedName:
        CSharp: SEAN.TF.OdometryPublisher.PublishedTransform
        VB: SEAN.TF.OdometryPublisher.PublishedTransform
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: PublishedTransform
        path: ''
        startLine: 12052
      syntax:
        content:
          CSharp: public Transform PublishedTransform
          VB: Public PublishedTransform As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.TF.OdometryPublisher.FrameId
      commentId: F:SEAN.TF.OdometryPublisher.FrameId
      language: CSharp
      name:
        CSharp: FrameId
        VB: FrameId
      nameWithType:
        CSharp: OdometryPublisher.FrameId
        VB: OdometryPublisher.FrameId
      qualifiedName:
        CSharp: SEAN.TF.OdometryPublisher.FrameId
        VB: SEAN.TF.OdometryPublisher.FrameId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: FrameId
        path: ''
        startLine: 12053
      syntax:
        content:
          CSharp: public string FrameId
          VB: Public FrameId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.TF.WorldTransformPublishers
    commentId: T:SEAN.TF.WorldTransformPublishers
    language: CSharp
    name:
      CSharp: WorldTransformPublishers
      VB: WorldTransformPublishers
    nameWithType:
      CSharp: WorldTransformPublishers
      VB: WorldTransformPublishers
    qualifiedName:
      CSharp: SEAN.TF.WorldTransformPublishers
      VB: SEAN.TF.WorldTransformPublishers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.TF
    source:
      id: WorldTransformPublishers
      path: ''
      startLine: 12126
    syntax:
      content:
        CSharp: 'public class WorldTransformPublishers : BaseTransformPublisher'
        VB: >-
          Public Class WorldTransformPublishers

              Inherits BaseTransformPublisher
    inheritance:
    - System.Object
    - SEAN.TF.BaseTransformPublisher
    inheritedMembers:
    - SEAN.TF.BaseTransformPublisher.Start
    - SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
    - SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: SEAN.TF.RelativeTransformPublisher
    commentId: T:SEAN.TF.RelativeTransformPublisher
    language: CSharp
    name:
      CSharp: RelativeTransformPublisher
      VB: RelativeTransformPublisher
    nameWithType:
      CSharp: RelativeTransformPublisher
      VB: RelativeTransformPublisher
    qualifiedName:
      CSharp: SEAN.TF.RelativeTransformPublisher
      VB: SEAN.TF.RelativeTransformPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.TF
    source:
      id: RelativeTransformPublisher
      path: ''
      startLine: 12187
    syntax:
      content:
        CSharp: 'public class RelativeTransformPublisher : BaseTransformPublisher'
        VB: >-
          Public Class RelativeTransformPublisher

              Inherits BaseTransformPublisher
    inheritance:
    - System.Object
    - SEAN.TF.BaseTransformPublisher
    inheritedMembers:
    - SEAN.TF.BaseTransformPublisher.Start
    - SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
    - SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform})
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.TF.RelativeTransformPublisher.FrameID
      commentId: F:SEAN.TF.RelativeTransformPublisher.FrameID
      language: CSharp
      name:
        CSharp: FrameID
        VB: FrameID
      nameWithType:
        CSharp: RelativeTransformPublisher.FrameID
        VB: RelativeTransformPublisher.FrameID
      qualifiedName:
        CSharp: SEAN.TF.RelativeTransformPublisher.FrameID
        VB: SEAN.TF.RelativeTransformPublisher.FrameID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: FrameID
        path: ''
        startLine: 12190
      syntax:
        content:
          CSharp: public string FrameID
          VB: Public FrameID As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.TF.BaseTransformPublisher
    commentId: T:SEAN.TF.BaseTransformPublisher
    language: CSharp
    name:
      CSharp: BaseTransformPublisher
      VB: BaseTransformPublisher
    nameWithType:
      CSharp: BaseTransformPublisher
      VB: BaseTransformPublisher
    qualifiedName:
      CSharp: SEAN.TF.BaseTransformPublisher
      VB: SEAN.TF.BaseTransformPublisher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.TF
    source:
      id: BaseTransformPublisher
      path: ''
      startLine: 12230
    syntax:
      content:
        CSharp: 'public class BaseTransformPublisher : MonoBehaviour'
        VB: >-
          Public Class BaseTransformPublisher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.TF.BaseTransformPublisher.Start
      commentId: M:SEAN.TF.BaseTransformPublisher.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: BaseTransformPublisher.Start()
        VB: BaseTransformPublisher.Start()
      qualifiedName:
        CSharp: SEAN.TF.BaseTransformPublisher.Start()
        VB: SEAN.TF.BaseTransformPublisher.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: Start
        path: ''
        startLine: 12235
      syntax:
        content:
          CSharp: protected void Start()
          VB: Protected Sub Start
      overload: SEAN.TF.BaseTransformPublisher.Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
      commentId: M:SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
      language: CSharp
      name:
        CSharp: PublishIfNew(BaseTransformPublisher.NamedTransform)
        VB: PublishIfNew(BaseTransformPublisher.NamedTransform)
      nameWithType:
        CSharp: BaseTransformPublisher.PublishIfNew(BaseTransformPublisher.NamedTransform)
        VB: BaseTransformPublisher.PublishIfNew(BaseTransformPublisher.NamedTransform)
      qualifiedName:
        CSharp: SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
        VB: SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: PublishIfNew
        path: ''
        startLine: 12252
      syntax:
        content:
          CSharp: protected void PublishIfNew(BaseTransformPublisher.NamedTransform transform)
          VB: Protected Sub PublishIfNew(transform As BaseTransformPublisher.NamedTransform)
        parameters:
        - id: transform
          type: SEAN.TF.BaseTransformPublisher.NamedTransform
      overload: SEAN.TF.BaseTransformPublisher.PublishIfNew*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform})
      commentId: M:SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform})
      language: CSharp
      name:
        CSharp: PublishIfNew(List<BaseTransformPublisher.NamedTransform>)
        VB: PublishIfNew(List(Of BaseTransformPublisher.NamedTransform))
      nameWithType:
        CSharp: BaseTransformPublisher.PublishIfNew(List<BaseTransformPublisher.NamedTransform>)
        VB: BaseTransformPublisher.PublishIfNew(List(Of BaseTransformPublisher.NamedTransform))
      qualifiedName:
        CSharp: SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List<SEAN.TF.BaseTransformPublisher.NamedTransform>)
        VB: SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List(Of SEAN.TF.BaseTransformPublisher.NamedTransform))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: PublishIfNew
        path: ''
        startLine: 12259
      syntax:
        content:
          CSharp: protected void PublishIfNew(List<BaseTransformPublisher.NamedTransform> transforms)
          VB: Protected Sub PublishIfNew(transforms As List(Of BaseTransformPublisher.NamedTransform))
        parameters:
        - id: transforms
          type: System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform}
      overload: SEAN.TF.BaseTransformPublisher.PublishIfNew*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: SEAN.TF.BaseTransformPublisher.NamedTransform
    commentId: T:SEAN.TF.BaseTransformPublisher.NamedTransform
    language: CSharp
    name:
      CSharp: BaseTransformPublisher.NamedTransform
      VB: BaseTransformPublisher.NamedTransform
    nameWithType:
      CSharp: BaseTransformPublisher.NamedTransform
      VB: BaseTransformPublisher.NamedTransform
    qualifiedName:
      CSharp: SEAN.TF.BaseTransformPublisher.NamedTransform
      VB: SEAN.TF.BaseTransformPublisher.NamedTransform
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.TF
    source:
      id: NamedTransform
      path: ''
      startLine: 12240
    syntax:
      content:
        CSharp: public class NamedTransform
        VB: Public Class NamedTransform
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.TF.BaseTransformPublisher.NamedTransform.name
      commentId: F:SEAN.TF.BaseTransformPublisher.NamedTransform.name
      language: CSharp
      name:
        CSharp: name
        VB: name
      nameWithType:
        CSharp: BaseTransformPublisher.NamedTransform.name
        VB: BaseTransformPublisher.NamedTransform.name
      qualifiedName:
        CSharp: SEAN.TF.BaseTransformPublisher.NamedTransform.name
        VB: SEAN.TF.BaseTransformPublisher.NamedTransform.name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: name
        path: ''
        startLine: 12242
      syntax:
        content:
          CSharp: public string name
          VB: Public name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.TF.BaseTransformPublisher.NamedTransform.pose
      commentId: F:SEAN.TF.BaseTransformPublisher.NamedTransform.pose
      language: CSharp
      name:
        CSharp: pose
        VB: pose
      nameWithType:
        CSharp: BaseTransformPublisher.NamedTransform.pose
        VB: BaseTransformPublisher.NamedTransform.pose
      qualifiedName:
        CSharp: SEAN.TF.BaseTransformPublisher.NamedTransform.pose
        VB: SEAN.TF.BaseTransformPublisher.NamedTransform.pose
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: pose
        path: ''
        startLine: 12243
      syntax:
        content:
          CSharp: public Geometry.MPoseStamped pose
          VB: Public pose As Geometry.MPoseStamped
        return:
          type: RosMessageTypes.Geometry.MPoseStamped
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.TF.BaseTransformPublisher.NamedTransform.#ctor(System.String,RosMessageTypes.Geometry.MPoseStamped)
      commentId: M:SEAN.TF.BaseTransformPublisher.NamedTransform.#ctor(System.String,RosMessageTypes.Geometry.MPoseStamped)
      language: CSharp
      name:
        CSharp: NamedTransform(String, Geometry.MPoseStamped)
        VB: NamedTransform(String, Geometry.MPoseStamped)
      nameWithType:
        CSharp: BaseTransformPublisher.NamedTransform.NamedTransform(String, Geometry.MPoseStamped)
        VB: BaseTransformPublisher.NamedTransform.NamedTransform(String, Geometry.MPoseStamped)
      qualifiedName:
        CSharp: SEAN.TF.BaseTransformPublisher.NamedTransform.NamedTransform(System.String, RosMessageTypes.Geometry.MPoseStamped)
        VB: SEAN.TF.BaseTransformPublisher.NamedTransform.NamedTransform(System.String, RosMessageTypes.Geometry.MPoseStamped)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: SEAN.TF
      source:
        id: .ctor
        path: ''
        startLine: 12245
      syntax:
        content:
          CSharp: public NamedTransform(string name, Geometry.MPoseStamped pose)
          VB: Public Sub New(name As String, pose As Geometry.MPoseStamped)
        parameters:
        - id: name
          type: System.String
        - id: pose
          type: RosMessageTypes.Geometry.MPoseStamped
      overload: SEAN.TF.BaseTransformPublisher.NamedTransform.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: SEAN.Control
  commentId: N:SEAN.Control
  language: CSharp
  name:
    CSharp: SEAN.Control
    VB: SEAN.Control
  nameWithType:
    CSharp: SEAN.Control
    VB: SEAN.Control
  qualifiedName:
    CSharp: SEAN.Control
    VB: SEAN.Control
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: SEAN.Control.A1PlaybackController
    commentId: T:SEAN.Control.A1PlaybackController
    language: CSharp
    name:
      CSharp: A1PlaybackController
      VB: A1PlaybackController
    nameWithType:
      CSharp: A1PlaybackController
      VB: A1PlaybackController
    qualifiedName:
      CSharp: SEAN.Control.A1PlaybackController
      VB: SEAN.Control.A1PlaybackController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Control
    source:
      id: A1PlaybackController
      path: ''
      startLine: 12325
    syntax:
      content:
        CSharp: 'public class A1PlaybackController : MonoBehaviour'
        VB: >-
          Public Class A1PlaybackController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Control.A1PlaybackController.forceLimit
      commentId: F:SEAN.Control.A1PlaybackController.forceLimit
      language: CSharp
      name:
        CSharp: forceLimit
        VB: forceLimit
      nameWithType:
        CSharp: A1PlaybackController.forceLimit
        VB: A1PlaybackController.forceLimit
      qualifiedName:
        CSharp: SEAN.Control.A1PlaybackController.forceLimit
        VB: SEAN.Control.A1PlaybackController.forceLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: forceLimit
        path: ''
        startLine: 12331
      syntax:
        content:
          CSharp: public float forceLimit
          VB: Public forceLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.A1PlaybackController.updateFrequency
      commentId: F:SEAN.Control.A1PlaybackController.updateFrequency
      language: CSharp
      name:
        CSharp: updateFrequency
        VB: updateFrequency
      nameWithType:
        CSharp: A1PlaybackController.updateFrequency
        VB: A1PlaybackController.updateFrequency
      qualifiedName:
        CSharp: SEAN.Control.A1PlaybackController.updateFrequency
        VB: SEAN.Control.A1PlaybackController.updateFrequency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: updateFrequency
        path: ''
        startLine: 12336
      syntax:
        content:
          CSharp: public int updateFrequency
          VB: Public updateFrequency As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Control.MotorController
    commentId: T:SEAN.Control.MotorController
    language: CSharp
    name:
      CSharp: MotorController
      VB: MotorController
    nameWithType:
      CSharp: MotorController
      VB: MotorController
    qualifiedName:
      CSharp: SEAN.Control.MotorController
      VB: SEAN.Control.MotorController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Control
    source:
      id: MotorController
      path: ''
      startLine: 12406
    syntax:
      content:
        CSharp: 'public class MotorController : MonoBehaviour'
        VB: >-
          Public Class MotorController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Control.MotorController.Topic
      commentId: F:SEAN.Control.MotorController.Topic
      language: CSharp
      name:
        CSharp: Topic
        VB: Topic
      nameWithType:
        CSharp: MotorController.Topic
        VB: MotorController.Topic
      qualifiedName:
        CSharp: SEAN.Control.MotorController.Topic
        VB: SEAN.Control.MotorController.Topic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: Topic
        path: ''
        startLine: 12408
      syntax:
        content:
          CSharp: public string Topic
          VB: Public Topic As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.maxTorque
      commentId: F:SEAN.Control.MotorController.maxTorque
      language: CSharp
      name:
        CSharp: maxTorque
        VB: maxTorque
      nameWithType:
        CSharp: MotorController.maxTorque
        VB: MotorController.maxTorque
      qualifiedName:
        CSharp: SEAN.Control.MotorController.maxTorque
        VB: SEAN.Control.MotorController.maxTorque
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: maxTorque
        path: ''
        startLine: 12411
      syntax:
        content:
          CSharp: public float maxTorque
          VB: Public maxTorque As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.P
      commentId: F:SEAN.Control.MotorController.P
      language: CSharp
      name:
        CSharp: P
        VB: P
      nameWithType:
        CSharp: MotorController.P
        VB: MotorController.P
      qualifiedName:
        CSharp: SEAN.Control.MotorController.P
        VB: SEAN.Control.MotorController.P
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: P
        path: ''
        startLine: 12412
      syntax:
        content:
          CSharp: public float P
          VB: Public P As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.I
      commentId: F:SEAN.Control.MotorController.I
      language: CSharp
      name:
        CSharp: I
        VB: I
      nameWithType:
        CSharp: MotorController.I
        VB: MotorController.I
      qualifiedName:
        CSharp: SEAN.Control.MotorController.I
        VB: SEAN.Control.MotorController.I
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: I
        path: ''
        startLine: 12413
      syntax:
        content:
          CSharp: public float I
          VB: Public I As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.D
      commentId: F:SEAN.Control.MotorController.D
      language: CSharp
      name:
        CSharp: D
        VB: D
      nameWithType:
        CSharp: MotorController.D
        VB: MotorController.D
      qualifiedName:
        CSharp: SEAN.Control.MotorController.D
        VB: SEAN.Control.MotorController.D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: D
        path: ''
        startLine: 12414
      syntax:
        content:
          CSharp: public float D
          VB: Public D As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.F
      commentId: F:SEAN.Control.MotorController.F
      language: CSharp
      name:
        CSharp: F
        VB: F
      nameWithType:
        CSharp: MotorController.F
        VB: MotorController.F
      qualifiedName:
        CSharp: SEAN.Control.MotorController.F
        VB: SEAN.Control.MotorController.F
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: F
        path: ''
        startLine: 12415
      syntax:
        content:
          CSharp: public float F
          VB: Public F As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.wheelName
      commentId: F:SEAN.Control.MotorController.wheelName
      language: CSharp
      name:
        CSharp: wheelName
        VB: wheelName
      nameWithType:
        CSharp: MotorController.wheelName
        VB: MotorController.wheelName
      qualifiedName:
        CSharp: SEAN.Control.MotorController.wheelName
        VB: SEAN.Control.MotorController.wheelName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: wheelName
        path: ''
        startLine: 12416
      syntax:
        content:
          CSharp: public string wheelName
          VB: Public wheelName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.ApplyLocalPositionToVisuals(WheelCollider)
      commentId: M:SEAN.Control.MotorController.ApplyLocalPositionToVisuals(WheelCollider)
      language: CSharp
      name:
        CSharp: ApplyLocalPositionToVisuals(WheelCollider)
        VB: ApplyLocalPositionToVisuals(WheelCollider)
      nameWithType:
        CSharp: MotorController.ApplyLocalPositionToVisuals(WheelCollider)
        VB: MotorController.ApplyLocalPositionToVisuals(WheelCollider)
      qualifiedName:
        CSharp: SEAN.Control.MotorController.ApplyLocalPositionToVisuals(WheelCollider)
        VB: SEAN.Control.MotorController.ApplyLocalPositionToVisuals(WheelCollider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: ApplyLocalPositionToVisuals
        path: ''
        startLine: 12486
      syntax:
        content:
          CSharp: public void ApplyLocalPositionToVisuals(WheelCollider collider)
          VB: Public Sub ApplyLocalPositionToVisuals(collider As WheelCollider)
        parameters:
        - id: collider
          type: Global.WheelCollider
      overload: SEAN.Control.MotorController.ApplyLocalPositionToVisuals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.MotorController.StopMotor(System.Boolean)
      commentId: M:SEAN.Control.MotorController.StopMotor(System.Boolean)
      language: CSharp
      name:
        CSharp: StopMotor(Boolean)
        VB: StopMotor(Boolean)
      nameWithType:
        CSharp: MotorController.StopMotor(Boolean)
        VB: MotorController.StopMotor(Boolean)
      qualifiedName:
        CSharp: SEAN.Control.MotorController.StopMotor(System.Boolean)
        VB: SEAN.Control.MotorController.StopMotor(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: StopMotor
        path: ''
        startLine: 12510
      syntax:
        content:
          CSharp: public void StopMotor(bool stoppedVal)
          VB: Public Sub StopMotor(stoppedVal As Boolean)
        parameters:
        - id: stoppedVal
          type: System.Boolean
      overload: SEAN.Control.MotorController.StopMotor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: SEAN.Control.ControlSubscriber
    commentId: T:SEAN.Control.ControlSubscriber
    language: CSharp
    name:
      CSharp: ControlSubscriber
      VB: ControlSubscriber
    nameWithType:
      CSharp: ControlSubscriber
      VB: ControlSubscriber
    qualifiedName:
      CSharp: SEAN.Control.ControlSubscriber
      VB: SEAN.Control.ControlSubscriber
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Control
    source:
      id: ControlSubscriber
      path: ''
      startLine: 12525
    syntax:
      content:
        CSharp: 'public abstract class ControlSubscriber : MonoBehaviour'
        VB: >-
          Public MustInherit Class ControlSubscriber

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: SEAN.Control.ControlSubscriber.ros
      commentId: F:SEAN.Control.ControlSubscriber.ros
      language: CSharp
      name:
        CSharp: ros
        VB: ros
      nameWithType:
        CSharp: ControlSubscriber.ros
        VB: ControlSubscriber.ros
      qualifiedName:
        CSharp: SEAN.Control.ControlSubscriber.ros
        VB: SEAN.Control.ControlSubscriber.ros
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: ros
        path: ''
        startLine: 12526
      syntax:
        content:
          CSharp: protected ROSConnection ros
          VB: Protected ros As ROSConnection
        return:
          type: Global.ROSConnection
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Control.ControlSubscriber.sean
      commentId: F:SEAN.Control.ControlSubscriber.sean
      language: CSharp
      name:
        CSharp: sean
        VB: sean
      nameWithType:
        CSharp: ControlSubscriber.sean
        VB: ControlSubscriber.sean
      qualifiedName:
        CSharp: SEAN.Control.ControlSubscriber.sean
        VB: SEAN.Control.ControlSubscriber.sean
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: sean
        path: ''
        startLine: 12527
      syntax:
        content:
          CSharp: protected SEAN sean
          VB: Protected sean As SEAN
        return:
          type: SEAN.SEAN
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Control.ControlSubscriber.Topic
      commentId: F:SEAN.Control.ControlSubscriber.Topic
      language: CSharp
      name:
        CSharp: Topic
        VB: Topic
      nameWithType:
        CSharp: ControlSubscriber.Topic
        VB: ControlSubscriber.Topic
      qualifiedName:
        CSharp: SEAN.Control.ControlSubscriber.Topic
        VB: SEAN.Control.ControlSubscriber.Topic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: Topic
        path: ''
        startLine: 12528
      syntax:
        content:
          CSharp: public string Topic
          VB: Public Topic As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.ControlSubscriber.Start
      commentId: M:SEAN.Control.ControlSubscriber.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: ControlSubscriber.Start()
        VB: ControlSubscriber.Start()
      qualifiedName:
        CSharp: SEAN.Control.ControlSubscriber.Start()
        VB: SEAN.Control.ControlSubscriber.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: Start
        path: ''
        startLine: 12530
      syntax:
        content:
          CSharp: protected void Start()
          VB: Protected Sub Start
      overload: SEAN.Control.ControlSubscriber.Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
      commentId: M:SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
      language: CSharp
      name:
        CSharp: CmdVelMessage(Geometry.MTwist)
        VB: CmdVelMessage(Geometry.MTwist)
      nameWithType:
        CSharp: ControlSubscriber.CmdVelMessage(Geometry.MTwist)
        VB: ControlSubscriber.CmdVelMessage(Geometry.MTwist)
      qualifiedName:
        CSharp: SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
        VB: SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: CmdVelMessage
        path: ''
        startLine: 12544
      syntax:
        content:
          CSharp: protected abstract void CmdVelMessage(Geometry.MTwist msg)
          VB: Protected MustOverride Sub CmdVelMessage(msg As Geometry.MTwist)
        parameters:
        - id: msg
          type: RosMessageTypes.Geometry.MTwist
      overload: SEAN.Control.ControlSubscriber.CmdVelMessage*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
  - id: SEAN.Control.VelocityController
    commentId: T:SEAN.Control.VelocityController
    language: CSharp
    name:
      CSharp: VelocityController
      VB: VelocityController
    nameWithType:
      CSharp: VelocityController
      VB: VelocityController
    qualifiedName:
      CSharp: SEAN.Control.VelocityController
      VB: SEAN.Control.VelocityController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: SEAN.Control
    source:
      id: VelocityController
      path: ''
      startLine: 12556
    syntax:
      content:
        CSharp: 'public class VelocityController : ControlSubscriber'
        VB: >-
          Public Class VelocityController

              Inherits ControlSubscriber
    inheritance:
    - System.Object
    - SEAN.Control.ControlSubscriber
    inheritedMembers:
    - SEAN.Control.ControlSubscriber.ros
    - SEAN.Control.ControlSubscriber.sean
    - SEAN.Control.ControlSubscriber.Topic
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: SEAN.Control.VelocityController.maxTimeDeltaSec
      commentId: F:SEAN.Control.VelocityController.maxTimeDeltaSec
      language: CSharp
      name:
        CSharp: maxTimeDeltaSec
        VB: maxTimeDeltaSec
      nameWithType:
        CSharp: VelocityController.maxTimeDeltaSec
        VB: VelocityController.maxTimeDeltaSec
      qualifiedName:
        CSharp: SEAN.Control.VelocityController.maxTimeDeltaSec
        VB: SEAN.Control.VelocityController.maxTimeDeltaSec
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: maxTimeDeltaSec
        path: ''
        startLine: 12561
      syntax:
        content:
          CSharp: public float maxTimeDeltaSec
          VB: Public maxTimeDeltaSec As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.VelocityController.P
      commentId: F:SEAN.Control.VelocityController.P
      language: CSharp
      name:
        CSharp: P
        VB: P
      nameWithType:
        CSharp: VelocityController.P
        VB: VelocityController.P
      qualifiedName:
        CSharp: SEAN.Control.VelocityController.P
        VB: SEAN.Control.VelocityController.P
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: P
        path: ''
        startLine: 12565
      syntax:
        content:
          CSharp: public float P
          VB: Public P As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.VelocityController.I
      commentId: F:SEAN.Control.VelocityController.I
      language: CSharp
      name:
        CSharp: I
        VB: I
      nameWithType:
        CSharp: VelocityController.I
        VB: VelocityController.I
      qualifiedName:
        CSharp: SEAN.Control.VelocityController.I
        VB: SEAN.Control.VelocityController.I
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: I
        path: ''
        startLine: 12565
      syntax:
        content:
          CSharp: public float I
          VB: Public I As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.VelocityController.D
      commentId: F:SEAN.Control.VelocityController.D
      language: CSharp
      name:
        CSharp: D
        VB: D
      nameWithType:
        CSharp: VelocityController.D
        VB: VelocityController.D
      qualifiedName:
        CSharp: SEAN.Control.VelocityController.D
        VB: SEAN.Control.VelocityController.D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: D
        path: ''
        startLine: 12565
      syntax:
        content:
          CSharp: public float D
          VB: Public D As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: SEAN.Control.VelocityController.Start
      commentId: M:SEAN.Control.VelocityController.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: VelocityController.Start()
        VB: VelocityController.Start()
      qualifiedName:
        CSharp: SEAN.Control.VelocityController.Start()
        VB: SEAN.Control.VelocityController.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: Start
        path: ''
        startLine: 12568
      syntax:
        content:
          CSharp: protected void Start()
          VB: Protected Sub Start
      overload: SEAN.Control.VelocityController.Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: SEAN.Control.VelocityController.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
      commentId: M:SEAN.Control.VelocityController.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
      language: CSharp
      name:
        CSharp: CmdVelMessage(Geometry.MTwist)
        VB: CmdVelMessage(Geometry.MTwist)
      nameWithType:
        CSharp: VelocityController.CmdVelMessage(Geometry.MTwist)
        VB: VelocityController.CmdVelMessage(Geometry.MTwist)
      qualifiedName:
        CSharp: SEAN.Control.VelocityController.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
        VB: SEAN.Control.VelocityController.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: SEAN.Control
      source:
        id: CmdVelMessage
        path: ''
        startLine: 12608
      syntax:
        content:
          CSharp: protected sealed override void CmdVelMessage(Geometry.MTwist msg)
          VB: Protected NotOverridable Overrides Sub CmdVelMessage(msg As Geometry.MTwist)
        parameters:
        - id: msg
          type: RosMessageTypes.Geometry.MTwist
      overload: SEAN.Control.VelocityController.CmdVelMessage*
      overridden: SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
      modifiers:
        CSharp:
        - protected
        - sealed
        - override
        VB:
        - Protected
        - Overrides
        - NotOverridable
references:
  IVI:
    name:
      CSharp:
      - name: IVI
        nameWithType: IVI
        qualifiedName: IVI
      VB:
      - name: IVI
        nameWithType: IVI
        qualifiedName: IVI
    isDefinition: true
    commentId: N:IVI
  IVI.INavigable:
    name:
      CSharp:
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      VB:
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
    isDefinition: true
    parent: IVI
    commentId: T:IVI.INavigable
  IVI.INavigable.destNode:
    name:
      CSharp:
      - id: IVI.INavigable.destNode
        name: destNode
        nameWithType: INavigable.destNode
        qualifiedName: IVI.INavigable.destNode
      VB:
      - id: IVI.INavigable.destNode
        name: destNode
        nameWithType: INavigable.destNode
        qualifiedName: IVI.INavigable.destNode
    isDefinition: true
    parent: IVI.INavigable
    commentId: F:IVI.INavigable.destNode
  IVI.INavigable.destPos:
    name:
      CSharp:
      - id: IVI.INavigable.destPos
        name: destPos
        nameWithType: INavigable.destPos
        qualifiedName: IVI.INavigable.destPos
      VB:
      - id: IVI.INavigable.destPos
        name: destPos
        nameWithType: INavigable.destPos
        qualifiedName: IVI.INavigable.destPos
    isDefinition: true
    parent: IVI.INavigable
    commentId: F:IVI.INavigable.destPos
  IVI.INavigable.navigating:
    name:
      CSharp:
      - id: IVI.INavigable.navigating
        name: navigating
        nameWithType: INavigable.navigating
        qualifiedName: IVI.INavigable.navigating
      VB:
      - id: IVI.INavigable.navigating
        name: navigating
        nameWithType: INavigable.navigating
        qualifiedName: IVI.INavigable.navigating
    isDefinition: true
    parent: IVI.INavigable
    commentId: F:IVI.INavigable.navigating
  IVI.INavigable.AgentTag:
    name:
      CSharp:
      - id: IVI.INavigable.AgentTag
        name: AgentTag
        nameWithType: INavigable.AgentTag
        qualifiedName: IVI.INavigable.AgentTag
      VB:
      - id: IVI.INavigable.AgentTag
        name: AgentTag
        nameWithType: INavigable.AgentTag
        qualifiedName: IVI.INavigable.AgentTag
    isDefinition: true
    parent: IVI.INavigable
    commentId: F:IVI.INavigable.AgentTag
  IVI.INavigable.Start:
    name:
      CSharp:
      - id: IVI.INavigable.Start
        name: Start
        nameWithType: INavigable.Start
        qualifiedName: IVI.INavigable.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.INavigable.Start
        name: Start
        nameWithType: INavigable.Start
        qualifiedName: IVI.INavigable.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.INavigable
    commentId: M:IVI.INavigable.Start
  IVI.INavigable.SetSampledPosition(Vector3):
    name:
      CSharp:
      - id: IVI.INavigable.SetSampledPosition(Vector3)
        name: SetSampledPosition
        nameWithType: INavigable.SetSampledPosition
        qualifiedName: IVI.INavigable.SetSampledPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.INavigable.SetSampledPosition(Vector3)
        name: SetSampledPosition
        nameWithType: INavigable.SetSampledPosition
        qualifiedName: IVI.INavigable.SetSampledPosition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.INavigable
    commentId: M:IVI.INavigable.SetSampledPosition(Vector3)
  IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3}):
    name:
      CSharp:
      - id: IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
        name: InitDest
        nameWithType: INavigable.InitDest
        qualifiedName: IVI.INavigable.InitDest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
        name: InitDest
        nameWithType: INavigable.InitDest
        qualifiedName: IVI.INavigable.InitDest
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.INavigable
    commentId: M:IVI.INavigable.InitDest(IVI.NavNode,System.ValueTuple{System.Single,Vector3})
  SEAN.Situations.Trajectory:
    name:
      CSharp:
      - name: SEAN.Situations.Trajectory
        nameWithType: SEAN.Situations.Trajectory
        qualifiedName: SEAN.Situations.Trajectory
      VB:
      - name: SEAN.Situations.Trajectory
        nameWithType: SEAN.Situations.Trajectory
        qualifiedName: SEAN.Situations.Trajectory
    isDefinition: true
    commentId: N:SEAN.Situations.Trajectory
  SEAN.Situations.Trajectory.TrackedAgent:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedAgent
        name: TrackedAgent
        nameWithType: TrackedAgent
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent
      VB:
      - id: SEAN.Situations.Trajectory.TrackedAgent
        name: TrackedAgent
        nameWithType: TrackedAgent
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent
    isDefinition: true
    parent: SEAN.Situations.Trajectory
    commentId: T:SEAN.Situations.Trajectory.TrackedAgent
  SEAN.Situations.Trajectory.TrackedAgent.trajectory:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedAgent.trajectory
        name: trajectory
        nameWithType: TrackedAgent.trajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.trajectory
      VB:
      - id: SEAN.Situations.Trajectory.TrackedAgent.trajectory
        name: trajectory
        nameWithType: TrackedAgent.trajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.trajectory
    isDefinition: true
    parent: SEAN.Situations.Trajectory.TrackedAgent
    commentId: P:SEAN.Situations.Trajectory.TrackedAgent.trajectory
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  IVI.INavigable.StartNavigation:
    name:
      CSharp:
      - id: IVI.INavigable.StartNavigation
        name: StartNavigation
        nameWithType: INavigable.StartNavigation
        qualifiedName: IVI.INavigable.StartNavigation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.INavigable.StartNavigation
        name: StartNavigation
        nameWithType: INavigable.StartNavigation
        qualifiedName: IVI.INavigable.StartNavigation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.INavigable
    commentId: M:IVI.INavigable.StartNavigation
  IVI.NewSFAvatarTarget.StartNavigation*:
    name:
      CSharp:
      - id: IVI.NewSFAvatarTarget.StartNavigation*
        name: StartNavigation
        nameWithType: NewSFAvatarTarget.StartNavigation
        qualifiedName: IVI.NewSFAvatarTarget.StartNavigation
      VB:
      - id: IVI.NewSFAvatarTarget.StartNavigation*
        name: StartNavigation
        nameWithType: NewSFAvatarTarget.StartNavigation
        qualifiedName: IVI.NewSFAvatarTarget.StartNavigation
    isDefinition: true
    commentId: Overload:IVI.NewSFAvatarTarget.StartNavigation
  IVI.INavigable.StopNavigation:
    name:
      CSharp:
      - id: IVI.INavigable.StopNavigation
        name: StopNavigation
        nameWithType: INavigable.StopNavigation
        qualifiedName: IVI.INavigable.StopNavigation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.INavigable.StopNavigation
        name: StopNavigation
        nameWithType: INavigable.StopNavigation
        qualifiedName: IVI.INavigable.StopNavigation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.INavigable
    commentId: M:IVI.INavigable.StopNavigation
  IVI.NewSFAvatarTarget.StopNavigation*:
    name:
      CSharp:
      - id: IVI.NewSFAvatarTarget.StopNavigation*
        name: StopNavigation
        nameWithType: NewSFAvatarTarget.StopNavigation
        qualifiedName: IVI.NewSFAvatarTarget.StopNavigation
      VB:
      - id: IVI.NewSFAvatarTarget.StopNavigation*
        name: StopNavigation
        nameWithType: NewSFAvatarTarget.StopNavigation
        qualifiedName: IVI.NewSFAvatarTarget.StopNavigation
    isDefinition: true
    commentId: Overload:IVI.NewSFAvatarTarget.StopNavigation
  IVI.GroupNavNode:
    name:
      CSharp:
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
      VB:
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
    isDefinition: true
    parent: IVI
    commentId: T:IVI.GroupNavNode
  IVI.INavigable.StartGroup(IVI.GroupNavNode):
    name:
      CSharp:
      - id: IVI.INavigable.StartGroup(IVI.GroupNavNode)
        name: StartGroup
        nameWithType: INavigable.StartGroup
        qualifiedName: IVI.INavigable.StartGroup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.INavigable.StartGroup(IVI.GroupNavNode)
        name: StartGroup
        nameWithType: INavigable.StartGroup
        qualifiedName: IVI.INavigable.StartGroup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.INavigable
    commentId: M:IVI.INavigable.StartGroup(IVI.GroupNavNode)
  IVI.NewSFAvatarTarget.StartGroup*:
    name:
      CSharp:
      - id: IVI.NewSFAvatarTarget.StartGroup*
        name: StartGroup
        nameWithType: NewSFAvatarTarget.StartGroup
        qualifiedName: IVI.NewSFAvatarTarget.StartGroup
      VB:
      - id: IVI.NewSFAvatarTarget.StartGroup*
        name: StartGroup
        nameWithType: NewSFAvatarTarget.StartGroup
        qualifiedName: IVI.NewSFAvatarTarget.StartGroup
    isDefinition: true
    commentId: Overload:IVI.NewSFAvatarTarget.StartGroup
  IVI.INavigable.StopGroup(IVI.GroupNavNode):
    name:
      CSharp:
      - id: IVI.INavigable.StopGroup(IVI.GroupNavNode)
        name: StopGroup
        nameWithType: INavigable.StopGroup
        qualifiedName: IVI.INavigable.StopGroup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.INavigable.StopGroup(IVI.GroupNavNode)
        name: StopGroup
        nameWithType: INavigable.StopGroup
        qualifiedName: IVI.INavigable.StopGroup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.INavigable
    commentId: M:IVI.INavigable.StopGroup(IVI.GroupNavNode)
  IVI.NewSFAvatarTarget.StopGroup*:
    name:
      CSharp:
      - id: IVI.NewSFAvatarTarget.StopGroup*
        name: StopGroup
        nameWithType: NewSFAvatarTarget.StopGroup
        qualifiedName: IVI.NewSFAvatarTarget.StopGroup
      VB:
      - id: IVI.NewSFAvatarTarget.StopGroup*
        name: StopGroup
        nameWithType: NewSFAvatarTarget.StopGroup
        qualifiedName: IVI.NewSFAvatarTarget.StopGroup
    isDefinition: true
    commentId: Overload:IVI.NewSFAvatarTarget.StopGroup
  IVI.NewSFAvatarTarget:
    name:
      CSharp:
      - id: IVI.NewSFAvatarTarget
        name: NewSFAvatarTarget
        nameWithType: NewSFAvatarTarget
        qualifiedName: IVI.NewSFAvatarTarget
      VB:
      - id: IVI.NewSFAvatarTarget
        name: NewSFAvatarTarget
        nameWithType: NewSFAvatarTarget
        qualifiedName: IVI.NewSFAvatarTarget
    isDefinition: true
    commentId: T:IVI.NewSFAvatarTarget
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{GameObject,IVI.SFAvatar}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.SFAvatar
        name: SFAvatar
        nameWithType: SFAvatar
        qualifiedName: IVI.SFAvatar
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.SFAvatar
        name: SFAvatar
        nameWithType: SFAvatar
        qualifiedName: IVI.SFAvatar
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{GameObject,IVI.SFAvatar}
  IVI.SFAvatar.StopAnimator*:
    name:
      CSharp:
      - id: IVI.SFAvatar.StopAnimator*
        name: StopAnimator
        nameWithType: SFAvatar.StopAnimator
        qualifiedName: IVI.SFAvatar.StopAnimator
      VB:
      - id: IVI.SFAvatar.StopAnimator*
        name: StopAnimator
        nameWithType: SFAvatar.StopAnimator
        qualifiedName: IVI.SFAvatar.StopAnimator
    isDefinition: true
    commentId: Overload:IVI.SFAvatar.StopAnimator
  Global.Vector3:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  IVI.SFAvatar.ComputePath*:
    name:
      CSharp:
      - id: IVI.SFAvatar.ComputePath*
        name: ComputePath
        nameWithType: SFAvatar.ComputePath
        qualifiedName: IVI.SFAvatar.ComputePath
      VB:
      - id: IVI.SFAvatar.ComputePath*
        name: ComputePath
        nameWithType: SFAvatar.ComputePath
        qualifiedName: IVI.SFAvatar.ComputePath
    isDefinition: true
    commentId: Overload:IVI.SFAvatar.ComputePath
  IVI.SFAvatar:
    name:
      CSharp:
      - id: IVI.SFAvatar
        name: SFAvatar
        nameWithType: SFAvatar
        qualifiedName: IVI.SFAvatar
      VB:
      - id: IVI.SFAvatar
        name: SFAvatar
        nameWithType: SFAvatar
        qualifiedName: IVI.SFAvatar
    isDefinition: true
    commentId: T:IVI.SFAvatar
  IVI.SFAvatarTarget.StartNavigation*:
    name:
      CSharp:
      - id: IVI.SFAvatarTarget.StartNavigation*
        name: StartNavigation
        nameWithType: SFAvatarTarget.StartNavigation
        qualifiedName: IVI.SFAvatarTarget.StartNavigation
      VB:
      - id: IVI.SFAvatarTarget.StartNavigation*
        name: StartNavigation
        nameWithType: SFAvatarTarget.StartNavigation
        qualifiedName: IVI.SFAvatarTarget.StartNavigation
    isDefinition: true
    commentId: Overload:IVI.SFAvatarTarget.StartNavigation
  IVI.SFAvatarTarget.StopNavigation*:
    name:
      CSharp:
      - id: IVI.SFAvatarTarget.StopNavigation*
        name: StopNavigation
        nameWithType: SFAvatarTarget.StopNavigation
        qualifiedName: IVI.SFAvatarTarget.StopNavigation
      VB:
      - id: IVI.SFAvatarTarget.StopNavigation*
        name: StopNavigation
        nameWithType: SFAvatarTarget.StopNavigation
        qualifiedName: IVI.SFAvatarTarget.StopNavigation
    isDefinition: true
    commentId: Overload:IVI.SFAvatarTarget.StopNavigation
  IVI.SFAvatarTarget.StartGroup*:
    name:
      CSharp:
      - id: IVI.SFAvatarTarget.StartGroup*
        name: StartGroup
        nameWithType: SFAvatarTarget.StartGroup
        qualifiedName: IVI.SFAvatarTarget.StartGroup
      VB:
      - id: IVI.SFAvatarTarget.StartGroup*
        name: StartGroup
        nameWithType: SFAvatarTarget.StartGroup
        qualifiedName: IVI.SFAvatarTarget.StartGroup
    isDefinition: true
    commentId: Overload:IVI.SFAvatarTarget.StartGroup
  IVI.SFAvatarTarget.StopGroup*:
    name:
      CSharp:
      - id: IVI.SFAvatarTarget.StopGroup*
        name: StopGroup
        nameWithType: SFAvatarTarget.StopGroup
        qualifiedName: IVI.SFAvatarTarget.StopGroup
      VB:
      - id: IVI.SFAvatarTarget.StopGroup*
        name: StopGroup
        nameWithType: SFAvatarTarget.StopGroup
        qualifiedName: IVI.SFAvatarTarget.StopGroup
    isDefinition: true
    commentId: Overload:IVI.SFAvatarTarget.StopGroup
  IVI.SFAvatarTarget:
    name:
      CSharp:
      - id: IVI.SFAvatarTarget
        name: SFAvatarTarget
        nameWithType: SFAvatarTarget
        qualifiedName: IVI.SFAvatarTarget
      VB:
      - id: IVI.SFAvatarTarget
        name: SFAvatarTarget
        nameWithType: SFAvatarTarget
        qualifiedName: IVI.SFAvatarTarget
    isDefinition: true
    commentId: T:IVI.SFAvatarTarget
  System.Collections.Generic.Dictionary{GameObject,IVI.NewSFAvatar}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.NewSFAvatar
        name: NewSFAvatar
        nameWithType: NewSFAvatar
        qualifiedName: IVI.NewSFAvatar
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.NewSFAvatar
        name: NewSFAvatar
        nameWithType: NewSFAvatar
        qualifiedName: IVI.NewSFAvatar
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{GameObject,IVI.NewSFAvatar}
  IVI.NewSFAvatar.StopAnimator*:
    name:
      CSharp:
      - id: IVI.NewSFAvatar.StopAnimator*
        name: StopAnimator
        nameWithType: NewSFAvatar.StopAnimator
        qualifiedName: IVI.NewSFAvatar.StopAnimator
      VB:
      - id: IVI.NewSFAvatar.StopAnimator*
        name: StopAnimator
        nameWithType: NewSFAvatar.StopAnimator
        qualifiedName: IVI.NewSFAvatar.StopAnimator
    isDefinition: true
    commentId: Overload:IVI.NewSFAvatar.StopAnimator
  IVI.NewSFAvatar.ComputePath*:
    name:
      CSharp:
      - id: IVI.NewSFAvatar.ComputePath*
        name: ComputePath
        nameWithType: NewSFAvatar.ComputePath
        qualifiedName: IVI.NewSFAvatar.ComputePath
      VB:
      - id: IVI.NewSFAvatar.ComputePath*
        name: ComputePath
        nameWithType: NewSFAvatar.ComputePath
        qualifiedName: IVI.NewSFAvatar.ComputePath
    isDefinition: true
    commentId: Overload:IVI.NewSFAvatar.ComputePath
  IVI.NewSFAvatar:
    name:
      CSharp:
      - id: IVI.NewSFAvatar
        name: NewSFAvatar
        nameWithType: NewSFAvatar
        qualifiedName: IVI.NewSFAvatar
      VB:
      - id: IVI.NewSFAvatar
        name: NewSFAvatar
        nameWithType: NewSFAvatar
        qualifiedName: IVI.NewSFAvatar
    isDefinition: true
    commentId: T:IVI.NewSFAvatar
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Global.MeshRenderer:
    name:
      CSharp:
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      VB:
      - id: Global.MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
    isDefinition: true
    commentId: '!:Global.MeshRenderer'
  IVI.NavNode.Start*:
    name:
      CSharp:
      - id: IVI.NavNode.Start*
        name: Start
        nameWithType: NavNode.Start
        qualifiedName: IVI.NavNode.Start
      VB:
      - id: IVI.NavNode.Start*
        name: Start
        nameWithType: NavNode.Start
        qualifiedName: IVI.NavNode.Start
    isDefinition: true
    commentId: Overload:IVI.NavNode.Start
  IVI.NavNode.Update*:
    name:
      CSharp:
      - id: IVI.NavNode.Update*
        name: Update
        nameWithType: NavNode.Update
        qualifiedName: IVI.NavNode.Update
      VB:
      - id: IVI.NavNode.Update*
        name: Update
        nameWithType: NavNode.Update
        qualifiedName: IVI.NavNode.Update
    isDefinition: true
    commentId: Overload:IVI.NavNode.Update
  IVI.NavNode.OnDestroy*:
    name:
      CSharp:
      - id: IVI.NavNode.OnDestroy*
        name: OnDestroy
        nameWithType: NavNode.OnDestroy
        qualifiedName: IVI.NavNode.OnDestroy
      VB:
      - id: IVI.NavNode.OnDestroy*
        name: OnDestroy
        nameWithType: NavNode.OnDestroy
        qualifiedName: IVI.NavNode.OnDestroy
    isDefinition: true
    commentId: Overload:IVI.NavNode.OnDestroy
  System.Collections.Generic.Dictionary{IVI.NavNode,IVI.NavEdge}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.NavEdge
        name: NavEdge
        nameWithType: NavEdge
        qualifiedName: IVI.NavEdge
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.NavEdge
        name: NavEdge
        nameWithType: NavEdge
        qualifiedName: IVI.NavEdge
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{IVI.NavNode,IVI.NavEdge}
  IVI.NavNode.GetNeighbors*:
    name:
      CSharp:
      - id: IVI.NavNode.GetNeighbors*
        name: GetNeighbors
        nameWithType: NavNode.GetNeighbors
        qualifiedName: IVI.NavNode.GetNeighbors
      VB:
      - id: IVI.NavNode.GetNeighbors*
        name: GetNeighbors
        nameWithType: NavNode.GetNeighbors
        qualifiedName: IVI.NavNode.GetNeighbors
    isDefinition: true
    commentId: Overload:IVI.NavNode.GetNeighbors
  IVI.NavNode:
    name:
      CSharp:
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      VB:
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
    isDefinition: true
    parent: IVI
    commentId: T:IVI.NavNode
  IVI.NavManager:
    name:
      CSharp:
      - id: IVI.NavManager
        name: NavManager
        nameWithType: NavManager
        qualifiedName: IVI.NavManager
      VB:
      - id: IVI.NavManager
        name: NavManager
        nameWithType: NavManager
        qualifiedName: IVI.NavManager
    isDefinition: true
    parent: IVI
    commentId: T:IVI.NavManager
  IVI.NavNode[]:
    name:
      CSharp:
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVI.GroupNavNode[]:
    name:
      CSharp:
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: IVI.GroupNavNode
        name: GroupNavNode
        nameWithType: GroupNavNode
        qualifiedName: IVI.GroupNavNode
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVI.NavEdge[]:
    name:
      CSharp:
      - id: IVI.NavEdge
        name: NavEdge
        nameWithType: NavEdge
        qualifiedName: IVI.NavEdge
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: IVI.NavEdge
        name: NavEdge
        nameWithType: NavEdge
        qualifiedName: IVI.NavEdge
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVI.INavigable[]:
    name:
      CSharp:
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Collections.Generic.Dictionary{IVI.NavNode,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{IVI.NavNode,System.Int32}
  System.Boolean[,]:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '[,]'
        nameWithType: '[,]'
        qualifiedName: '[,]'
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: (,)
        nameWithType: (,)
        qualifiedName: (,)
    isDefinition: false
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Int32[,]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[,]'
        nameWithType: '[,]'
        qualifiedName: '[,]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: (,)
        nameWithType: (,)
        qualifiedName: (,)
    isDefinition: false
  System.Collections.Generic.Dictionary{IVI.INavigable,IVI.NavNode}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVI.NavNode
        name: NavNode
        nameWithType: NavNode
        qualifiedName: IVI.NavNode
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{IVI.INavigable,IVI.NavNode}
  IVI.NavManager.CreateNode*:
    name:
      CSharp:
      - id: IVI.NavManager.CreateNode*
        name: CreateNode
        nameWithType: NavManager.CreateNode
        qualifiedName: IVI.NavManager.CreateNode
      VB:
      - id: IVI.NavManager.CreateNode*
        name: CreateNode
        nameWithType: NavManager.CreateNode
        qualifiedName: IVI.NavManager.CreateNode
    isDefinition: true
    commentId: Overload:IVI.NavManager.CreateNode
  IVI.NavManager.CreateGroupNode*:
    name:
      CSharp:
      - id: IVI.NavManager.CreateGroupNode*
        name: CreateGroupNode
        nameWithType: NavManager.CreateGroupNode
        qualifiedName: IVI.NavManager.CreateGroupNode
      VB:
      - id: IVI.NavManager.CreateGroupNode*
        name: CreateGroupNode
        nameWithType: NavManager.CreateGroupNode
        qualifiedName: IVI.NavManager.CreateGroupNode
    isDefinition: true
    commentId: Overload:IVI.NavManager.CreateGroupNode
  IVI.NavEdge:
    name:
      CSharp:
      - id: IVI.NavEdge
        name: NavEdge
        nameWithType: NavEdge
        qualifiedName: IVI.NavEdge
      VB:
      - id: IVI.NavEdge
        name: NavEdge
        nameWithType: NavEdge
        qualifiedName: IVI.NavEdge
    isDefinition: true
    parent: IVI
    commentId: T:IVI.NavEdge
  IVI.NavManager.CreateEdge*:
    name:
      CSharp:
      - id: IVI.NavManager.CreateEdge*
        name: CreateEdge
        nameWithType: NavManager.CreateEdge
        qualifiedName: IVI.NavManager.CreateEdge
      VB:
      - id: IVI.NavManager.CreateEdge*
        name: CreateEdge
        nameWithType: NavManager.CreateEdge
        qualifiedName: IVI.NavManager.CreateEdge
    isDefinition: true
    commentId: Overload:IVI.NavManager.CreateEdge
  IVI.NavManager.UpdateDesiredOccupancy*:
    name:
      CSharp:
      - id: IVI.NavManager.UpdateDesiredOccupancy*
        name: UpdateDesiredOccupancy
        nameWithType: NavManager.UpdateDesiredOccupancy
        qualifiedName: IVI.NavManager.UpdateDesiredOccupancy
      VB:
      - id: IVI.NavManager.UpdateDesiredOccupancy*
        name: UpdateDesiredOccupancy
        nameWithType: NavManager.UpdateDesiredOccupancy
        qualifiedName: IVI.NavManager.UpdateDesiredOccupancy
    isDefinition: true
    commentId: Overload:IVI.NavManager.UpdateDesiredOccupancy
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  IVI.NavManager.UpdateAgentGoal*:
    name:
      CSharp:
      - id: IVI.NavManager.UpdateAgentGoal*
        name: UpdateAgentGoal
        nameWithType: NavManager.UpdateAgentGoal
        qualifiedName: IVI.NavManager.UpdateAgentGoal
      VB:
      - id: IVI.NavManager.UpdateAgentGoal*
        name: UpdateAgentGoal
        nameWithType: NavManager.UpdateAgentGoal
        qualifiedName: IVI.NavManager.UpdateAgentGoal
    isDefinition: true
    commentId: Overload:IVI.NavManager.UpdateAgentGoal
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  TSource:
    name:
      CSharp:
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
      VB:
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
    isDefinition: true
  '{TSource}':
    name:
      CSharp:
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
      VB:
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
    isDefinition: false
    definition: TSource
    commentId: '!:TSource'
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{{TSource}}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{``0}
  System.Func`2:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Func`2
  System.Func{{TSource},{TProperty}}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TProperty
        nameWithType: TProperty
        qualifiedName: TProperty
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TSource
        nameWithType: TSource
        qualifiedName: TSource
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TProperty
        nameWithType: TProperty
        qualifiedName: TProperty
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{``0,``1}
  IVI.Extension.MaxBy*:
    name:
      CSharp:
      - id: IVI.Extension.MaxBy*
        name: MaxBy
        nameWithType: Extension.MaxBy
        qualifiedName: IVI.Extension.MaxBy
      VB:
      - id: IVI.Extension.MaxBy*
        name: MaxBy
        nameWithType: Extension.MaxBy
        qualifiedName: IVI.Extension.MaxBy
    isDefinition: true
    commentId: Overload:IVI.Extension.MaxBy
  IVI.Extension.MinBy*:
    name:
      CSharp:
      - id: IVI.Extension.MinBy*
        name: MinBy
        nameWithType: Extension.MinBy
        qualifiedName: IVI.Extension.MinBy
      VB:
      - id: IVI.Extension.MinBy*
        name: MinBy
        nameWithType: Extension.MinBy
        qualifiedName: IVI.Extension.MinBy
    isDefinition: true
    commentId: Overload:IVI.Extension.MinBy
  IVI.Extension:
    name:
      CSharp:
      - id: IVI.Extension
        name: Extension
        nameWithType: Extension
        qualifiedName: IVI.Extension
      VB:
      - id: IVI.Extension
        name: Extension
        nameWithType: Extension
        qualifiedName: IVI.Extension
    isDefinition: true
    commentId: T:IVI.Extension
  IVI.NavEdge.Constraint:
    name:
      CSharp:
      - id: IVI.NavEdge.Constraint
        name: NavEdge.Constraint
        nameWithType: NavEdge.Constraint
        qualifiedName: IVI.NavEdge.Constraint
      VB:
      - id: IVI.NavEdge.Constraint
        name: NavEdge.Constraint
        nameWithType: NavEdge.Constraint
        qualifiedName: IVI.NavEdge.Constraint
    isDefinition: true
    parent: IVI
    commentId: T:IVI.NavEdge.Constraint
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  SEAN.Situations.Trajectory.TrackedAgent.Start:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedAgent.Start
        name: Start
        nameWithType: TrackedAgent.Start
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Situations.Trajectory.TrackedAgent.Start
        name: Start
        nameWithType: TrackedAgent.Start
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Situations.Trajectory.TrackedAgent
    commentId: M:SEAN.Situations.Trajectory.TrackedAgent.Start
  IVI.INavigable.Start*:
    name:
      CSharp:
      - id: IVI.INavigable.Start*
        name: Start
        nameWithType: INavigable.Start
        qualifiedName: IVI.INavigable.Start
      VB:
      - id: IVI.INavigable.Start*
        name: Start
        nameWithType: INavigable.Start
        qualifiedName: IVI.INavigable.Start
    isDefinition: true
    commentId: Overload:IVI.INavigable.Start
  IVI.INavigable.StartNavigation*:
    name:
      CSharp:
      - id: IVI.INavigable.StartNavigation*
        name: StartNavigation
        nameWithType: INavigable.StartNavigation
        qualifiedName: IVI.INavigable.StartNavigation
      VB:
      - id: IVI.INavigable.StartNavigation*
        name: StartNavigation
        nameWithType: INavigable.StartNavigation
        qualifiedName: IVI.INavigable.StartNavigation
    isDefinition: true
    commentId: Overload:IVI.INavigable.StartNavigation
  IVI.INavigable.StopNavigation*:
    name:
      CSharp:
      - id: IVI.INavigable.StopNavigation*
        name: StopNavigation
        nameWithType: INavigable.StopNavigation
        qualifiedName: IVI.INavigable.StopNavigation
      VB:
      - id: IVI.INavigable.StopNavigation*
        name: StopNavigation
        nameWithType: INavigable.StopNavigation
        qualifiedName: IVI.INavigable.StopNavigation
    isDefinition: true
    commentId: Overload:IVI.INavigable.StopNavigation
  IVI.INavigable.StartGroup*:
    name:
      CSharp:
      - id: IVI.INavigable.StartGroup*
        name: StartGroup
        nameWithType: INavigable.StartGroup
        qualifiedName: IVI.INavigable.StartGroup
      VB:
      - id: IVI.INavigable.StartGroup*
        name: StartGroup
        nameWithType: INavigable.StartGroup
        qualifiedName: IVI.INavigable.StartGroup
    isDefinition: true
    commentId: Overload:IVI.INavigable.StartGroup
  IVI.INavigable.StopGroup*:
    name:
      CSharp:
      - id: IVI.INavigable.StopGroup*
        name: StopGroup
        nameWithType: INavigable.StopGroup
        qualifiedName: IVI.INavigable.StopGroup
      VB:
      - id: IVI.INavigable.StopGroup*
        name: StopGroup
        nameWithType: INavigable.StopGroup
        qualifiedName: IVI.INavigable.StopGroup
    isDefinition: true
    commentId: Overload:IVI.INavigable.StopGroup
  IVI.INavigable.SetSampledPosition*:
    name:
      CSharp:
      - id: IVI.INavigable.SetSampledPosition*
        name: SetSampledPosition
        nameWithType: INavigable.SetSampledPosition
        qualifiedName: IVI.INavigable.SetSampledPosition
      VB:
      - id: IVI.INavigable.SetSampledPosition*
        name: SetSampledPosition
        nameWithType: INavigable.SetSampledPosition
        qualifiedName: IVI.INavigable.SetSampledPosition
    isDefinition: true
    commentId: Overload:IVI.INavigable.SetSampledPosition
  System.ValueTuple`2:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.ValueTuple`2
  System.ValueTuple{System.Single,Vector3}:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.Single,Vector3}
  IVI.INavigable.InitDest*:
    name:
      CSharp:
      - id: IVI.INavigable.InitDest*
        name: InitDest
        nameWithType: INavigable.InitDest
        qualifiedName: IVI.INavigable.InitDest
      VB:
      - id: IVI.INavigable.InitDest*
        name: InitDest
        nameWithType: INavigable.InitDest
        qualifiedName: IVI.INavigable.InitDest
    isDefinition: true
    commentId: Overload:IVI.INavigable.InitDest
  IVI.NavNode.createNode:
    name:
      CSharp:
      - id: IVI.NavNode.createNode
        name: createNode
        nameWithType: NavNode.createNode
        qualifiedName: IVI.NavNode.createNode
      VB:
      - id: IVI.NavNode.createNode
        name: createNode
        nameWithType: NavNode.createNode
        qualifiedName: IVI.NavNode.createNode
    isDefinition: true
    parent: IVI.NavNode
    commentId: F:IVI.NavNode.createNode
  IVI.NavNode.createGroupNode:
    name:
      CSharp:
      - id: IVI.NavNode.createGroupNode
        name: createGroupNode
        nameWithType: NavNode.createGroupNode
        qualifiedName: IVI.NavNode.createGroupNode
      VB:
      - id: IVI.NavNode.createGroupNode
        name: createGroupNode
        nameWithType: NavNode.createGroupNode
        qualifiedName: IVI.NavNode.createGroupNode
    isDefinition: true
    parent: IVI.NavNode
    commentId: F:IVI.NavNode.createGroupNode
  IVI.NavNode.createConnection:
    name:
      CSharp:
      - id: IVI.NavNode.createConnection
        name: createConnection
        nameWithType: NavNode.createConnection
        qualifiedName: IVI.NavNode.createConnection
      VB:
      - id: IVI.NavNode.createConnection
        name: createConnection
        nameWithType: NavNode.createConnection
        qualifiedName: IVI.NavNode.createConnection
    isDefinition: true
    parent: IVI.NavNode
    commentId: F:IVI.NavNode.createConnection
  IVI.NavNode.radius:
    name:
      CSharp:
      - id: IVI.NavNode.radius
        name: radius
        nameWithType: NavNode.radius
        qualifiedName: IVI.NavNode.radius
      VB:
      - id: IVI.NavNode.radius
        name: radius
        nameWithType: NavNode.radius
        qualifiedName: IVI.NavNode.radius
    isDefinition: true
    parent: IVI.NavNode
    commentId: F:IVI.NavNode.radius
  IVI.NavNode.spawnCount:
    name:
      CSharp:
      - id: IVI.NavNode.spawnCount
        name: spawnCount
        nameWithType: NavNode.spawnCount
        qualifiedName: IVI.NavNode.spawnCount
      VB:
      - id: IVI.NavNode.spawnCount
        name: spawnCount
        nameWithType: NavNode.spawnCount
        qualifiedName: IVI.NavNode.spawnCount
    isDefinition: true
    parent: IVI.NavNode
    commentId: F:IVI.NavNode.spawnCount
  IVI.NavNode.render:
    name:
      CSharp:
      - id: IVI.NavNode.render
        name: render
        nameWithType: NavNode.render
        qualifiedName: IVI.NavNode.render
      VB:
      - id: IVI.NavNode.render
        name: render
        nameWithType: NavNode.render
        qualifiedName: IVI.NavNode.render
    isDefinition: true
    parent: IVI.NavNode
    commentId: F:IVI.NavNode.render
  IVI.NavNode.Start:
    name:
      CSharp:
      - id: IVI.NavNode.Start
        name: Start
        nameWithType: NavNode.Start
        qualifiedName: IVI.NavNode.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.NavNode.Start
        name: Start
        nameWithType: NavNode.Start
        qualifiedName: IVI.NavNode.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.NavNode
    commentId: M:IVI.NavNode.Start
  IVI.NavNode.Update:
    name:
      CSharp:
      - id: IVI.NavNode.Update
        name: Update
        nameWithType: NavNode.Update
        qualifiedName: IVI.NavNode.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.NavNode.Update
        name: Update
        nameWithType: NavNode.Update
        qualifiedName: IVI.NavNode.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.NavNode
    commentId: M:IVI.NavNode.Update
  IVI.NavNode.OnDestroy:
    name:
      CSharp:
      - id: IVI.NavNode.OnDestroy
        name: OnDestroy
        nameWithType: NavNode.OnDestroy
        qualifiedName: IVI.NavNode.OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.NavNode.OnDestroy
        name: OnDestroy
        nameWithType: NavNode.OnDestroy
        qualifiedName: IVI.NavNode.OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.NavNode
    commentId: M:IVI.NavNode.OnDestroy
  IVI.NavNode.GetNeighbors:
    name:
      CSharp:
      - id: IVI.NavNode.GetNeighbors
        name: GetNeighbors
        nameWithType: NavNode.GetNeighbors
        qualifiedName: IVI.NavNode.GetNeighbors
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVI.NavNode.GetNeighbors
        name: GetNeighbors
        nameWithType: NavNode.GetNeighbors
        qualifiedName: IVI.NavNode.GetNeighbors
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVI.NavNode
    commentId: M:IVI.NavNode.GetNeighbors
  SEAN.Situations.Trajectory.ITrackedGroup:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.ITrackedGroup
        name: ITrackedGroup
        nameWithType: ITrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.ITrackedGroup
      VB:
      - id: SEAN.Situations.Trajectory.ITrackedGroup
        name: ITrackedGroup
        nameWithType: ITrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.ITrackedGroup
    isDefinition: true
    parent: SEAN.Situations.Trajectory
    commentId: T:SEAN.Situations.Trajectory.ITrackedGroup
  System.Collections.Generic.Dictionary{IVI.INavigable,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{IVI.INavigable,System.Int32}
  SEAN.Situations.Trajectory.TrackedGroup:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup
        name: TrackedGroup
        nameWithType: TrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup
        name: TrackedGroup
        nameWithType: TrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup
    isDefinition: true
    parent: SEAN.Situations.Trajectory
    commentId: T:SEAN.Situations.Trajectory.TrackedGroup
  IVI.GroupNavNode.group*:
    name:
      CSharp:
      - id: IVI.GroupNavNode.group*
        name: group
        nameWithType: GroupNavNode.group
        qualifiedName: IVI.GroupNavNode.group
      VB:
      - id: IVI.GroupNavNode.group*
        name: group
        nameWithType: GroupNavNode.group
        qualifiedName: IVI.GroupNavNode.group
    isDefinition: true
    commentId: Overload:IVI.GroupNavNode.group
  SEAN.Situations.Trajectory.ITrackedGroup.group:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.ITrackedGroup.group
        name: group
        nameWithType: ITrackedGroup.group
        qualifiedName: SEAN.Situations.Trajectory.ITrackedGroup.group
      VB:
      - id: SEAN.Situations.Trajectory.ITrackedGroup.group
        name: group
        nameWithType: ITrackedGroup.group
        qualifiedName: SEAN.Situations.Trajectory.ITrackedGroup.group
    isDefinition: true
    parent: SEAN.Situations.Trajectory.ITrackedGroup
    commentId: P:SEAN.Situations.Trajectory.ITrackedGroup.group
  IVI.GroupNavNode.GetTime*:
    name:
      CSharp:
      - id: IVI.GroupNavNode.GetTime*
        name: GetTime
        nameWithType: GroupNavNode.GetTime
        qualifiedName: IVI.GroupNavNode.GetTime
      VB:
      - id: IVI.GroupNavNode.GetTime*
        name: GetTime
        nameWithType: GroupNavNode.GetTime
        qualifiedName: IVI.GroupNavNode.GetTime
    isDefinition: true
    commentId: Overload:IVI.GroupNavNode.GetTime
  IVI.GroupNavNode.CanAddMember*:
    name:
      CSharp:
      - id: IVI.GroupNavNode.CanAddMember*
        name: CanAddMember
        nameWithType: GroupNavNode.CanAddMember
        qualifiedName: IVI.GroupNavNode.CanAddMember
      VB:
      - id: IVI.GroupNavNode.CanAddMember*
        name: CanAddMember
        nameWithType: GroupNavNode.CanAddMember
        qualifiedName: IVI.GroupNavNode.CanAddMember
    isDefinition: true
    commentId: Overload:IVI.GroupNavNode.CanAddMember
  IVI.GroupNavNode.AddMember*:
    name:
      CSharp:
      - id: IVI.GroupNavNode.AddMember*
        name: AddMember
        nameWithType: GroupNavNode.AddMember
        qualifiedName: IVI.GroupNavNode.AddMember
      VB:
      - id: IVI.GroupNavNode.AddMember*
        name: AddMember
        nameWithType: GroupNavNode.AddMember
        qualifiedName: IVI.GroupNavNode.AddMember
    isDefinition: true
    commentId: Overload:IVI.GroupNavNode.AddMember
  IVI.GroupNavNode.RemoveMember*:
    name:
      CSharp:
      - id: IVI.GroupNavNode.RemoveMember*
        name: RemoveMember
        nameWithType: GroupNavNode.RemoveMember
        qualifiedName: IVI.GroupNavNode.RemoveMember
      VB:
      - id: IVI.GroupNavNode.RemoveMember*
        name: RemoveMember
        nameWithType: GroupNavNode.RemoveMember
        qualifiedName: IVI.GroupNavNode.RemoveMember
    isDefinition: true
    commentId: Overload:IVI.GroupNavNode.RemoveMember
  IVI.DummyAgent.StartNavigation*:
    name:
      CSharp:
      - id: IVI.DummyAgent.StartNavigation*
        name: StartNavigation
        nameWithType: DummyAgent.StartNavigation
        qualifiedName: IVI.DummyAgent.StartNavigation
      VB:
      - id: IVI.DummyAgent.StartNavigation*
        name: StartNavigation
        nameWithType: DummyAgent.StartNavigation
        qualifiedName: IVI.DummyAgent.StartNavigation
    isDefinition: true
    commentId: Overload:IVI.DummyAgent.StartNavigation
  IVI.DummyAgent.StopNavigation*:
    name:
      CSharp:
      - id: IVI.DummyAgent.StopNavigation*
        name: StopNavigation
        nameWithType: DummyAgent.StopNavigation
        qualifiedName: IVI.DummyAgent.StopNavigation
      VB:
      - id: IVI.DummyAgent.StopNavigation*
        name: StopNavigation
        nameWithType: DummyAgent.StopNavigation
        qualifiedName: IVI.DummyAgent.StopNavigation
    isDefinition: true
    commentId: Overload:IVI.DummyAgent.StopNavigation
  IVI.DummyAgent.StartGroup*:
    name:
      CSharp:
      - id: IVI.DummyAgent.StartGroup*
        name: StartGroup
        nameWithType: DummyAgent.StartGroup
        qualifiedName: IVI.DummyAgent.StartGroup
      VB:
      - id: IVI.DummyAgent.StartGroup*
        name: StartGroup
        nameWithType: DummyAgent.StartGroup
        qualifiedName: IVI.DummyAgent.StartGroup
    isDefinition: true
    commentId: Overload:IVI.DummyAgent.StartGroup
  IVI.DummyAgent.StopGroup*:
    name:
      CSharp:
      - id: IVI.DummyAgent.StopGroup*
        name: StopGroup
        nameWithType: DummyAgent.StopGroup
        qualifiedName: IVI.DummyAgent.StopGroup
      VB:
      - id: IVI.DummyAgent.StopGroup*
        name: StopGroup
        nameWithType: DummyAgent.StopGroup
        qualifiedName: IVI.DummyAgent.StopGroup
    isDefinition: true
    commentId: Overload:IVI.DummyAgent.StopGroup
  IVI.DummyAgent:
    name:
      CSharp:
      - id: IVI.DummyAgent
        name: DummyAgent
        nameWithType: DummyAgent
        qualifiedName: IVI.DummyAgent
      VB:
      - id: IVI.DummyAgent
        name: DummyAgent
        nameWithType: DummyAgent
        qualifiedName: IVI.DummyAgent
    isDefinition: true
    commentId: T:IVI.DummyAgent
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{IVI.GroupDataLoader.GroupData}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IVI.GroupDataLoader.GroupData
        name: GroupDataLoader.GroupData
        nameWithType: GroupDataLoader.GroupData
        qualifiedName: IVI.GroupDataLoader.GroupData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IVI.GroupDataLoader.GroupData
        name: GroupDataLoader.GroupData
        nameWithType: GroupDataLoader.GroupData
        qualifiedName: IVI.GroupDataLoader.GroupData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IVI.GroupDataLoader.GroupData}
  IVI.GroupDataLoader:
    name:
      CSharp:
      - id: IVI.GroupDataLoader
        name: GroupDataLoader
        nameWithType: GroupDataLoader
        qualifiedName: IVI.GroupDataLoader
      VB:
      - id: IVI.GroupDataLoader
        name: GroupDataLoader
        nameWithType: GroupDataLoader
        qualifiedName: IVI.GroupDataLoader
    isDefinition: true
    commentId: T:IVI.GroupDataLoader
  System.Collections.Generic.List{Vector3}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Vector3}
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  IVI.GroupDataLoader.GroupData.#ctor*:
    name:
      CSharp:
      - id: IVI.GroupDataLoader.GroupData.#ctor*
        name: GroupData
        nameWithType: GroupDataLoader.GroupData.GroupData
        qualifiedName: IVI.GroupDataLoader.GroupData.GroupData
      VB:
      - id: IVI.GroupDataLoader.GroupData.#ctor*
        name: GroupData
        nameWithType: GroupDataLoader.GroupData.GroupData
        qualifiedName: IVI.GroupDataLoader.GroupData.GroupData
    isDefinition: true
    commentId: Overload:IVI.GroupDataLoader.GroupData.#ctor
  IVI.GroupDataLoader.GroupData.Standardize*:
    name:
      CSharp:
      - id: IVI.GroupDataLoader.GroupData.Standardize*
        name: Standardize
        nameWithType: GroupDataLoader.GroupData.Standardize
        qualifiedName: IVI.GroupDataLoader.GroupData.Standardize
      VB:
      - id: IVI.GroupDataLoader.GroupData.Standardize*
        name: Standardize
        nameWithType: GroupDataLoader.GroupData.Standardize
        qualifiedName: IVI.GroupDataLoader.GroupData.Standardize
    isDefinition: true
    commentId: Overload:IVI.GroupDataLoader.GroupData.Standardize
  IVI.GroupDataLoader.GroupData:
    name:
      CSharp:
      - id: IVI.GroupDataLoader.GroupData
        name: GroupDataLoader.GroupData
        nameWithType: GroupDataLoader.GroupData
        qualifiedName: IVI.GroupDataLoader.GroupData
      VB:
      - id: IVI.GroupDataLoader.GroupData
        name: GroupDataLoader.GroupData
        nameWithType: GroupDataLoader.GroupData
        qualifiedName: IVI.GroupDataLoader.GroupData
    isDefinition: true
    commentId: T:IVI.GroupDataLoader.GroupData
  IVI.CameraScript.StartLooking*:
    name:
      CSharp:
      - id: IVI.CameraScript.StartLooking*
        name: StartLooking
        nameWithType: CameraScript.StartLooking
        qualifiedName: IVI.CameraScript.StartLooking
      VB:
      - id: IVI.CameraScript.StartLooking*
        name: StartLooking
        nameWithType: CameraScript.StartLooking
        qualifiedName: IVI.CameraScript.StartLooking
    isDefinition: true
    commentId: Overload:IVI.CameraScript.StartLooking
  IVI.CameraScript.StopLooking*:
    name:
      CSharp:
      - id: IVI.CameraScript.StopLooking*
        name: StopLooking
        nameWithType: CameraScript.StopLooking
        qualifiedName: IVI.CameraScript.StopLooking
      VB:
      - id: IVI.CameraScript.StopLooking*
        name: StopLooking
        nameWithType: CameraScript.StopLooking
        qualifiedName: IVI.CameraScript.StopLooking
    isDefinition: true
    commentId: Overload:IVI.CameraScript.StopLooking
  IVI.CameraScript:
    name:
      CSharp:
      - id: IVI.CameraScript
        name: CameraScript
        nameWithType: CameraScript
        qualifiedName: IVI.CameraScript
      VB:
      - id: IVI.CameraScript
        name: CameraScript
        nameWithType: CameraScript
        qualifiedName: IVI.CameraScript
    isDefinition: true
    commentId: T:IVI.CameraScript
  IVI.LabelSituation.RobotMovement:
    name:
      CSharp:
      - id: IVI.LabelSituation.RobotMovement
        name: LabelSituation.RobotMovement
        nameWithType: LabelSituation.RobotMovement
        qualifiedName: IVI.LabelSituation.RobotMovement
      VB:
      - id: IVI.LabelSituation.RobotMovement
        name: LabelSituation.RobotMovement
        nameWithType: LabelSituation.RobotMovement
        qualifiedName: IVI.LabelSituation.RobotMovement
    isDefinition: true
    parent: IVI
    commentId: T:IVI.LabelSituation.RobotMovement
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  IVI.LabelSituation.SituationChoice:
    name:
      CSharp:
      - id: IVI.LabelSituation.SituationChoice
        name: LabelSituation.SituationChoice
        nameWithType: LabelSituation.SituationChoice
        qualifiedName: IVI.LabelSituation.SituationChoice
      VB:
      - id: IVI.LabelSituation.SituationChoice
        name: LabelSituation.SituationChoice
        nameWithType: LabelSituation.SituationChoice
        qualifiedName: IVI.LabelSituation.SituationChoice
    isDefinition: true
    parent: IVI
    commentId: T:IVI.LabelSituation.SituationChoice
  IVI.LabelSituation.Situation:
    name:
      CSharp:
      - id: IVI.LabelSituation.Situation
        name: LabelSituation.Situation
        nameWithType: LabelSituation.Situation
        qualifiedName: IVI.LabelSituation.Situation
      VB:
      - id: IVI.LabelSituation.Situation
        name: LabelSituation.Situation
        nameWithType: LabelSituation.Situation
        qualifiedName: IVI.LabelSituation.Situation
    isDefinition: true
    parent: IVI
    commentId: T:IVI.LabelSituation.Situation
  IVI.LabelSituation.PollSituation*:
    name:
      CSharp:
      - id: IVI.LabelSituation.PollSituation*
        name: PollSituation
        nameWithType: LabelSituation.PollSituation
        qualifiedName: IVI.LabelSituation.PollSituation
      VB:
      - id: IVI.LabelSituation.PollSituation*
        name: PollSituation
        nameWithType: LabelSituation.PollSituation
        qualifiedName: IVI.LabelSituation.PollSituation
    isDefinition: true
    commentId: Overload:IVI.LabelSituation.PollSituation
  IVI.LabelSituation:
    name:
      CSharp:
      - id: IVI.LabelSituation
        name: LabelSituation
        nameWithType: LabelSituation
        qualifiedName: IVI.LabelSituation
      VB:
      - id: IVI.LabelSituation
        name: LabelSituation
        nameWithType: LabelSituation
        qualifiedName: IVI.LabelSituation
    isDefinition: true
    commentId: T:IVI.LabelSituation
  IVI.LabelSituation.SituationType:
    name:
      CSharp:
      - id: IVI.LabelSituation.SituationType
        name: LabelSituation.SituationType
        nameWithType: LabelSituation.SituationType
        qualifiedName: IVI.LabelSituation.SituationType
      VB:
      - id: IVI.LabelSituation.SituationType
        name: LabelSituation.SituationType
        nameWithType: LabelSituation.SituationType
        qualifiedName: IVI.LabelSituation.SituationType
    isDefinition: true
    parent: IVI
    commentId: T:IVI.LabelSituation.SituationType
  SEAN:
    name:
      CSharp:
      - name: SEAN
        nameWithType: SEAN
        qualifiedName: SEAN
      VB:
      - name: SEAN
        nameWithType: SEAN
        qualifiedName: SEAN
    isDefinition: true
    commentId: N:SEAN
  SEAN.SEAN:
    name:
      CSharp:
      - id: SEAN.SEAN
        name: SEAN
        nameWithType: SEAN
        qualifiedName: SEAN.SEAN
      VB:
      - id: SEAN.SEAN
        name: SEAN
        nameWithType: SEAN
        qualifiedName: SEAN.SEAN
    isDefinition: true
    parent: SEAN
    commentId: T:SEAN.SEAN
  SEAN.SEAN.instance*:
    name:
      CSharp:
      - id: SEAN.SEAN.instance*
        name: instance
        nameWithType: SEAN.instance
        qualifiedName: SEAN.SEAN.instance
      VB:
      - id: SEAN.SEAN.instance*
        name: instance
        nameWithType: SEAN.instance
        qualifiedName: SEAN.SEAN.instance
    isDefinition: true
    commentId: Overload:SEAN.SEAN.instance
  SEAN.Environment:
    name:
      CSharp:
      - name: SEAN.Environment
        nameWithType: SEAN.Environment
        qualifiedName: SEAN.Environment
      VB:
      - name: SEAN.Environment
        nameWithType: SEAN.Environment
        qualifiedName: SEAN.Environment
    isDefinition: true
    commentId: N:SEAN.Environment
  SEAN.Environment.Environment:
    name:
      CSharp:
      - id: SEAN.Environment.Environment
        name: Environment
        nameWithType: Environment
        qualifiedName: SEAN.Environment.Environment
      VB:
      - id: SEAN.Environment.Environment
        name: Environment
        nameWithType: Environment
        qualifiedName: SEAN.Environment.Environment
    isDefinition: true
    parent: SEAN.Environment
    commentId: T:SEAN.Environment.Environment
  SEAN.SEAN.environment*:
    name:
      CSharp:
      - id: SEAN.SEAN.environment*
        name: environment
        nameWithType: SEAN.environment
        qualifiedName: SEAN.SEAN.environment
      VB:
      - id: SEAN.SEAN.environment*
        name: environment
        nameWithType: SEAN.environment
        qualifiedName: SEAN.SEAN.environment
    isDefinition: true
    commentId: Overload:SEAN.SEAN.environment
  SEAN.Input:
    name:
      CSharp:
      - name: SEAN.Input
        nameWithType: SEAN.Input
        qualifiedName: SEAN.Input
      VB:
      - name: SEAN.Input
        nameWithType: SEAN.Input
        qualifiedName: SEAN.Input
    isDefinition: true
    commentId: N:SEAN.Input
  SEAN.Input.InputPublisher:
    name:
      CSharp:
      - id: SEAN.Input.InputPublisher
        name: InputPublisher
        nameWithType: InputPublisher
        qualifiedName: SEAN.Input.InputPublisher
      VB:
      - id: SEAN.Input.InputPublisher
        name: InputPublisher
        nameWithType: InputPublisher
        qualifiedName: SEAN.Input.InputPublisher
    isDefinition: true
    parent: SEAN.Input
    commentId: T:SEAN.Input.InputPublisher
  SEAN.SEAN.input*:
    name:
      CSharp:
      - id: SEAN.SEAN.input*
        name: input
        nameWithType: SEAN.input
        qualifiedName: SEAN.SEAN.input
      VB:
      - id: SEAN.SEAN.input*
        name: input
        nameWithType: SEAN.input
        qualifiedName: SEAN.SEAN.input
    isDefinition: true
    commentId: Overload:SEAN.SEAN.input
  SEAN.Metrics:
    name:
      CSharp:
      - name: SEAN.Metrics
        nameWithType: SEAN.Metrics
        qualifiedName: SEAN.Metrics
      VB:
      - name: SEAN.Metrics
        nameWithType: SEAN.Metrics
        qualifiedName: SEAN.Metrics
    isDefinition: true
    commentId: N:SEAN.Metrics
  SEAN.Metrics.Metrics:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics
        name: Metrics
        nameWithType: Metrics
        qualifiedName: SEAN.Metrics.Metrics
      VB:
      - id: SEAN.Metrics.Metrics
        name: Metrics
        nameWithType: Metrics
        qualifiedName: SEAN.Metrics.Metrics
    isDefinition: true
    parent: SEAN.Metrics
    commentId: T:SEAN.Metrics.Metrics
  SEAN.SEAN.metrics*:
    name:
      CSharp:
      - id: SEAN.SEAN.metrics*
        name: metrics
        nameWithType: SEAN.metrics
        qualifiedName: SEAN.SEAN.metrics
      VB:
      - id: SEAN.SEAN.metrics*
        name: metrics
        nameWithType: SEAN.metrics
        qualifiedName: SEAN.SEAN.metrics
    isDefinition: true
    commentId: Overload:SEAN.SEAN.metrics
  SEAN.Situations.Scenario:
    name:
      CSharp:
      - name: SEAN.Situations.Scenario
        nameWithType: SEAN.Situations.Scenario
        qualifiedName: SEAN.Situations.Scenario
      VB:
      - name: SEAN.Situations.Scenario
        nameWithType: SEAN.Situations.Scenario
        qualifiedName: SEAN.Situations.Scenario
    isDefinition: true
    commentId: N:SEAN.Situations.Scenario
  SEAN.Situations.Scenario.BaseScenario:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario
        name: BaseScenario
        nameWithType: BaseScenario
        qualifiedName: SEAN.Situations.Scenario.BaseScenario
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario
        name: BaseScenario
        nameWithType: BaseScenario
        qualifiedName: SEAN.Situations.Scenario.BaseScenario
    isDefinition: true
    parent: SEAN.Situations.Scenario
    commentId: T:SEAN.Situations.Scenario.BaseScenario
  SEAN.SEAN.scenario*:
    name:
      CSharp:
      - id: SEAN.SEAN.scenario*
        name: scenario
        nameWithType: SEAN.scenario
        qualifiedName: SEAN.SEAN.scenario
      VB:
      - id: SEAN.SEAN.scenario*
        name: scenario
        nameWithType: SEAN.scenario
        qualifiedName: SEAN.SEAN.scenario
    isDefinition: true
    commentId: Overload:SEAN.SEAN.scenario
  SEAN.Tasks:
    name:
      CSharp:
      - name: SEAN.Tasks
        nameWithType: SEAN.Tasks
        qualifiedName: SEAN.Tasks
      VB:
      - name: SEAN.Tasks
        nameWithType: SEAN.Tasks
        qualifiedName: SEAN.Tasks
    isDefinition: true
    commentId: N:SEAN.Tasks
  SEAN.Tasks.BaseTask:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask
        name: BaseTask
        nameWithType: BaseTask
        qualifiedName: SEAN.Tasks.BaseTask
      VB:
      - id: SEAN.Tasks.BaseTask
        name: BaseTask
        nameWithType: BaseTask
        qualifiedName: SEAN.Tasks.BaseTask
    isDefinition: true
    parent: SEAN.Tasks
    commentId: T:SEAN.Tasks.BaseTask
  SEAN.SEAN.task*:
    name:
      CSharp:
      - id: SEAN.SEAN.task*
        name: task
        nameWithType: SEAN.task
        qualifiedName: SEAN.SEAN.task
      VB:
      - id: SEAN.SEAN.task*
        name: task
        nameWithType: SEAN.task
        qualifiedName: SEAN.SEAN.task
    isDefinition: true
    commentId: Overload:SEAN.SEAN.task
  SEAN.Situations:
    name:
      CSharp:
      - name: SEAN.Situations
        nameWithType: SEAN.Situations
        qualifiedName: SEAN.Situations
      VB:
      - name: SEAN.Situations
        nameWithType: SEAN.Situations
        qualifiedName: SEAN.Situations
    isDefinition: true
    commentId: N:SEAN.Situations
  SEAN.Situations.Robot:
    name:
      CSharp:
      - id: SEAN.Situations.Robot
        name: Robot
        nameWithType: Robot
        qualifiedName: SEAN.Situations.Robot
      VB:
      - id: SEAN.Situations.Robot
        name: Robot
        nameWithType: Robot
        qualifiedName: SEAN.Situations.Robot
    isDefinition: true
    parent: SEAN.Situations
    commentId: T:SEAN.Situations.Robot
  SEAN.SEAN.robot*:
    name:
      CSharp:
      - id: SEAN.SEAN.robot*
        name: robot
        nameWithType: SEAN.robot
        qualifiedName: SEAN.SEAN.robot
      VB:
      - id: SEAN.SEAN.robot*
        name: robot
        nameWithType: SEAN.robot
        qualifiedName: SEAN.SEAN.robot
    isDefinition: true
    commentId: Overload:SEAN.SEAN.robot
  SEAN.Control:
    name:
      CSharp:
      - name: SEAN.Control
        nameWithType: SEAN.Control
        qualifiedName: SEAN.Control
      VB:
      - name: SEAN.Control
        nameWithType: SEAN.Control
        qualifiedName: SEAN.Control
    isDefinition: true
    commentId: N:SEAN.Control
  SEAN.Control.ControlSubscriber:
    name:
      CSharp:
      - id: SEAN.Control.ControlSubscriber
        name: ControlSubscriber
        nameWithType: ControlSubscriber
        qualifiedName: SEAN.Control.ControlSubscriber
      VB:
      - id: SEAN.Control.ControlSubscriber
        name: ControlSubscriber
        nameWithType: ControlSubscriber
        qualifiedName: SEAN.Control.ControlSubscriber
    isDefinition: true
    parent: SEAN.Control
    commentId: T:SEAN.Control.ControlSubscriber
  SEAN.SEAN.controller*:
    name:
      CSharp:
      - id: SEAN.SEAN.controller*
        name: controller
        nameWithType: SEAN.controller
        qualifiedName: SEAN.SEAN.controller
      VB:
      - id: SEAN.SEAN.controller*
        name: controller
        nameWithType: SEAN.controller
        qualifiedName: SEAN.SEAN.controller
    isDefinition: true
    commentId: Overload:SEAN.SEAN.controller
  SEAN.Mapping.PixelCube:
    name:
      CSharp:
      - id: SEAN.Mapping.PixelCube
        name: PixelCube
        nameWithType: PixelCube
        qualifiedName: SEAN.Mapping.PixelCube
      VB:
      - id: SEAN.Mapping.PixelCube
        name: PixelCube
        nameWithType: PixelCube
        qualifiedName: SEAN.Mapping.PixelCube
    isDefinition: true
    commentId: T:SEAN.Mapping.PixelCube
  SEAN.Mapping.QuadCube:
    name:
      CSharp:
      - id: SEAN.Mapping.QuadCube
        name: QuadCube
        nameWithType: QuadCube
        qualifiedName: SEAN.Mapping.QuadCube
      VB:
      - id: SEAN.Mapping.QuadCube
        name: QuadCube
        nameWithType: QuadCube
        qualifiedName: SEAN.Mapping.QuadCube
    isDefinition: true
    commentId: T:SEAN.Mapping.QuadCube
  SEAN.Mapping.MapCreator:
    name:
      CSharp:
      - id: SEAN.Mapping.MapCreator
        name: MapCreator
        nameWithType: MapCreator
        qualifiedName: SEAN.Mapping.MapCreator
      VB:
      - id: SEAN.Mapping.MapCreator
        name: MapCreator
        nameWithType: MapCreator
        qualifiedName: SEAN.Mapping.MapCreator
    isDefinition: true
    commentId: T:SEAN.Mapping.MapCreator
  SEAN.Mapping:
    name:
      CSharp:
      - name: SEAN.Mapping
        nameWithType: SEAN.Mapping
        qualifiedName: SEAN.Mapping
      VB:
      - name: SEAN.Mapping
        nameWithType: SEAN.Mapping
        qualifiedName: SEAN.Mapping
    isDefinition: true
    commentId: N:SEAN.Mapping
  RosMessageTypes.Std.MTime:
    name:
      CSharp:
      - id: RosMessageTypes.Std.MTime
        name: Std.MTime
        nameWithType: Std.MTime
        qualifiedName: RosMessageTypes.Std.MTime
        isExternal: true
      VB:
      - id: RosMessageTypes.Std.MTime
        name: Std.MTime
        nameWithType: Std.MTime
        qualifiedName: RosMessageTypes.Std.MTime
        isExternal: true
    isDefinition: true
  SEAN.Metrics.Metrics.StartTime*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.StartTime*
        name: StartTime
        nameWithType: Metrics.StartTime
        qualifiedName: SEAN.Metrics.Metrics.StartTime
      VB:
      - id: SEAN.Metrics.Metrics.StartTime*
        name: StartTime
        nameWithType: Metrics.StartTime
        qualifiedName: SEAN.Metrics.Metrics.StartTime
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.StartTime
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  SEAN.Metrics.Metrics.TimeElapsed*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.TimeElapsed*
        name: TimeElapsed
        nameWithType: Metrics.TimeElapsed
        qualifiedName: SEAN.Metrics.Metrics.TimeElapsed
      VB:
      - id: SEAN.Metrics.Metrics.TimeElapsed*
        name: TimeElapsed
        nameWithType: Metrics.TimeElapsed
        qualifiedName: SEAN.Metrics.Metrics.TimeElapsed
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.TimeElapsed
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  SEAN.Metrics.Metrics.PeopleCollisions*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.PeopleCollisions*
        name: PeopleCollisions
        nameWithType: Metrics.PeopleCollisions
        qualifiedName: SEAN.Metrics.Metrics.PeopleCollisions
      VB:
      - id: SEAN.Metrics.Metrics.PeopleCollisions*
        name: PeopleCollisions
        nameWithType: Metrics.PeopleCollisions
        qualifiedName: SEAN.Metrics.Metrics.PeopleCollisions
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.PeopleCollisions
  SEAN.Metrics.Metrics.ObjectCollisions*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.ObjectCollisions*
        name: ObjectCollisions
        nameWithType: Metrics.ObjectCollisions
        qualifiedName: SEAN.Metrics.Metrics.ObjectCollisions
      VB:
      - id: SEAN.Metrics.Metrics.ObjectCollisions*
        name: ObjectCollisions
        nameWithType: Metrics.ObjectCollisions
        qualifiedName: SEAN.Metrics.Metrics.ObjectCollisions
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.ObjectCollisions
  SEAN.Metrics.Metrics.MinDistToPed*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.MinDistToPed*
        name: MinDistToPed
        nameWithType: Metrics.MinDistToPed
        qualifiedName: SEAN.Metrics.Metrics.MinDistToPed
      VB:
      - id: SEAN.Metrics.Metrics.MinDistToPed*
        name: MinDistToPed
        nameWithType: Metrics.MinDistToPed
        qualifiedName: SEAN.Metrics.Metrics.MinDistToPed
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.MinDistToPed
  SEAN.Metrics.Metrics.MinDistToTarget*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.MinDistToTarget*
        name: MinDistToTarget
        nameWithType: Metrics.MinDistToTarget
        qualifiedName: SEAN.Metrics.Metrics.MinDistToTarget
      VB:
      - id: SEAN.Metrics.Metrics.MinDistToTarget*
        name: MinDistToTarget
        nameWithType: Metrics.MinDistToTarget
        qualifiedName: SEAN.Metrics.Metrics.MinDistToTarget
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.MinDistToTarget
  SEAN.Metrics.Metrics.IntimateDistViolations*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.IntimateDistViolations*
        name: IntimateDistViolations
        nameWithType: Metrics.IntimateDistViolations
        qualifiedName: SEAN.Metrics.Metrics.IntimateDistViolations
      VB:
      - id: SEAN.Metrics.Metrics.IntimateDistViolations*
        name: IntimateDistViolations
        nameWithType: Metrics.IntimateDistViolations
        qualifiedName: SEAN.Metrics.Metrics.IntimateDistViolations
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.IntimateDistViolations
  SEAN.Metrics.Metrics.PersonalDistViolations*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.PersonalDistViolations*
        name: PersonalDistViolations
        nameWithType: Metrics.PersonalDistViolations
        qualifiedName: SEAN.Metrics.Metrics.PersonalDistViolations
      VB:
      - id: SEAN.Metrics.Metrics.PersonalDistViolations*
        name: PersonalDistViolations
        nameWithType: Metrics.PersonalDistViolations
        qualifiedName: SEAN.Metrics.Metrics.PersonalDistViolations
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.PersonalDistViolations
  SEAN.Metrics.Metrics.HasActors*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.HasActors*
        name: HasActors
        nameWithType: Metrics.HasActors
        qualifiedName: SEAN.Metrics.Metrics.HasActors
      VB:
      - id: SEAN.Metrics.Metrics.HasActors*
        name: HasActors
        nameWithType: Metrics.HasActors
        qualifiedName: SEAN.Metrics.Metrics.HasActors
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.HasActors
  SEAN.Metrics.Metrics.TotalStuckTime*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.TotalStuckTime*
        name: TotalStuckTime
        nameWithType: Metrics.TotalStuckTime
        qualifiedName: SEAN.Metrics.Metrics.TotalStuckTime
      VB:
      - id: SEAN.Metrics.Metrics.TotalStuckTime*
        name: TotalStuckTime
        nameWithType: Metrics.TotalStuckTime
        qualifiedName: SEAN.Metrics.Metrics.TotalStuckTime
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.TotalStuckTime
  SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal*
        name: MeanStuckDistanceFromGoal
        nameWithType: Metrics.MeanStuckDistanceFromGoal
        qualifiedName: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal
      VB:
      - id: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal*
        name: MeanStuckDistanceFromGoal
        nameWithType: Metrics.MeanStuckDistanceFromGoal
        qualifiedName: SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.MeanStuckDistanceFromGoal
  SEAN.Metrics.Metrics.OnNewTask*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.OnNewTask*
        name: OnNewTask
        nameWithType: Metrics.OnNewTask
        qualifiedName: SEAN.Metrics.Metrics.OnNewTask
      VB:
      - id: SEAN.Metrics.Metrics.OnNewTask*
        name: OnNewTask
        nameWithType: Metrics.OnNewTask
        qualifiedName: SEAN.Metrics.Metrics.OnNewTask
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.OnNewTask
  SEAN.Metrics.Metrics.Start*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.Start*
        name: Start
        nameWithType: Metrics.Start
        qualifiedName: SEAN.Metrics.Metrics.Start
      VB:
      - id: SEAN.Metrics.Metrics.Start*
        name: Start
        nameWithType: Metrics.Start
        qualifiedName: SEAN.Metrics.Metrics.Start
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.Start
  SEAN.Metrics.Metrics.Update*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.Update*
        name: Update
        nameWithType: Metrics.Update
        qualifiedName: SEAN.Metrics.Metrics.Update
      VB:
      - id: SEAN.Metrics.Metrics.Update*
        name: Update
        nameWithType: Metrics.Update
        qualifiedName: SEAN.Metrics.Metrics.Update
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.Update
  SEAN.Metrics.Metrics.IncrementObjectCollisions*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.IncrementObjectCollisions*
        name: IncrementObjectCollisions
        nameWithType: Metrics.IncrementObjectCollisions
        qualifiedName: SEAN.Metrics.Metrics.IncrementObjectCollisions
      VB:
      - id: SEAN.Metrics.Metrics.IncrementObjectCollisions*
        name: IncrementObjectCollisions
        nameWithType: Metrics.IncrementObjectCollisions
        qualifiedName: SEAN.Metrics.Metrics.IncrementObjectCollisions
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.IncrementObjectCollisions
  SEAN.Metrics.Metrics.IncrementPeopleCollisions*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.IncrementPeopleCollisions*
        name: IncrementPeopleCollisions
        nameWithType: Metrics.IncrementPeopleCollisions
        qualifiedName: SEAN.Metrics.Metrics.IncrementPeopleCollisions
      VB:
      - id: SEAN.Metrics.Metrics.IncrementPeopleCollisions*
        name: IncrementPeopleCollisions
        nameWithType: Metrics.IncrementPeopleCollisions
        qualifiedName: SEAN.Metrics.Metrics.IncrementPeopleCollisions
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.IncrementPeopleCollisions
  SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations*
        name: IncrementIntimateSpaceViolations
        nameWithType: Metrics.IncrementIntimateSpaceViolations
        qualifiedName: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations
      VB:
      - id: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations*
        name: IncrementIntimateSpaceViolations
        nameWithType: Metrics.IncrementIntimateSpaceViolations
        qualifiedName: SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.IncrementIntimateSpaceViolations
  SEAN.Metrics.Metrics.IncrementPersonalDistViolations*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.IncrementPersonalDistViolations*
        name: IncrementPersonalDistViolations
        nameWithType: Metrics.IncrementPersonalDistViolations
        qualifiedName: SEAN.Metrics.Metrics.IncrementPersonalDistViolations
      VB:
      - id: SEAN.Metrics.Metrics.IncrementPersonalDistViolations*
        name: IncrementPersonalDistViolations
        nameWithType: Metrics.IncrementPersonalDistViolations
        qualifiedName: SEAN.Metrics.Metrics.IncrementPersonalDistViolations
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.IncrementPersonalDistViolations
  SEAN.Metrics.Metrics.AllCollisions*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.AllCollisions*
        name: AllCollisions
        nameWithType: Metrics.AllCollisions
        qualifiedName: SEAN.Metrics.Metrics.AllCollisions
      VB:
      - id: SEAN.Metrics.Metrics.AllCollisions*
        name: AllCollisions
        nameWithType: Metrics.AllCollisions
        qualifiedName: SEAN.Metrics.Metrics.AllCollisions
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.AllCollisions
  SEAN.Metrics.Metrics.PathLength*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.PathLength*
        name: PathLength
        nameWithType: Metrics.PathLength
        qualifiedName: SEAN.Metrics.Metrics.PathLength
      VB:
      - id: SEAN.Metrics.Metrics.PathLength*
        name: PathLength
        nameWithType: Metrics.PathLength
        qualifiedName: SEAN.Metrics.Metrics.PathLength
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.PathLength
  SEAN.Metrics.Metrics.TargetDist*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.TargetDist*
        name: TargetDist
        nameWithType: Metrics.TargetDist
        qualifiedName: SEAN.Metrics.Metrics.TargetDist
      VB:
      - id: SEAN.Metrics.Metrics.TargetDist*
        name: TargetDist
        nameWithType: Metrics.TargetDist
        qualifiedName: SEAN.Metrics.Metrics.TargetDist
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.TargetDist
  SEAN.Metrics.Metrics.TargetDistNorm*:
    name:
      CSharp:
      - id: SEAN.Metrics.Metrics.TargetDistNorm*
        name: TargetDistNorm
        nameWithType: Metrics.TargetDistNorm
        qualifiedName: SEAN.Metrics.Metrics.TargetDistNorm
      VB:
      - id: SEAN.Metrics.Metrics.TargetDistNorm*
        name: TargetDistNorm
        nameWithType: Metrics.TargetDistNorm
        qualifiedName: SEAN.Metrics.Metrics.TargetDistNorm
    isDefinition: true
    commentId: Overload:SEAN.Metrics.Metrics.TargetDistNorm
  SEAN.Metrics.CountCollisions.Start*:
    name:
      CSharp:
      - id: SEAN.Metrics.CountCollisions.Start*
        name: Start
        nameWithType: CountCollisions.Start
        qualifiedName: SEAN.Metrics.CountCollisions.Start
      VB:
      - id: SEAN.Metrics.CountCollisions.Start*
        name: Start
        nameWithType: CountCollisions.Start
        qualifiedName: SEAN.Metrics.CountCollisions.Start
    isDefinition: true
    commentId: Overload:SEAN.Metrics.CountCollisions.Start
  SEAN.Metrics.CountCollisions:
    name:
      CSharp:
      - id: SEAN.Metrics.CountCollisions
        name: CountCollisions
        nameWithType: CountCollisions
        qualifiedName: SEAN.Metrics.CountCollisions
      VB:
      - id: SEAN.Metrics.CountCollisions
        name: CountCollisions
        nameWithType: CountCollisions
        qualifiedName: SEAN.Metrics.CountCollisions
    isDefinition: true
    commentId: T:SEAN.Metrics.CountCollisions
  Global.ROSConnection:
    name:
      CSharp:
      - id: Global.ROSConnection
        name: ROSConnection
        nameWithType: ROSConnection
        qualifiedName: ROSConnection
        isExternal: true
      VB:
      - id: Global.ROSConnection
        name: ROSConnection
        nameWithType: ROSConnection
        qualifiedName: ROSConnection
        isExternal: true
    isDefinition: true
  SEAN.Metrics.MetricsPublisher:
    name:
      CSharp:
      - id: SEAN.Metrics.MetricsPublisher
        name: MetricsPublisher
        nameWithType: MetricsPublisher
        qualifiedName: SEAN.Metrics.MetricsPublisher
      VB:
      - id: SEAN.Metrics.MetricsPublisher
        name: MetricsPublisher
        nameWithType: MetricsPublisher
        qualifiedName: SEAN.Metrics.MetricsPublisher
    isDefinition: true
    commentId: T:SEAN.Metrics.MetricsPublisher
  SEAN.Sensors:
    name:
      CSharp:
      - name: SEAN.Sensors
        nameWithType: SEAN.Sensors
        qualifiedName: SEAN.Sensors
      VB:
      - name: SEAN.Sensors
        nameWithType: SEAN.Sensors
        qualifiedName: SEAN.Sensors
    isDefinition: true
    commentId: N:SEAN.Sensors
  SEAN.Sensors.LaserScanner:
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanner
        name: LaserScanner
        nameWithType: LaserScanner
        qualifiedName: SEAN.Sensors.LaserScanner
      VB:
      - id: SEAN.Sensors.LaserScanner
        name: LaserScanner
        nameWithType: LaserScanner
        qualifiedName: SEAN.Sensors.LaserScanner
    isDefinition: true
    parent: SEAN.Sensors
    commentId: T:SEAN.Sensors.LaserScanner
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  SEAN.Sensors.RaycastLaserScanner.Start*:
    name:
      CSharp:
      - id: SEAN.Sensors.RaycastLaserScanner.Start*
        name: Start
        nameWithType: RaycastLaserScanner.Start
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.Start
      VB:
      - id: SEAN.Sensors.RaycastLaserScanner.Start*
        name: Start
        nameWithType: RaycastLaserScanner.Start
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.Start
    isDefinition: true
    commentId: Overload:SEAN.Sensors.RaycastLaserScanner.Start
  RosMessageTypes.Sensor:
    name:
      CSharp:
      - name: RosMessageTypes.Sensor
        nameWithType: RosMessageTypes.Sensor
        qualifiedName: RosMessageTypes.Sensor
      VB:
      - name: RosMessageTypes.Sensor
        nameWithType: RosMessageTypes.Sensor
        qualifiedName: RosMessageTypes.Sensor
    isDefinition: true
    commentId: N:RosMessageTypes.Sensor
  RosMessageTypes.Sensor.MLaserScan:
    name:
      CSharp:
      - id: RosMessageTypes.Sensor.MLaserScan
        name: MLaserScan
        nameWithType: MLaserScan
        qualifiedName: RosMessageTypes.Sensor.MLaserScan
      VB:
      - id: RosMessageTypes.Sensor.MLaserScan
        name: MLaserScan
        nameWithType: MLaserScan
        qualifiedName: RosMessageTypes.Sensor.MLaserScan
    isDefinition: true
    parent: RosMessageTypes.Sensor
    commentId: T:RosMessageTypes.Sensor.MLaserScan
  SEAN.Sensors.LaserScanner.InitializeMessage(System.String):
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
        name: InitializeMessage
        nameWithType: LaserScanner.InitializeMessage
        qualifiedName: SEAN.Sensors.LaserScanner.InitializeMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
        name: InitializeMessage
        nameWithType: LaserScanner.InitializeMessage
        qualifiedName: SEAN.Sensors.LaserScanner.InitializeMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Sensors.LaserScanner
    commentId: M:SEAN.Sensors.LaserScanner.InitializeMessage(System.String)
  SEAN.Sensors.RaycastLaserScanner.InitializeMessage*:
    name:
      CSharp:
      - id: SEAN.Sensors.RaycastLaserScanner.InitializeMessage*
        name: InitializeMessage
        nameWithType: RaycastLaserScanner.InitializeMessage
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.InitializeMessage
      VB:
      - id: SEAN.Sensors.RaycastLaserScanner.InitializeMessage*
        name: InitializeMessage
        nameWithType: RaycastLaserScanner.InitializeMessage
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.InitializeMessage
    isDefinition: true
    commentId: Overload:SEAN.Sensors.RaycastLaserScanner.InitializeMessage
  SEAN.Sensors.LaserScanner.ScanPeriod:
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanner.ScanPeriod
        name: ScanPeriod
        nameWithType: LaserScanner.ScanPeriod
        qualifiedName: SEAN.Sensors.LaserScanner.ScanPeriod
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Sensors.LaserScanner.ScanPeriod
        name: ScanPeriod
        nameWithType: LaserScanner.ScanPeriod
        qualifiedName: SEAN.Sensors.LaserScanner.ScanPeriod
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Sensors.LaserScanner
    commentId: M:SEAN.Sensors.LaserScanner.ScanPeriod
  SEAN.Sensors.RaycastLaserScanner.ScanPeriod*:
    name:
      CSharp:
      - id: SEAN.Sensors.RaycastLaserScanner.ScanPeriod*
        name: ScanPeriod
        nameWithType: RaycastLaserScanner.ScanPeriod
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.ScanPeriod
      VB:
      - id: SEAN.Sensors.RaycastLaserScanner.ScanPeriod*
        name: ScanPeriod
        nameWithType: RaycastLaserScanner.ScanPeriod
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.ScanPeriod
    isDefinition: true
    commentId: Overload:SEAN.Sensors.RaycastLaserScanner.ScanPeriod
  SEAN.Sensors.LaserScanner.Scan:
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanner.Scan
        name: Scan
        nameWithType: LaserScanner.Scan
        qualifiedName: SEAN.Sensors.LaserScanner.Scan
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Sensors.LaserScanner.Scan
        name: Scan
        nameWithType: LaserScanner.Scan
        qualifiedName: SEAN.Sensors.LaserScanner.Scan
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Sensors.LaserScanner
    commentId: M:SEAN.Sensors.LaserScanner.Scan
  SEAN.Sensors.RaycastLaserScanner.Scan*:
    name:
      CSharp:
      - id: SEAN.Sensors.RaycastLaserScanner.Scan*
        name: Scan
        nameWithType: RaycastLaserScanner.Scan
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.Scan
      VB:
      - id: SEAN.Sensors.RaycastLaserScanner.Scan*
        name: Scan
        nameWithType: RaycastLaserScanner.Scan
        qualifiedName: SEAN.Sensors.RaycastLaserScanner.Scan
    isDefinition: true
    commentId: Overload:SEAN.Sensors.RaycastLaserScanner.Scan
  SEAN.Sensors.RaycastLaserScanner:
    name:
      CSharp:
      - id: SEAN.Sensors.RaycastLaserScanner
        name: RaycastLaserScanner
        nameWithType: RaycastLaserScanner
        qualifiedName: SEAN.Sensors.RaycastLaserScanner
      VB:
      - id: SEAN.Sensors.RaycastLaserScanner
        name: RaycastLaserScanner
        nameWithType: RaycastLaserScanner
        qualifiedName: SEAN.Sensors.RaycastLaserScanner
    isDefinition: true
    commentId: T:SEAN.Sensors.RaycastLaserScanner
  SEAN.Sensors.LaserScanPublisher:
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanPublisher
        name: LaserScanPublisher
        nameWithType: LaserScanPublisher
        qualifiedName: SEAN.Sensors.LaserScanPublisher
      VB:
      - id: SEAN.Sensors.LaserScanPublisher
        name: LaserScanPublisher
        nameWithType: LaserScanPublisher
        qualifiedName: SEAN.Sensors.LaserScanPublisher
    isDefinition: true
    commentId: T:SEAN.Sensors.LaserScanPublisher
  SEAN.Sensors.LaserScanner.Scan*:
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanner.Scan*
        name: Scan
        nameWithType: LaserScanner.Scan
        qualifiedName: SEAN.Sensors.LaserScanner.Scan
      VB:
      - id: SEAN.Sensors.LaserScanner.Scan*
        name: Scan
        nameWithType: LaserScanner.Scan
        qualifiedName: SEAN.Sensors.LaserScanner.Scan
    isDefinition: true
    commentId: Overload:SEAN.Sensors.LaserScanner.Scan
  SEAN.Sensors.LaserScanner.ScanPeriod*:
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanner.ScanPeriod*
        name: ScanPeriod
        nameWithType: LaserScanner.ScanPeriod
        qualifiedName: SEAN.Sensors.LaserScanner.ScanPeriod
      VB:
      - id: SEAN.Sensors.LaserScanner.ScanPeriod*
        name: ScanPeriod
        nameWithType: LaserScanner.ScanPeriod
        qualifiedName: SEAN.Sensors.LaserScanner.ScanPeriod
    isDefinition: true
    commentId: Overload:SEAN.Sensors.LaserScanner.ScanPeriod
  SEAN.Sensors.LaserScanner.InitializeMessage*:
    name:
      CSharp:
      - id: SEAN.Sensors.LaserScanner.InitializeMessage*
        name: InitializeMessage
        nameWithType: LaserScanner.InitializeMessage
        qualifiedName: SEAN.Sensors.LaserScanner.InitializeMessage
      VB:
      - id: SEAN.Sensors.LaserScanner.InitializeMessage*
        name: InitializeMessage
        nameWithType: LaserScanner.InitializeMessage
        qualifiedName: SEAN.Sensors.LaserScanner.InitializeMessage
    isDefinition: true
    commentId: Overload:SEAN.Sensors.LaserScanner.InitializeMessage
  SEAN.Tasks.BaseTask.start:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.start
        name: start
        nameWithType: BaseTask.start
        qualifiedName: SEAN.Tasks.BaseTask.start
      VB:
      - id: SEAN.Tasks.BaseTask.start
        name: start
        nameWithType: BaseTask.start
        qualifiedName: SEAN.Tasks.BaseTask.start
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.start
  SEAN.Tasks.BaseTask.goal:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.goal
        name: goal
        nameWithType: BaseTask.goal
        qualifiedName: SEAN.Tasks.BaseTask.goal
      VB:
      - id: SEAN.Tasks.BaseTask.goal
        name: goal
        nameWithType: BaseTask.goal
        qualifiedName: SEAN.Tasks.BaseTask.goal
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.goal
  SEAN.Tasks.BaseTask.onNewTask:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.onNewTask
        name: onNewTask
        nameWithType: BaseTask.onNewTask
        qualifiedName: SEAN.Tasks.BaseTask.onNewTask
      VB:
      - id: SEAN.Tasks.BaseTask.onNewTask
        name: onNewTask
        nameWithType: BaseTask.onNewTask
        qualifiedName: SEAN.Tasks.BaseTask.onNewTask
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.onNewTask
  SEAN.Tasks.BaseTask.PublishGoal:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.PublishGoal
        name: PublishGoal
        nameWithType: BaseTask.PublishGoal
        qualifiedName: SEAN.Tasks.BaseTask.PublishGoal
      VB:
      - id: SEAN.Tasks.BaseTask.PublishGoal
        name: PublishGoal
        nameWithType: BaseTask.PublishGoal
        qualifiedName: SEAN.Tasks.BaseTask.PublishGoal
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.PublishGoal
  SEAN.Tasks.BaseTask.Topic:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.Topic
        name: Topic
        nameWithType: BaseTask.Topic
        qualifiedName: SEAN.Tasks.BaseTask.Topic
      VB:
      - id: SEAN.Tasks.BaseTask.Topic
        name: Topic
        nameWithType: BaseTask.Topic
        qualifiedName: SEAN.Tasks.BaseTask.Topic
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.Topic
  SEAN.Tasks.BaseTask.FrameID:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.FrameID
        name: FrameID
        nameWithType: BaseTask.FrameID
        qualifiedName: SEAN.Tasks.BaseTask.FrameID
      VB:
      - id: SEAN.Tasks.BaseTask.FrameID
        name: FrameID
        nameWithType: BaseTask.FrameID
        qualifiedName: SEAN.Tasks.BaseTask.FrameID
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.FrameID
  SEAN.Tasks.BaseTask.sean:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.sean
        name: sean
        nameWithType: BaseTask.sean
        qualifiedName: SEAN.Tasks.BaseTask.sean
      VB:
      - id: SEAN.Tasks.BaseTask.sean
        name: sean
        nameWithType: BaseTask.sean
        qualifiedName: SEAN.Tasks.BaseTask.sean
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.sean
  SEAN.Tasks.BaseTask.debounceTimeoutSec:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.debounceTimeoutSec
        name: debounceTimeoutSec
        nameWithType: BaseTask.debounceTimeoutSec
        qualifiedName: SEAN.Tasks.BaseTask.debounceTimeoutSec
      VB:
      - id: SEAN.Tasks.BaseTask.debounceTimeoutSec
        name: debounceTimeoutSec
        nameWithType: BaseTask.debounceTimeoutSec
        qualifiedName: SEAN.Tasks.BaseTask.debounceTimeoutSec
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.debounceTimeoutSec
  SEAN.Tasks.BaseTask.debounceStartupTimeoutSec:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
        name: debounceStartupTimeoutSec
        nameWithType: BaseTask.debounceStartupTimeoutSec
        qualifiedName: SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
      VB:
      - id: SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
        name: debounceStartupTimeoutSec
        nameWithType: BaseTask.debounceStartupTimeoutSec
        qualifiedName: SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.debounceStartupTimeoutSec
  SEAN.Tasks.BaseTask.startTransform:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.startTransform
        name: startTransform
        nameWithType: BaseTask.startTransform
        qualifiedName: SEAN.Tasks.BaseTask.startTransform
      VB:
      - id: SEAN.Tasks.BaseTask.startTransform
        name: startTransform
        nameWithType: BaseTask.startTransform
        qualifiedName: SEAN.Tasks.BaseTask.startTransform
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: P:SEAN.Tasks.BaseTask.startTransform
  SEAN.Tasks.BaseTask.goalTransform:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.goalTransform
        name: goalTransform
        nameWithType: BaseTask.goalTransform
        qualifiedName: SEAN.Tasks.BaseTask.goalTransform
      VB:
      - id: SEAN.Tasks.BaseTask.goalTransform
        name: goalTransform
        nameWithType: BaseTask.goalTransform
        qualifiedName: SEAN.Tasks.BaseTask.goalTransform
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: P:SEAN.Tasks.BaseTask.goalTransform
  SEAN.Tasks.BaseTask.completionDistance:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.completionDistance
        name: completionDistance
        nameWithType: BaseTask.completionDistance
        qualifiedName: SEAN.Tasks.BaseTask.completionDistance
      VB:
      - id: SEAN.Tasks.BaseTask.completionDistance
        name: completionDistance
        nameWithType: BaseTask.completionDistance
        qualifiedName: SEAN.Tasks.BaseTask.completionDistance
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: F:SEAN.Tasks.BaseTask.completionDistance
  SEAN.Tasks.BaseTask.isRunning:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.isRunning
        name: isRunning
        nameWithType: BaseTask.isRunning
        qualifiedName: SEAN.Tasks.BaseTask.isRunning
      VB:
      - id: SEAN.Tasks.BaseTask.isRunning
        name: isRunning
        nameWithType: BaseTask.isRunning
        qualifiedName: SEAN.Tasks.BaseTask.isRunning
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: P:SEAN.Tasks.BaseTask.isRunning
  SEAN.Tasks.BaseTask.Start:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.Start
        name: Start
        nameWithType: BaseTask.Start
        qualifiedName: SEAN.Tasks.BaseTask.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.Start
        name: Start
        nameWithType: BaseTask.Start
        qualifiedName: SEAN.Tasks.BaseTask.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.Start
  SEAN.Tasks.BaseTask.Update:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.Update
        name: Update
        nameWithType: BaseTask.Update
        qualifiedName: SEAN.Tasks.BaseTask.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.Update
        name: Update
        nameWithType: BaseTask.Update
        qualifiedName: SEAN.Tasks.BaseTask.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.Update
  SEAN.Tasks.BaseTask.GetNavmeshRandomVector:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomVector
        name: GetNavmeshRandomVector
        nameWithType: BaseTask.GetNavmeshRandomVector
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomVector
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomVector
        name: GetNavmeshRandomVector
        nameWithType: BaseTask.GetNavmeshRandomVector
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomVector
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.GetNavmeshRandomVector
  SEAN.Tasks.BaseTask.GetNavmeshRandomHit:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
        name: GetNavmeshRandomHit
        nameWithType: BaseTask.GetNavmeshRandomHit
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
        name: GetNavmeshRandomHit
        nameWithType: BaseTask.GetNavmeshRandomHit
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.GetNavmeshRandomHit
  SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single):
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
        name: GetNavmeshRandomHit
        nameWithType: BaseTask.GetNavmeshRandomHit
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
        name: GetNavmeshRandomHit
        nameWithType: BaseTask.GetNavmeshRandomHit
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.GetNavmeshRandomHit(Vector3,System.Single,System.Single)
  SEAN.Tasks.BaseTask.GetRandomRotation:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetRandomRotation
        name: GetRandomRotation
        nameWithType: BaseTask.GetRandomRotation
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.GetRandomRotation
        name: GetRandomRotation
        nameWithType: BaseTask.GetRandomRotation
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomRotation
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.GetRandomRotation
  SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@):
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
        name: GetRandomGroup
        nameWithType: BaseTask.GetRandomGroup
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
        name: GetRandomGroup
        nameWithType: BaseTask.GetRandomGroup
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroup
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.GetRandomGroup(Vector3@)
  SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@):
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
        name: GetRandomGroupMembershipTransform
        nameWithType: BaseTask.GetRandomGroupMembershipTransform
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
        name: GetRandomGroupMembershipTransform
        nameWithType: BaseTask.GetRandomGroupMembershipTransform
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform(Vector3@,Quaternion@)
  SEAN.Tasks.BaseTask.NewTask:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.NewTask
        name: NewTask
        nameWithType: BaseTask.NewTask
        qualifiedName: SEAN.Tasks.BaseTask.NewTask
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Tasks.BaseTask.NewTask
        name: NewTask
        nameWithType: BaseTask.NewTask
        qualifiedName: SEAN.Tasks.BaseTask.NewTask
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Tasks.BaseTask
    commentId: M:SEAN.Tasks.BaseTask.NewTask
  SEAN.Tasks.TaskRandomABNav.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskRandomABNav.NewTask*
        name: NewTask
        nameWithType: TaskRandomABNav.NewTask
        qualifiedName: SEAN.Tasks.TaskRandomABNav.NewTask
      VB:
      - id: SEAN.Tasks.TaskRandomABNav.NewTask*
        name: NewTask
        nameWithType: TaskRandomABNav.NewTask
        qualifiedName: SEAN.Tasks.TaskRandomABNav.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.TaskRandomABNav.NewTask
  SEAN.Tasks.TaskRandomABNav:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskRandomABNav
        name: TaskRandomABNav
        nameWithType: TaskRandomABNav
        qualifiedName: SEAN.Tasks.TaskRandomABNav
      VB:
      - id: SEAN.Tasks.TaskRandomABNav
        name: TaskRandomABNav
        nameWithType: TaskRandomABNav
        qualifiedName: SEAN.Tasks.TaskRandomABNav
    isDefinition: true
    commentId: T:SEAN.Tasks.TaskRandomABNav
  SEAN.Tasks.OnNewTask:
    name:
      CSharp:
      - id: SEAN.Tasks.OnNewTask
        name: OnNewTask
        nameWithType: OnNewTask
        qualifiedName: SEAN.Tasks.OnNewTask
      VB:
      - id: SEAN.Tasks.OnNewTask
        name: OnNewTask
        nameWithType: OnNewTask
        qualifiedName: SEAN.Tasks.OnNewTask
    isDefinition: true
    parent: SEAN.Tasks
    commentId: T:SEAN.Tasks.OnNewTask
  SEAN.Tasks.BaseTask.startTransform*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.startTransform*
        name: startTransform
        nameWithType: BaseTask.startTransform
        qualifiedName: SEAN.Tasks.BaseTask.startTransform
      VB:
      - id: SEAN.Tasks.BaseTask.startTransform*
        name: startTransform
        nameWithType: BaseTask.startTransform
        qualifiedName: SEAN.Tasks.BaseTask.startTransform
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.startTransform
  SEAN.Tasks.BaseTask.goalTransform*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.goalTransform*
        name: goalTransform
        nameWithType: BaseTask.goalTransform
        qualifiedName: SEAN.Tasks.BaseTask.goalTransform
      VB:
      - id: SEAN.Tasks.BaseTask.goalTransform*
        name: goalTransform
        nameWithType: BaseTask.goalTransform
        qualifiedName: SEAN.Tasks.BaseTask.goalTransform
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.goalTransform
  SEAN.Tasks.BaseTask.isRunning*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.isRunning*
        name: isRunning
        nameWithType: BaseTask.isRunning
        qualifiedName: SEAN.Tasks.BaseTask.isRunning
      VB:
      - id: SEAN.Tasks.BaseTask.isRunning*
        name: isRunning
        nameWithType: BaseTask.isRunning
        qualifiedName: SEAN.Tasks.BaseTask.isRunning
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.isRunning
  SEAN.Tasks.BaseTask.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.NewTask*
        name: NewTask
        nameWithType: BaseTask.NewTask
        qualifiedName: SEAN.Tasks.BaseTask.NewTask
      VB:
      - id: SEAN.Tasks.BaseTask.NewTask*
        name: NewTask
        nameWithType: BaseTask.NewTask
        qualifiedName: SEAN.Tasks.BaseTask.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.NewTask
  SEAN.Tasks.BaseTask.Start*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.Start*
        name: Start
        nameWithType: BaseTask.Start
        qualifiedName: SEAN.Tasks.BaseTask.Start
      VB:
      - id: SEAN.Tasks.BaseTask.Start*
        name: Start
        nameWithType: BaseTask.Start
        qualifiedName: SEAN.Tasks.BaseTask.Start
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.Start
  SEAN.Tasks.BaseTask.Update*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.Update*
        name: Update
        nameWithType: BaseTask.Update
        qualifiedName: SEAN.Tasks.BaseTask.Update
      VB:
      - id: SEAN.Tasks.BaseTask.Update*
        name: Update
        nameWithType: BaseTask.Update
        qualifiedName: SEAN.Tasks.BaseTask.Update
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.Update
  SEAN.Tasks.BaseTask.GetNavmeshRandomVector*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomVector*
        name: GetNavmeshRandomVector
        nameWithType: BaseTask.GetNavmeshRandomVector
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomVector
      VB:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomVector*
        name: GetNavmeshRandomVector
        nameWithType: BaseTask.GetNavmeshRandomVector
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomVector
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.GetNavmeshRandomVector
  Global.UnityEngine.AI.NavMeshHit:
    name:
      CSharp:
      - id: Global.UnityEngine.AI.NavMeshHit
        name: UnityEngine.AI.NavMeshHit
        nameWithType: UnityEngine.AI.NavMeshHit
        qualifiedName: UnityEngine.AI.NavMeshHit
        isExternal: true
      VB:
      - id: Global.UnityEngine.AI.NavMeshHit
        name: UnityEngine.AI.NavMeshHit
        nameWithType: UnityEngine.AI.NavMeshHit
        qualifiedName: UnityEngine.AI.NavMeshHit
        isExternal: true
    isDefinition: true
  SEAN.Tasks.BaseTask.GetNavmeshRandomHit*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit*
        name: GetNavmeshRandomHit
        nameWithType: BaseTask.GetNavmeshRandomHit
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
      VB:
      - id: SEAN.Tasks.BaseTask.GetNavmeshRandomHit*
        name: GetNavmeshRandomHit
        nameWithType: BaseTask.GetNavmeshRandomHit
        qualifiedName: SEAN.Tasks.BaseTask.GetNavmeshRandomHit
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.GetNavmeshRandomHit
  Global.Quaternion:
    name:
      CSharp:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Global.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
  SEAN.Tasks.BaseTask.GetRandomRotation*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetRandomRotation*
        name: GetRandomRotation
        nameWithType: BaseTask.GetRandomRotation
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomRotation
      VB:
      - id: SEAN.Tasks.BaseTask.GetRandomRotation*
        name: GetRandomRotation
        nameWithType: BaseTask.GetRandomRotation
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomRotation
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.GetRandomRotation
  SEAN.Tasks.BaseTask.GetRandomGroup*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetRandomGroup*
        name: GetRandomGroup
        nameWithType: BaseTask.GetRandomGroup
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroup
      VB:
      - id: SEAN.Tasks.BaseTask.GetRandomGroup*
        name: GetRandomGroup
        nameWithType: BaseTask.GetRandomGroup
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroup
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.GetRandomGroup
  SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform*:
    name:
      CSharp:
      - id: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform*
        name: GetRandomGroupMembershipTransform
        nameWithType: BaseTask.GetRandomGroupMembershipTransform
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform
      VB:
      - id: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform*
        name: GetRandomGroupMembershipTransform
        nameWithType: BaseTask.GetRandomGroupMembershipTransform
        qualifiedName: SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform
    isDefinition: true
    commentId: Overload:SEAN.Tasks.BaseTask.GetRandomGroupMembershipTransform
  SEAN.Tasks.TaskJoinGroup.#ctor*:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskJoinGroup.#ctor*
        name: TaskJoinGroup
        nameWithType: TaskJoinGroup.TaskJoinGroup
        qualifiedName: SEAN.Tasks.TaskJoinGroup.TaskJoinGroup
      VB:
      - id: SEAN.Tasks.TaskJoinGroup.#ctor*
        name: TaskJoinGroup
        nameWithType: TaskJoinGroup.TaskJoinGroup
        qualifiedName: SEAN.Tasks.TaskJoinGroup.TaskJoinGroup
    isDefinition: true
    commentId: Overload:SEAN.Tasks.TaskJoinGroup.#ctor
  SEAN.Tasks.TaskJoinGroup.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskJoinGroup.NewTask*
        name: NewTask
        nameWithType: TaskJoinGroup.NewTask
        qualifiedName: SEAN.Tasks.TaskJoinGroup.NewTask
      VB:
      - id: SEAN.Tasks.TaskJoinGroup.NewTask*
        name: NewTask
        nameWithType: TaskJoinGroup.NewTask
        qualifiedName: SEAN.Tasks.TaskJoinGroup.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.TaskJoinGroup.NewTask
  SEAN.Tasks.TaskJoinGroup:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskJoinGroup
        name: TaskJoinGroup
        nameWithType: TaskJoinGroup
        qualifiedName: SEAN.Tasks.TaskJoinGroup
      VB:
      - id: SEAN.Tasks.TaskJoinGroup
        name: TaskJoinGroup
        nameWithType: TaskJoinGroup
        qualifiedName: SEAN.Tasks.TaskJoinGroup
    isDefinition: true
    commentId: T:SEAN.Tasks.TaskJoinGroup
  SEAN.Situations.Scenario.SocialSituation:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.SocialSituation
        name: SocialSituation
        nameWithType: SocialSituation
        qualifiedName: SEAN.Situations.Scenario.SocialSituation
      VB:
      - id: SEAN.Situations.Scenario.SocialSituation
        name: SocialSituation
        nameWithType: SocialSituation
        qualifiedName: SEAN.Situations.Scenario.SocialSituation
    isDefinition: true
    parent: SEAN.Situations.Scenario
    commentId: T:SEAN.Situations.Scenario.SocialSituation
  SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask*
        name: NewTask
        nameWithType: TaskHandcraftedSocialSituation.NewTask
        qualifiedName: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask
      VB:
      - id: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask*
        name: NewTask
        nameWithType: TaskHandcraftedSocialSituation.NewTask
        qualifiedName: SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.TaskHandcraftedSocialSituation.NewTask
  SEAN.Tasks.TaskHandcraftedSocialSituation:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskHandcraftedSocialSituation
        name: TaskHandcraftedSocialSituation
        nameWithType: TaskHandcraftedSocialSituation
        qualifiedName: SEAN.Tasks.TaskHandcraftedSocialSituation
      VB:
      - id: SEAN.Tasks.TaskHandcraftedSocialSituation
        name: TaskHandcraftedSocialSituation
        nameWithType: TaskHandcraftedSocialSituation
        qualifiedName: SEAN.Tasks.TaskHandcraftedSocialSituation
    isDefinition: true
    commentId: T:SEAN.Tasks.TaskHandcraftedSocialSituation
  SEAN.Tasks.TaskCrowdedABNav.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskCrowdedABNav.NewTask*
        name: NewTask
        nameWithType: TaskCrowdedABNav.NewTask
        qualifiedName: SEAN.Tasks.TaskCrowdedABNav.NewTask
      VB:
      - id: SEAN.Tasks.TaskCrowdedABNav.NewTask*
        name: NewTask
        nameWithType: TaskCrowdedABNav.NewTask
        qualifiedName: SEAN.Tasks.TaskCrowdedABNav.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.TaskCrowdedABNav.NewTask
  SEAN.Tasks.TaskCrowdedABNav:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskCrowdedABNav
        name: TaskCrowdedABNav
        nameWithType: TaskCrowdedABNav
        qualifiedName: SEAN.Tasks.TaskCrowdedABNav
      VB:
      - id: SEAN.Tasks.TaskCrowdedABNav
        name: TaskCrowdedABNav
        nameWithType: TaskCrowdedABNav
        qualifiedName: SEAN.Tasks.TaskCrowdedABNav
    isDefinition: true
    commentId: T:SEAN.Tasks.TaskCrowdedABNav
  SEAN.Tasks.TaskLeaveGroup.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskLeaveGroup.NewTask*
        name: NewTask
        nameWithType: TaskLeaveGroup.NewTask
        qualifiedName: SEAN.Tasks.TaskLeaveGroup.NewTask
      VB:
      - id: SEAN.Tasks.TaskLeaveGroup.NewTask*
        name: NewTask
        nameWithType: TaskLeaveGroup.NewTask
        qualifiedName: SEAN.Tasks.TaskLeaveGroup.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.TaskLeaveGroup.NewTask
  SEAN.Tasks.TaskLeaveGroup:
    name:
      CSharp:
      - id: SEAN.Tasks.TaskLeaveGroup
        name: TaskLeaveGroup
        nameWithType: TaskLeaveGroup
        qualifiedName: SEAN.Tasks.TaskLeaveGroup
      VB:
      - id: SEAN.Tasks.TaskLeaveGroup
        name: TaskLeaveGroup
        nameWithType: TaskLeaveGroup
        qualifiedName: SEAN.Tasks.TaskLeaveGroup
    isDefinition: true
    commentId: T:SEAN.Tasks.TaskLeaveGroup
  SEAN.Tasks.CustomStartGoalTask.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.CustomStartGoalTask.NewTask*
        name: NewTask
        nameWithType: CustomStartGoalTask.NewTask
        qualifiedName: SEAN.Tasks.CustomStartGoalTask.NewTask
      VB:
      - id: SEAN.Tasks.CustomStartGoalTask.NewTask*
        name: NewTask
        nameWithType: CustomStartGoalTask.NewTask
        qualifiedName: SEAN.Tasks.CustomStartGoalTask.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.CustomStartGoalTask.NewTask
  SEAN.Tasks.CustomStartGoalTask:
    name:
      CSharp:
      - id: SEAN.Tasks.CustomStartGoalTask
        name: CustomStartGoalTask
        nameWithType: CustomStartGoalTask
        qualifiedName: SEAN.Tasks.CustomStartGoalTask
      VB:
      - id: SEAN.Tasks.CustomStartGoalTask
        name: CustomStartGoalTask
        nameWithType: CustomStartGoalTask
        qualifiedName: SEAN.Tasks.CustomStartGoalTask
    isDefinition: true
    commentId: T:SEAN.Tasks.CustomStartGoalTask
  SEAN.Tasks.LabStudyTask.Start*:
    name:
      CSharp:
      - id: SEAN.Tasks.LabStudyTask.Start*
        name: Start
        nameWithType: LabStudyTask.Start
        qualifiedName: SEAN.Tasks.LabStudyTask.Start
      VB:
      - id: SEAN.Tasks.LabStudyTask.Start*
        name: Start
        nameWithType: LabStudyTask.Start
        qualifiedName: SEAN.Tasks.LabStudyTask.Start
    isDefinition: true
    commentId: Overload:SEAN.Tasks.LabStudyTask.Start
  SEAN.Tasks.LabStudyTask.NewTask*:
    name:
      CSharp:
      - id: SEAN.Tasks.LabStudyTask.NewTask*
        name: NewTask
        nameWithType: LabStudyTask.NewTask
        qualifiedName: SEAN.Tasks.LabStudyTask.NewTask
      VB:
      - id: SEAN.Tasks.LabStudyTask.NewTask*
        name: NewTask
        nameWithType: LabStudyTask.NewTask
        qualifiedName: SEAN.Tasks.LabStudyTask.NewTask
    isDefinition: true
    commentId: Overload:SEAN.Tasks.LabStudyTask.NewTask
  SEAN.Tasks.LabStudyTask:
    name:
      CSharp:
      - id: SEAN.Tasks.LabStudyTask
        name: LabStudyTask
        nameWithType: LabStudyTask
        qualifiedName: SEAN.Tasks.LabStudyTask
      VB:
      - id: SEAN.Tasks.LabStudyTask
        name: LabStudyTask
        nameWithType: LabStudyTask
        qualifiedName: SEAN.Tasks.LabStudyTask
    isDefinition: true
    commentId: T:SEAN.Tasks.LabStudyTask
  SEAN.ROSClock.GUIClockVisualization:
    name:
      CSharp:
      - id: SEAN.ROSClock.GUIClockVisualization
        name: GUIClockVisualization
        nameWithType: GUIClockVisualization
        qualifiedName: SEAN.ROSClock.GUIClockVisualization
      VB:
      - id: SEAN.ROSClock.GUIClockVisualization
        name: GUIClockVisualization
        nameWithType: GUIClockVisualization
        qualifiedName: SEAN.ROSClock.GUIClockVisualization
    isDefinition: true
    commentId: T:SEAN.ROSClock.GUIClockVisualization
  SEAN.ROSClock:
    name:
      CSharp:
      - name: SEAN.ROSClock
        nameWithType: SEAN.ROSClock
        qualifiedName: SEAN.ROSClock
      VB:
      - name: SEAN.ROSClock
        nameWithType: SEAN.ROSClock
        qualifiedName: SEAN.ROSClock
    isDefinition: true
    commentId: N:SEAN.ROSClock
  SEAN.ROSClock.ROSClockPublisher:
    name:
      CSharp:
      - id: SEAN.ROSClock.ROSClockPublisher
        name: ROSClockPublisher
        nameWithType: ROSClockPublisher
        qualifiedName: SEAN.ROSClock.ROSClockPublisher
      VB:
      - id: SEAN.ROSClock.ROSClockPublisher
        name: ROSClockPublisher
        nameWithType: ROSClockPublisher
        qualifiedName: SEAN.ROSClock.ROSClockPublisher
    isDefinition: true
    parent: SEAN.ROSClock
    commentId: T:SEAN.ROSClock.ROSClockPublisher
  SEAN.ROSClock.ROSClockPublisher.Instance*:
    name:
      CSharp:
      - id: SEAN.ROSClock.ROSClockPublisher.Instance*
        name: Instance
        nameWithType: ROSClockPublisher.Instance
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.Instance
      VB:
      - id: SEAN.ROSClock.ROSClockPublisher.Instance*
        name: Instance
        nameWithType: ROSClockPublisher.Instance
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.Instance
    isDefinition: true
    commentId: Overload:SEAN.ROSClock.ROSClockPublisher.Instance
  Global.DateTime:
    name:
      CSharp:
      - id: Global.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
      VB:
      - id: Global.DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
    isDefinition: true
    commentId: '!:Global.DateTime'
  Global.Double:
    name:
      CSharp:
      - id: Global.Double
        name: Double
        nameWithType: Double
        qualifiedName: Double
        isExternal: true
      VB:
      - id: Global.Double
        name: Double
        nameWithType: Double
        qualifiedName: Double
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Double'
  SEAN.ROSClock.ROSClockPublisher.LastMSecs*:
    name:
      CSharp:
      - id: SEAN.ROSClock.ROSClockPublisher.LastMSecs*
        name: LastMSecs
        nameWithType: ROSClockPublisher.LastMSecs
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.LastMSecs
      VB:
      - id: SEAN.ROSClock.ROSClockPublisher.LastMSecs*
        name: LastMSecs
        nameWithType: ROSClockPublisher.LastMSecs
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.LastMSecs
    isDefinition: true
    commentId: Overload:SEAN.ROSClock.ROSClockPublisher.LastMSecs
  SEAN.ROSClock.ROSClockPublisher.LastPublishedTime*:
    name:
      CSharp:
      - id: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime*
        name: LastPublishedTime
        nameWithType: ROSClockPublisher.LastPublishedTime
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime
      VB:
      - id: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime*
        name: LastPublishedTime
        nameWithType: ROSClockPublisher.LastPublishedTime
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.LastPublishedTime
    isDefinition: true
    commentId: Overload:SEAN.ROSClock.ROSClockPublisher.LastPublishedTime
  SEAN.ROSClock.ROSClockPublisher.Publish*:
    name:
      CSharp:
      - id: SEAN.ROSClock.ROSClockPublisher.Publish*
        name: Publish
        nameWithType: ROSClockPublisher.Publish
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.Publish
      VB:
      - id: SEAN.ROSClock.ROSClockPublisher.Publish*
        name: Publish
        nameWithType: ROSClockPublisher.Publish
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.Publish
    isDefinition: true
    commentId: Overload:SEAN.ROSClock.ROSClockPublisher.Publish
  RosMessageTypes.Std.MHeader:
    name:
      CSharp:
      - id: RosMessageTypes.Std.MHeader
        name: Std.MHeader
        nameWithType: Std.MHeader
        qualifiedName: RosMessageTypes.Std.MHeader
        isExternal: true
      VB:
      - id: RosMessageTypes.Std.MHeader
        name: Std.MHeader
        nameWithType: Std.MHeader
        qualifiedName: RosMessageTypes.Std.MHeader
        isExternal: true
    isDefinition: true
    commentId: '!:RosMessageTypes.Std.MHeader'
  SEAN.ROSClock.ROSClockPublisher.UpdateMHeader*:
    name:
      CSharp:
      - id: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader*
        name: UpdateMHeader
        nameWithType: ROSClockPublisher.UpdateMHeader
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader
      VB:
      - id: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader*
        name: UpdateMHeader
        nameWithType: ROSClockPublisher.UpdateMHeader
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.UpdateMHeader
    isDefinition: true
    commentId: Overload:SEAN.ROSClock.ROSClockPublisher.UpdateMHeader
  System.Collections.Generic.List{RosMessageTypes.Std.MHeader}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RosMessageTypes.Std.MHeader
        name: Std.MHeader
        nameWithType: Std.MHeader
        qualifiedName: RosMessageTypes.Std.MHeader
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RosMessageTypes.Std.MHeader
        name: Std.MHeader
        nameWithType: Std.MHeader
        qualifiedName: RosMessageTypes.Std.MHeader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{RosMessageTypes.Std.MHeader}
  SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders*:
    name:
      CSharp:
      - id: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders*
        name: UpdateMHeaders
        nameWithType: ROSClockPublisher.UpdateMHeaders
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders
      VB:
      - id: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders*
        name: UpdateMHeaders
        nameWithType: ROSClockPublisher.UpdateMHeaders
        qualifiedName: SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders
    isDefinition: true
    commentId: Overload:SEAN.ROSClock.ROSClockPublisher.UpdateMHeaders
  SEAN.Util.KalmanFilterVector3.#ctor*:
    name:
      CSharp:
      - id: SEAN.Util.KalmanFilterVector3.#ctor*
        name: KalmanFilterVector3
        nameWithType: KalmanFilterVector3.KalmanFilterVector3
        qualifiedName: SEAN.Util.KalmanFilterVector3.KalmanFilterVector3
      VB:
      - id: SEAN.Util.KalmanFilterVector3.#ctor*
        name: KalmanFilterVector3
        nameWithType: KalmanFilterVector3.KalmanFilterVector3
        qualifiedName: SEAN.Util.KalmanFilterVector3.KalmanFilterVector3
    isDefinition: true
    commentId: Overload:SEAN.Util.KalmanFilterVector3.#ctor
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Single}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Single}
  SEAN.Util.KalmanFilterVector3.Update*:
    name:
      CSharp:
      - id: SEAN.Util.KalmanFilterVector3.Update*
        name: Update
        nameWithType: KalmanFilterVector3.Update
        qualifiedName: SEAN.Util.KalmanFilterVector3.Update
      VB:
      - id: SEAN.Util.KalmanFilterVector3.Update*
        name: Update
        nameWithType: KalmanFilterVector3.Update
        qualifiedName: SEAN.Util.KalmanFilterVector3.Update
    isDefinition: true
    commentId: Overload:SEAN.Util.KalmanFilterVector3.Update
  SEAN.Util.KalmanFilterVector3.Reset*:
    name:
      CSharp:
      - id: SEAN.Util.KalmanFilterVector3.Reset*
        name: Reset
        nameWithType: KalmanFilterVector3.Reset
        qualifiedName: SEAN.Util.KalmanFilterVector3.Reset
      VB:
      - id: SEAN.Util.KalmanFilterVector3.Reset*
        name: Reset
        nameWithType: KalmanFilterVector3.Reset
        qualifiedName: SEAN.Util.KalmanFilterVector3.Reset
    isDefinition: true
    commentId: Overload:SEAN.Util.KalmanFilterVector3.Reset
  SEAN.Util.KalmanFilterVector3:
    name:
      CSharp:
      - id: SEAN.Util.KalmanFilterVector3
        name: KalmanFilterVector3
        nameWithType: KalmanFilterVector3
        qualifiedName: SEAN.Util.KalmanFilterVector3
      VB:
      - id: SEAN.Util.KalmanFilterVector3
        name: KalmanFilterVector3
        nameWithType: KalmanFilterVector3
        qualifiedName: SEAN.Util.KalmanFilterVector3
    isDefinition: true
    commentId: T:SEAN.Util.KalmanFilterVector3
  SEAN.Util.PoseStamped:
    name:
      CSharp:
      - id: SEAN.Util.PoseStamped
        name: PoseStamped
        nameWithType: PoseStamped
        qualifiedName: SEAN.Util.PoseStamped
      VB:
      - id: SEAN.Util.PoseStamped
        name: PoseStamped
        nameWithType: PoseStamped
        qualifiedName: SEAN.Util.PoseStamped
    isDefinition: true
    commentId: T:SEAN.Util.PoseStamped
  System.Collections.Generic.Queue`1:
    name:
      CSharp:
      - id: System.Collections.Generic.Queue`1
        name: Queue
        nameWithType: Queue
        qualifiedName: System.Collections.Generic.Queue
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Queue`1
        name: Queue
        nameWithType: Queue
        qualifiedName: System.Collections.Generic.Queue
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Queue`1
  System.Collections.Generic.Queue{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Queue`1
        name: Queue
        nameWithType: Queue
        qualifiedName: System.Collections.Generic.Queue
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Queue`1
        name: Queue
        nameWithType: Queue
        qualifiedName: System.Collections.Generic.Queue
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Queue`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Queue{`0}
  SEAN.Util.CappedQueue`1.Capacity*:
    name:
      CSharp:
      - id: SEAN.Util.CappedQueue`1.Capacity*
        name: Capacity
        nameWithType: CappedQueue<T>.Capacity
        qualifiedName: SEAN.Util.CappedQueue<T>.Capacity
      VB:
      - id: SEAN.Util.CappedQueue`1.Capacity*
        name: Capacity
        nameWithType: CappedQueue(Of T).Capacity
        qualifiedName: SEAN.Util.CappedQueue(Of T).Capacity
    isDefinition: true
    commentId: Overload:SEAN.Util.CappedQueue`1.Capacity
  SEAN.Util.CappedQueue`1.#ctor*:
    name:
      CSharp:
      - id: SEAN.Util.CappedQueue`1.#ctor*
        name: CappedQueue
        nameWithType: CappedQueue<T>.CappedQueue
        qualifiedName: SEAN.Util.CappedQueue<T>.CappedQueue
      VB:
      - id: SEAN.Util.CappedQueue`1.#ctor*
        name: CappedQueue
        nameWithType: CappedQueue(Of T).CappedQueue
        qualifiedName: SEAN.Util.CappedQueue(Of T).CappedQueue
    isDefinition: true
    commentId: Overload:SEAN.Util.CappedQueue`1.#ctor
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  SEAN.Util.CappedQueue`1.Enqueue*:
    name:
      CSharp:
      - id: SEAN.Util.CappedQueue`1.Enqueue*
        name: Enqueue
        nameWithType: CappedQueue<T>.Enqueue
        qualifiedName: SEAN.Util.CappedQueue<T>.Enqueue
      VB:
      - id: SEAN.Util.CappedQueue`1.Enqueue*
        name: Enqueue
        nameWithType: CappedQueue(Of T).Enqueue
        qualifiedName: SEAN.Util.CappedQueue(Of T).Enqueue
    isDefinition: true
    commentId: Overload:SEAN.Util.CappedQueue`1.Enqueue
  SEAN.Util.CappedQueue`1:
    name:
      CSharp:
      - id: SEAN.Util.CappedQueue`1
        name: CappedQueue
        nameWithType: CappedQueue
        qualifiedName: SEAN.Util.CappedQueue
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: SEAN.Util.CappedQueue`1
        name: CappedQueue
        nameWithType: CappedQueue
        qualifiedName: SEAN.Util.CappedQueue
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:SEAN.Util.CappedQueue`1
  System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Int32,System.Object}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.Int32,System.Object}}
  Global.TextAsset:
    name:
      CSharp:
      - id: Global.TextAsset
        name: TextAsset
        nameWithType: TextAsset
        qualifiedName: TextAsset
        isExternal: true
      VB:
      - id: Global.TextAsset
        name: TextAsset
        nameWithType: TextAsset
        qualifiedName: TextAsset
        isExternal: true
    isDefinition: true
    commentId: '!:Global.TextAsset'
  SEAN.Util.CSVReader.Read*:
    name:
      CSharp:
      - id: SEAN.Util.CSVReader.Read*
        name: Read
        nameWithType: CSVReader.Read
        qualifiedName: SEAN.Util.CSVReader.Read
      VB:
      - id: SEAN.Util.CSVReader.Read*
        name: Read
        nameWithType: CSVReader.Read
        qualifiedName: SEAN.Util.CSVReader.Read
    isDefinition: true
    commentId: Overload:SEAN.Util.CSVReader.Read
  SEAN.Util.CSVReader:
    name:
      CSharp:
      - id: SEAN.Util.CSVReader
        name: CSVReader
        nameWithType: CSVReader
        qualifiedName: SEAN.Util.CSVReader
      VB:
      - id: SEAN.Util.CSVReader
        name: CSVReader
        nameWithType: CSVReader
        qualifiedName: SEAN.Util.CSVReader
    isDefinition: true
    commentId: T:SEAN.Util.CSVReader
  RosMessageTypes.Geometry.MVector3:
    name:
      CSharp:
      - id: RosMessageTypes.Geometry.MVector3
        name: Geometry.MVector3
        nameWithType: Geometry.MVector3
        qualifiedName: RosMessageTypes.Geometry.MVector3
        isExternal: true
      VB:
      - id: RosMessageTypes.Geometry.MVector3
        name: Geometry.MVector3
        nameWithType: Geometry.MVector3
        qualifiedName: RosMessageTypes.Geometry.MVector3
        isExternal: true
    isDefinition: true
    commentId: '!:RosMessageTypes.Geometry.MVector3'
  Global.Vector3`1:
    name:
      CSharp:
      - id: Global.Vector3`1
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Vector3`1
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.Vector3{FLU}:
    name:
      CSharp:
      - id: Global.Vector3`1
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.FLU
        name: FLU
        nameWithType: FLU
        qualifiedName: FLU
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Vector3`1
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.FLU
        name: FLU
        nameWithType: FLU
        qualifiedName: FLU
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Vector3`1
    commentId: '!:Global.Vector3{FLU}'
  SEAN.Util.Geometry.GetGeometryVector3*:
    name:
      CSharp:
      - id: SEAN.Util.Geometry.GetGeometryVector3*
        name: GetGeometryVector3
        nameWithType: Geometry.GetGeometryVector3
        qualifiedName: SEAN.Util.Geometry.GetGeometryVector3
      VB:
      - id: SEAN.Util.Geometry.GetGeometryVector3*
        name: GetGeometryVector3
        nameWithType: Geometry.GetGeometryVector3
        qualifiedName: SEAN.Util.Geometry.GetGeometryVector3
    isDefinition: true
    commentId: Overload:SEAN.Util.Geometry.GetGeometryVector3
  RosMessageTypes.Geometry.MPoint:
    name:
      CSharp:
      - id: RosMessageTypes.Geometry.MPoint
        name: Geometry.MPoint
        nameWithType: Geometry.MPoint
        qualifiedName: RosMessageTypes.Geometry.MPoint
        isExternal: true
      VB:
      - id: RosMessageTypes.Geometry.MPoint
        name: Geometry.MPoint
        nameWithType: Geometry.MPoint
        qualifiedName: RosMessageTypes.Geometry.MPoint
        isExternal: true
    isDefinition: true
    commentId: '!:RosMessageTypes.Geometry.MPoint'
  SEAN.Util.Geometry.GetGeometryPoint*:
    name:
      CSharp:
      - id: SEAN.Util.Geometry.GetGeometryPoint*
        name: GetGeometryPoint
        nameWithType: Geometry.GetGeometryPoint
        qualifiedName: SEAN.Util.Geometry.GetGeometryPoint
      VB:
      - id: SEAN.Util.Geometry.GetGeometryPoint*
        name: GetGeometryPoint
        nameWithType: Geometry.GetGeometryPoint
        qualifiedName: SEAN.Util.Geometry.GetGeometryPoint
    isDefinition: true
    commentId: Overload:SEAN.Util.Geometry.GetGeometryPoint
  RosMessageTypes.Geometry.MQuaternion:
    name:
      CSharp:
      - id: RosMessageTypes.Geometry.MQuaternion
        name: Geometry.MQuaternion
        nameWithType: Geometry.MQuaternion
        qualifiedName: RosMessageTypes.Geometry.MQuaternion
        isExternal: true
      VB:
      - id: RosMessageTypes.Geometry.MQuaternion
        name: Geometry.MQuaternion
        nameWithType: Geometry.MQuaternion
        qualifiedName: RosMessageTypes.Geometry.MQuaternion
        isExternal: true
    isDefinition: true
    commentId: '!:RosMessageTypes.Geometry.MQuaternion'
  Global.Quaternion`1:
    name:
      CSharp:
      - id: Global.Quaternion`1
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Quaternion`1
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.Quaternion`1'
  Global.Quaternion{FLU}:
    name:
      CSharp:
      - id: Global.Quaternion`1
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.FLU
        name: FLU
        nameWithType: FLU
        qualifiedName: FLU
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.Quaternion`1
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.FLU
        name: FLU
        nameWithType: FLU
        qualifiedName: FLU
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.Quaternion`1
    commentId: '!:Global.Quaternion{FLU}'
  SEAN.Util.Geometry.GetGeometryQuaternion*:
    name:
      CSharp:
      - id: SEAN.Util.Geometry.GetGeometryQuaternion*
        name: GetGeometryQuaternion
        nameWithType: Geometry.GetGeometryQuaternion
        qualifiedName: SEAN.Util.Geometry.GetGeometryQuaternion
      VB:
      - id: SEAN.Util.Geometry.GetGeometryQuaternion*
        name: GetGeometryQuaternion
        nameWithType: Geometry.GetGeometryQuaternion
        qualifiedName: SEAN.Util.Geometry.GetGeometryQuaternion
    isDefinition: true
    commentId: Overload:SEAN.Util.Geometry.GetGeometryQuaternion
  RosMessageTypes.Geometry.MPose:
    name:
      CSharp:
      - id: RosMessageTypes.Geometry.MPose
        name: Geometry.MPose
        nameWithType: Geometry.MPose
        qualifiedName: RosMessageTypes.Geometry.MPose
        isExternal: true
      VB:
      - id: RosMessageTypes.Geometry.MPose
        name: Geometry.MPose
        nameWithType: Geometry.MPose
        qualifiedName: RosMessageTypes.Geometry.MPose
        isExternal: true
    isDefinition: true
    commentId: '!:RosMessageTypes.Geometry.MPose'
  SEAN.Util.Geometry.GetMPose*:
    name:
      CSharp:
      - id: SEAN.Util.Geometry.GetMPose*
        name: GetMPose
        nameWithType: Geometry.GetMPose
        qualifiedName: SEAN.Util.Geometry.GetMPose
      VB:
      - id: SEAN.Util.Geometry.GetMPose*
        name: GetMPose
        nameWithType: Geometry.GetMPose
        qualifiedName: SEAN.Util.Geometry.GetMPose
    isDefinition: true
    commentId: Overload:SEAN.Util.Geometry.GetMPose
  SEAN.Util.Geometry.GroundPlaneDist*:
    name:
      CSharp:
      - id: SEAN.Util.Geometry.GroundPlaneDist*
        name: GroundPlaneDist
        nameWithType: Geometry.GroundPlaneDist
        qualifiedName: SEAN.Util.Geometry.GroundPlaneDist
      VB:
      - id: SEAN.Util.Geometry.GroundPlaneDist*
        name: GroundPlaneDist
        nameWithType: Geometry.GroundPlaneDist
        qualifiedName: SEAN.Util.Geometry.GroundPlaneDist
    isDefinition: true
    commentId: Overload:SEAN.Util.Geometry.GroundPlaneDist
  SEAN.Util.Geometry:
    name:
      CSharp:
      - id: SEAN.Util.Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: SEAN.Util.Geometry
      VB:
      - id: SEAN.Util.Geometry
        name: Geometry
        nameWithType: Geometry
        qualifiedName: SEAN.Util.Geometry
    isDefinition: true
    commentId: T:SEAN.Util.Geometry
  SEAN.Util:
    name:
      CSharp:
      - name: SEAN.Util
        nameWithType: SEAN.Util
        qualifiedName: SEAN.Util
      VB:
      - name: SEAN.Util
        nameWithType: SEAN.Util
        qualifiedName: SEAN.Util
    isDefinition: true
    commentId: N:SEAN.Util
  SEAN.Input.InputPublisher.LocalInput*:
    name:
      CSharp:
      - id: SEAN.Input.InputPublisher.LocalInput*
        name: LocalInput
        nameWithType: InputPublisher.LocalInput
        qualifiedName: SEAN.Input.InputPublisher.LocalInput
      VB:
      - id: SEAN.Input.InputPublisher.LocalInput*
        name: LocalInput
        nameWithType: InputPublisher.LocalInput
        qualifiedName: SEAN.Input.InputPublisher.LocalInput
    isDefinition: true
    commentId: Overload:SEAN.Input.InputPublisher.LocalInput
  SEAN.Input.InputPublisher.Horizontal*:
    name:
      CSharp:
      - id: SEAN.Input.InputPublisher.Horizontal*
        name: Horizontal
        nameWithType: InputPublisher.Horizontal
        qualifiedName: SEAN.Input.InputPublisher.Horizontal
      VB:
      - id: SEAN.Input.InputPublisher.Horizontal*
        name: Horizontal
        nameWithType: InputPublisher.Horizontal
        qualifiedName: SEAN.Input.InputPublisher.Horizontal
    isDefinition: true
    commentId: Overload:SEAN.Input.InputPublisher.Horizontal
  SEAN.Input.InputPublisher.Vertical*:
    name:
      CSharp:
      - id: SEAN.Input.InputPublisher.Vertical*
        name: Vertical
        nameWithType: InputPublisher.Vertical
        qualifiedName: SEAN.Input.InputPublisher.Vertical
      VB:
      - id: SEAN.Input.InputPublisher.Vertical*
        name: Vertical
        nameWithType: InputPublisher.Vertical
        qualifiedName: SEAN.Input.InputPublisher.Vertical
    isDefinition: true
    commentId: Overload:SEAN.Input.InputPublisher.Vertical
  SEAN.Input.InputPublisher.L1*:
    name:
      CSharp:
      - id: SEAN.Input.InputPublisher.L1*
        name: L1
        nameWithType: InputPublisher.L1
        qualifiedName: SEAN.Input.InputPublisher.L1
      VB:
      - id: SEAN.Input.InputPublisher.L1*
        name: L1
        nameWithType: InputPublisher.L1
        qualifiedName: SEAN.Input.InputPublisher.L1
    isDefinition: true
    commentId: Overload:SEAN.Input.InputPublisher.L1
  RosMessageTypes.Geometry.MTwist:
    name:
      CSharp:
      - id: RosMessageTypes.Geometry.MTwist
        name: Geometry.MTwist
        nameWithType: Geometry.MTwist
        qualifiedName: RosMessageTypes.Geometry.MTwist
        isExternal: true
      VB:
      - id: RosMessageTypes.Geometry.MTwist
        name: Geometry.MTwist
        nameWithType: Geometry.MTwist
        qualifiedName: RosMessageTypes.Geometry.MTwist
        isExternal: true
    isDefinition: true
  SEAN.Input.InputPublisher.CmdVel*:
    name:
      CSharp:
      - id: SEAN.Input.InputPublisher.CmdVel*
        name: CmdVel
        nameWithType: InputPublisher.CmdVel
        qualifiedName: SEAN.Input.InputPublisher.CmdVel
      VB:
      - id: SEAN.Input.InputPublisher.CmdVel*
        name: CmdVel
        nameWithType: InputPublisher.CmdVel
        qualifiedName: SEAN.Input.InputPublisher.CmdVel
    isDefinition: true
    commentId: Overload:SEAN.Input.InputPublisher.CmdVel
  SEAN.Input.GUIInputVisualization:
    name:
      CSharp:
      - id: SEAN.Input.GUIInputVisualization
        name: GUIInputVisualization
        nameWithType: GUIInputVisualization
        qualifiedName: SEAN.Input.GUIInputVisualization
      VB:
      - id: SEAN.Input.GUIInputVisualization
        name: GUIInputVisualization
        nameWithType: GUIInputVisualization
        qualifiedName: SEAN.Input.GUIInputVisualization
    isDefinition: true
    commentId: T:SEAN.Input.GUIInputVisualization
  SEAN.Situations.Situation.name*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.name*
        name: name
        nameWithType: Situation.name
        qualifiedName: SEAN.Situations.Situation.name
      VB:
      - id: SEAN.Situations.Situation.name*
        name: name
        nameWithType: Situation.name
        qualifiedName: SEAN.Situations.Situation.name
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.name
  SEAN.Situations.Situation.idx*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.idx*
        name: idx
        nameWithType: Situation.idx
        qualifiedName: SEAN.Situations.Situation.idx
      VB:
      - id: SEAN.Situations.Situation.idx*
        name: idx
        nameWithType: Situation.idx
        qualifiedName: SEAN.Situations.Situation.idx
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.idx
  SEAN.Situations.Situation.val*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.val*
        name: val
        nameWithType: Situation.val
        qualifiedName: SEAN.Situations.Situation.val
      VB:
      - id: SEAN.Situations.Situation.val*
        name: val
        nameWithType: Situation.val
        qualifiedName: SEAN.Situations.Situation.val
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.val
  SEAN.Situations.Situation.ToString*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.ToString*
        name: ToString
        nameWithType: Situation.ToString
        qualifiedName: SEAN.Situations.Situation.ToString
      VB:
      - id: SEAN.Situations.Situation.ToString*
        name: ToString
        nameWithType: Situation.ToString
        qualifiedName: SEAN.Situations.Situation.ToString
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.ToString
  SEAN.Situations.Situation:
    name:
      CSharp:
      - id: SEAN.Situations.Situation
        name: Situation
        nameWithType: Situation
        qualifiedName: SEAN.Situations.Situation
      VB:
      - id: SEAN.Situations.Situation
        name: Situation
        nameWithType: Situation
        qualifiedName: SEAN.Situations.Situation
    isDefinition: true
    parent: SEAN.Situations
    commentId: T:SEAN.Situations.Situation
  SEAN.Situations.Situation.CrossPath*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.CrossPath*
        name: CrossPath
        nameWithType: Situation.CrossPath
        qualifiedName: SEAN.Situations.Situation.CrossPath
      VB:
      - id: SEAN.Situations.Situation.CrossPath*
        name: CrossPath
        nameWithType: Situation.CrossPath
        qualifiedName: SEAN.Situations.Situation.CrossPath
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.CrossPath
  SEAN.Situations.Situation.Empty*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.Empty*
        name: Empty
        nameWithType: Situation.Empty
        qualifiedName: SEAN.Situations.Situation.Empty
      VB:
      - id: SEAN.Situations.Situation.Empty*
        name: Empty
        nameWithType: Situation.Empty
        qualifiedName: SEAN.Situations.Situation.Empty
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.Empty
  SEAN.Situations.Situation.JoinGroup*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.JoinGroup*
        name: JoinGroup
        nameWithType: Situation.JoinGroup
        qualifiedName: SEAN.Situations.Situation.JoinGroup
      VB:
      - id: SEAN.Situations.Situation.JoinGroup*
        name: JoinGroup
        nameWithType: Situation.JoinGroup
        qualifiedName: SEAN.Situations.Situation.JoinGroup
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.JoinGroup
  SEAN.Situations.Situation.LeaveGroup*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.LeaveGroup*
        name: LeaveGroup
        nameWithType: Situation.LeaveGroup
        qualifiedName: SEAN.Situations.Situation.LeaveGroup
      VB:
      - id: SEAN.Situations.Situation.LeaveGroup*
        name: LeaveGroup
        nameWithType: Situation.LeaveGroup
        qualifiedName: SEAN.Situations.Situation.LeaveGroup
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.LeaveGroup
  SEAN.Situations.Situation.DownPath*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.DownPath*
        name: DownPath
        nameWithType: Situation.DownPath
        qualifiedName: SEAN.Situations.Situation.DownPath
      VB:
      - id: SEAN.Situations.Situation.DownPath*
        name: DownPath
        nameWithType: Situation.DownPath
        qualifiedName: SEAN.Situations.Situation.DownPath
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.DownPath
  SEAN.Situations.Situation.op_Implicit*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.op_Implicit*
        name: Implicit
        nameWithType: Situation.Implicit
        qualifiedName: SEAN.Situations.Situation.Implicit
      VB:
      - id: SEAN.Situations.Situation.op_Implicit*
        name: Widening
        nameWithType: Situation.Widening
        qualifiedName: SEAN.Situations.Situation.Widening
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.op_Implicit
  SEAN.Situations.Situation.Set*:
    name:
      CSharp:
      - id: SEAN.Situations.Situation.Set*
        name: Set
        nameWithType: Situation.Set
        qualifiedName: SEAN.Situations.Situation.Set
      VB:
      - id: SEAN.Situations.Situation.Set*
        name: Set
        nameWithType: Situation.Set
        qualifiedName: SEAN.Situations.Situation.Set
    isDefinition: true
    commentId: Overload:SEAN.Situations.Situation.Set
  SEAN.Situations.Trajectory.TrackedTrajectory:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory
        name: TrackedTrajectory
        nameWithType: TrackedTrajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory
        name: TrackedTrajectory
        nameWithType: TrackedTrajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory
    isDefinition: true
    parent: SEAN.Situations.Trajectory
    commentId: T:SEAN.Situations.Trajectory.TrackedTrajectory
  SEAN.Situations.Robot.trajectory*:
    name:
      CSharp:
      - id: SEAN.Situations.Robot.trajectory*
        name: trajectory
        nameWithType: Robot.trajectory
        qualifiedName: SEAN.Situations.Robot.trajectory
      VB:
      - id: SEAN.Situations.Robot.trajectory*
        name: trajectory
        nameWithType: Robot.trajectory
        qualifiedName: SEAN.Situations.Robot.trajectory
    isDefinition: true
    commentId: Overload:SEAN.Situations.Robot.trajectory
  SEAN.Situations.Robot.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Robot.Start*
        name: Start
        nameWithType: Robot.Start
        qualifiedName: SEAN.Situations.Robot.Start
      VB:
      - id: SEAN.Situations.Robot.Start*
        name: Start
        nameWithType: Robot.Start
        qualifiedName: SEAN.Situations.Robot.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Robot.Start
  SEAN.Situations.Robot.transform*:
    name:
      CSharp:
      - id: SEAN.Situations.Robot.transform*
        name: transform
        nameWithType: Robot.transform
        qualifiedName: SEAN.Situations.Robot.transform
      VB:
      - id: SEAN.Situations.Robot.transform*
        name: transform
        nameWithType: Robot.transform
        qualifiedName: SEAN.Situations.Robot.transform
    isDefinition: true
    commentId: Overload:SEAN.Situations.Robot.transform
  SEAN.Situations.Robot.position*:
    name:
      CSharp:
      - id: SEAN.Situations.Robot.position*
        name: position
        nameWithType: Robot.position
        qualifiedName: SEAN.Situations.Robot.position
      VB:
      - id: SEAN.Situations.Robot.position*
        name: position
        nameWithType: Robot.position
        qualifiedName: SEAN.Situations.Robot.position
    isDefinition: true
    commentId: Overload:SEAN.Situations.Robot.position
  SEAN.Situations.Robot.rotation*:
    name:
      CSharp:
      - id: SEAN.Situations.Robot.rotation*
        name: rotation
        nameWithType: Robot.rotation
        qualifiedName: SEAN.Situations.Robot.rotation
      VB:
      - id: SEAN.Situations.Robot.rotation*
        name: rotation
        nameWithType: Robot.rotation
        qualifiedName: SEAN.Situations.Robot.rotation
    isDefinition: true
    commentId: Overload:SEAN.Situations.Robot.rotation
  SEAN.Situations.Robot.ToString*:
    name:
      CSharp:
      - id: SEAN.Situations.Robot.ToString*
        name: ToString
        nameWithType: Robot.ToString
        qualifiedName: SEAN.Situations.Robot.ToString
      VB:
      - id: SEAN.Situations.Robot.ToString*
        name: ToString
        nameWithType: Robot.ToString
        qualifiedName: SEAN.Situations.Robot.ToString
    isDefinition: true
    commentId: Overload:SEAN.Situations.Robot.ToString
  SEAN.Situations.GUISituationVisualization:
    name:
      CSharp:
      - id: SEAN.Situations.GUISituationVisualization
        name: GUISituationVisualization
        nameWithType: GUISituationVisualization
        qualifiedName: SEAN.Situations.GUISituationVisualization
      VB:
      - id: SEAN.Situations.GUISituationVisualization
        name: GUISituationVisualization
        nameWithType: GUISituationVisualization
        qualifiedName: SEAN.Situations.GUISituationVisualization
    isDefinition: true
    commentId: T:SEAN.Situations.GUISituationVisualization
  SEAN.Situations.Agents.AgentMover.pause*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.AgentMover.pause*
        name: pause
        nameWithType: AgentMover.pause
        qualifiedName: SEAN.Situations.Agents.AgentMover.pause
      VB:
      - id: SEAN.Situations.Agents.AgentMover.pause*
        name: pause
        nameWithType: AgentMover.pause
        qualifiedName: SEAN.Situations.Agents.AgentMover.pause
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.AgentMover.pause
  SEAN.Situations.Agents.AgentMover.Move*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.AgentMover.Move*
        name: Move
        nameWithType: AgentMover.Move
        qualifiedName: SEAN.Situations.Agents.AgentMover.Move
      VB:
      - id: SEAN.Situations.Agents.AgentMover.Move*
        name: Move
        nameWithType: AgentMover.Move
        qualifiedName: SEAN.Situations.Agents.AgentMover.Move
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.AgentMover.Move
  SEAN.Situations.Agents.AgentMover.PauseAnimatorPed*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed*
        name: PauseAnimatorPed
        nameWithType: AgentMover.PauseAnimatorPed
        qualifiedName: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed
      VB:
      - id: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed*
        name: PauseAnimatorPed
        nameWithType: AgentMover.PauseAnimatorPed
        qualifiedName: SEAN.Situations.Agents.AgentMover.PauseAnimatorPed
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.AgentMover.PauseAnimatorPed
  SEAN.Situations.Agents.AgentMover.OnAnimatorMove*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.AgentMover.OnAnimatorMove*
        name: OnAnimatorMove
        nameWithType: AgentMover.OnAnimatorMove
        qualifiedName: SEAN.Situations.Agents.AgentMover.OnAnimatorMove
      VB:
      - id: SEAN.Situations.Agents.AgentMover.OnAnimatorMove*
        name: OnAnimatorMove
        nameWithType: AgentMover.OnAnimatorMove
        qualifiedName: SEAN.Situations.Agents.AgentMover.OnAnimatorMove
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.AgentMover.OnAnimatorMove
  SEAN.Situations.Agents.AgentMover:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.AgentMover
        name: AgentMover
        nameWithType: AgentMover
        qualifiedName: SEAN.Situations.Agents.AgentMover
      VB:
      - id: SEAN.Situations.Agents.AgentMover
        name: AgentMover
        nameWithType: AgentMover
        qualifiedName: SEAN.Situations.Agents.AgentMover
    isDefinition: true
    commentId: T:SEAN.Situations.Agents.AgentMover
  SEAN.Situations.Agents.SocialForce.#ctor*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.SocialForce.#ctor*
        name: SocialForce
        nameWithType: SocialForce.SocialForce
        qualifiedName: SEAN.Situations.Agents.SocialForce.SocialForce
      VB:
      - id: SEAN.Situations.Agents.SocialForce.#ctor*
        name: SocialForce
        nameWithType: SocialForce.SocialForce
        qualifiedName: SEAN.Situations.Agents.SocialForce.SocialForce
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.SocialForce.#ctor
  SEAN.Situations.Agents.SocialForce.pauseable*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.SocialForce.pauseable*
        name: pauseable
        nameWithType: SocialForce.pauseable
        qualifiedName: SEAN.Situations.Agents.SocialForce.pauseable
      VB:
      - id: SEAN.Situations.Agents.SocialForce.pauseable*
        name: pauseable
        nameWithType: SocialForce.pauseable
        qualifiedName: SEAN.Situations.Agents.SocialForce.pauseable
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.SocialForce.pauseable
  SEAN.Situations.Agents.SocialForce:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.SocialForce
        name: SocialForce
        nameWithType: SocialForce
        qualifiedName: SEAN.Situations.Agents.SocialForce
      VB:
      - id: SEAN.Situations.Agents.SocialForce
        name: SocialForce
        nameWithType: SocialForce
        qualifiedName: SEAN.Situations.Agents.SocialForce
    isDefinition: true
    commentId: T:SEAN.Situations.Agents.SocialForce
  SEAN.Situations.Agents:
    name:
      CSharp:
      - name: SEAN.Situations.Agents
        nameWithType: SEAN.Situations.Agents
        qualifiedName: SEAN.Situations.Agents
      VB:
      - name: SEAN.Situations.Agents
        nameWithType: SEAN.Situations.Agents
        qualifiedName: SEAN.Situations.Agents
    isDefinition: true
    commentId: N:SEAN.Situations.Agents
  SEAN.Situations.Agents.HandcraftedAgentManager:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager
        name: HandcraftedAgentManager
        nameWithType: HandcraftedAgentManager
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager
      VB:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager
        name: HandcraftedAgentManager
        nameWithType: HandcraftedAgentManager
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager
    isDefinition: true
    parent: SEAN.Situations.Agents
    commentId: T:SEAN.Situations.Agents.HandcraftedAgentManager
  SEAN.Situations.Agents.HandcraftedAgentManager.instance*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager.instance*
        name: instance
        nameWithType: HandcraftedAgentManager.instance
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager.instance
      VB:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager.instance*
        name: instance
        nameWithType: HandcraftedAgentManager.instance
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager.instance
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.HandcraftedAgentManager.instance
  System.Collections.Generic.List{IVI.INavigable}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IVI.INavigable
        name: INavigable
        nameWithType: INavigable
        qualifiedName: IVI.INavigable
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IVI.INavigable}
  System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedGroup}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SEAN.Situations.Trajectory.TrackedGroup
        name: TrackedGroup
        nameWithType: TrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SEAN.Situations.Trajectory.TrackedGroup
        name: TrackedGroup
        nameWithType: TrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedGroup}
  Global.Pose:
    name:
      CSharp:
      - id: Global.Pose
        name: Pose
        nameWithType: Pose
        qualifiedName: Pose
        isExternal: true
      VB:
      - id: Global.Pose
        name: Pose
        nameWithType: Pose
        qualifiedName: Pose
        isExternal: true
    isDefinition: true
  SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name*
        name: scenario_name
        nameWithType: HandcraftedAgentManager.scenario_name
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name
      VB:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name*
        name: scenario_name
        nameWithType: HandcraftedAgentManager.scenario_name
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.HandcraftedAgentManager.scenario_name
  SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario*:
    name:
      CSharp:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario*
        name: NewScenario
        nameWithType: HandcraftedAgentManager.NewScenario
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario
      VB:
      - id: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario*
        name: NewScenario
        nameWithType: HandcraftedAgentManager.NewScenario
        qualifiedName: SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario
    isDefinition: true
    commentId: Overload:SEAN.Situations.Agents.HandcraftedAgentManager.NewScenario
  SEAN.Situations.Classifier.SituationClassifier.ClassifierType*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.ClassifierType*
        name: ClassifierType
        nameWithType: SituationClassifier.ClassifierType
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.ClassifierType*
        name: ClassifierType
        nameWithType: SituationClassifier.ClassifierType
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.ClassifierType
  SEAN.Situations.Classifier.SituationClassifier.empty*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.empty*
        name: empty
        nameWithType: SituationClassifier.empty
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.empty
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.empty*
        name: empty
        nameWithType: SituationClassifier.empty
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.empty
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.empty
  SEAN.Situations.Classifier.SituationClassifier.downPath*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.downPath*
        name: downPath
        nameWithType: SituationClassifier.downPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.downPath
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.downPath*
        name: downPath
        nameWithType: SituationClassifier.downPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.downPath
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.downPath
  SEAN.Situations.Classifier.SituationClassifier.crossPath*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.crossPath*
        name: crossPath
        nameWithType: SituationClassifier.crossPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.crossPath
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.crossPath*
        name: crossPath
        nameWithType: SituationClassifier.crossPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.crossPath
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.crossPath
  SEAN.Situations.Classifier.SituationClassifier.leaveGroup*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.leaveGroup*
        name: leaveGroup
        nameWithType: SituationClassifier.leaveGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.leaveGroup*
        name: leaveGroup
        nameWithType: SituationClassifier.leaveGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.leaveGroup
  SEAN.Situations.Classifier.SituationClassifier.joinGroup*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.joinGroup*
        name: joinGroup
        nameWithType: SituationClassifier.joinGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.joinGroup
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.joinGroup*
        name: joinGroup
        nameWithType: SituationClassifier.joinGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.joinGroup
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.joinGroup
  SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime*
        name: lastUpdateTime
        nameWithType: SituationClassifier.lastUpdateTime
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime*
        name: lastUpdateTime
        nameWithType: SituationClassifier.lastUpdateTime
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
  SEAN.Situations.Classifier.SituationClassifier.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.Start*
        name: Start
        nameWithType: SituationClassifier.Start
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Start
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.Start*
        name: Start
        nameWithType: SituationClassifier.Start
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.Start
  SEAN.Situations.Classifier.SituationClassifier.Publish*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.Publish*
        name: Publish
        nameWithType: SituationClassifier.Publish
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Publish
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.Publish*
        name: Publish
        nameWithType: SituationClassifier.Publish
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Publish
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationClassifier.Publish
  SEAN.Situations.Classifier.SituationClassifier:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier
        name: SituationClassifier
        nameWithType: SituationClassifier
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier
        name: SituationClassifier
        nameWithType: SituationClassifier
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier
    isDefinition: true
    parent: SEAN.Situations.Classifier
    commentId: T:SEAN.Situations.Classifier.SituationClassifier
  SEAN.Situations.Classifier:
    name:
      CSharp:
      - name: SEAN.Situations.Classifier
        nameWithType: SEAN.Situations.Classifier
        qualifiedName: SEAN.Situations.Classifier
      VB:
      - name: SEAN.Situations.Classifier
        nameWithType: SEAN.Situations.Classifier
        qualifiedName: SEAN.Situations.Classifier
    isDefinition: true
    commentId: N:SEAN.Situations.Classifier
  SEAN.Situations.Classifier.SituationClassifier.ros:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.ros
        name: ros
        nameWithType: SituationClassifier.ros
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.ros
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.ros
        name: ros
        nameWithType: SituationClassifier.ros
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.ros
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: F:SEAN.Situations.Classifier.SituationClassifier.ros
  SEAN.Situations.Classifier.SituationClassifier.sean:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.sean
        name: sean
        nameWithType: SituationClassifier.sean
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.sean
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.sean
        name: sean
        nameWithType: SituationClassifier.sean
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.sean
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: F:SEAN.Situations.Classifier.SituationClassifier.sean
  SEAN.Situations.Classifier.SituationClassifier.BaseTopic:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.BaseTopic
        name: BaseTopic
        nameWithType: SituationClassifier.BaseTopic
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.BaseTopic
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.BaseTopic
        name: BaseTopic
        nameWithType: SituationClassifier.BaseTopic
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.BaseTopic
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: F:SEAN.Situations.Classifier.SituationClassifier.BaseTopic
  SEAN.Situations.Classifier.SituationClassifier.empty:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.empty
        name: empty
        nameWithType: SituationClassifier.empty
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.empty
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.empty
        name: empty
        nameWithType: SituationClassifier.empty
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.empty
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: P:SEAN.Situations.Classifier.SituationClassifier.empty
  SEAN.Situations.Classifier.SituationClassifier.downPath:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.downPath
        name: downPath
        nameWithType: SituationClassifier.downPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.downPath
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.downPath
        name: downPath
        nameWithType: SituationClassifier.downPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.downPath
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: P:SEAN.Situations.Classifier.SituationClassifier.downPath
  SEAN.Situations.Classifier.SituationClassifier.crossPath:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.crossPath
        name: crossPath
        nameWithType: SituationClassifier.crossPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.crossPath
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.crossPath
        name: crossPath
        nameWithType: SituationClassifier.crossPath
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.crossPath
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: P:SEAN.Situations.Classifier.SituationClassifier.crossPath
  SEAN.Situations.Classifier.SituationClassifier.leaveGroup:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
        name: leaveGroup
        nameWithType: SituationClassifier.leaveGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
        name: leaveGroup
        nameWithType: SituationClassifier.leaveGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.leaveGroup
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: P:SEAN.Situations.Classifier.SituationClassifier.leaveGroup
  SEAN.Situations.Classifier.SituationClassifier.joinGroup:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.joinGroup
        name: joinGroup
        nameWithType: SituationClassifier.joinGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.joinGroup
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.joinGroup
        name: joinGroup
        nameWithType: SituationClassifier.joinGroup
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.joinGroup
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: P:SEAN.Situations.Classifier.SituationClassifier.joinGroup
  SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
        name: lastUpdateTime
        nameWithType: SituationClassifier.lastUpdateTime
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
        name: lastUpdateTime
        nameWithType: SituationClassifier.lastUpdateTime
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: P:SEAN.Situations.Classifier.SituationClassifier.lastUpdateTime
  SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation):
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
        name: Publish
        nameWithType: SituationClassifier.Publish
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Publish
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: SEAN.Situations.Situation
        name: Situation
        nameWithType: Situation
        qualifiedName: SEAN.Situations.Situation
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
        name: Publish
        nameWithType: SituationClassifier.Publish
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Publish
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: SEAN.Situations.Situation
        name: Situation
        nameWithType: Situation
        qualifiedName: SEAN.Situations.Situation
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: M:SEAN.Situations.Classifier.SituationClassifier.Publish(SEAN.Situations.Situation)
  SEAN.Situations.Classifier.SituationClassifier.ClassifierType:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
        name: ClassifierType
        nameWithType: SituationClassifier.ClassifierType
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
        name: ClassifierType
        nameWithType: SituationClassifier.ClassifierType
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.ClassifierType
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: P:SEAN.Situations.Classifier.SituationClassifier.ClassifierType
  SEAN.Situations.Classifier.SituationRuleBased.ClassifierType*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType*
        name: ClassifierType
        nameWithType: SituationRuleBased.ClassifierType
        qualifiedName: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType
      VB:
      - id: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType*
        name: ClassifierType
        nameWithType: SituationRuleBased.ClassifierType
        qualifiedName: SEAN.Situations.Classifier.SituationRuleBased.ClassifierType
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationRuleBased.ClassifierType
  SEAN.Situations.Classifier.SituationClassifier.Start:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationClassifier.Start
        name: Start
        nameWithType: SituationClassifier.Start
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Situations.Classifier.SituationClassifier.Start
        name: Start
        nameWithType: SituationClassifier.Start
        qualifiedName: SEAN.Situations.Classifier.SituationClassifier.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Situations.Classifier.SituationClassifier
    commentId: M:SEAN.Situations.Classifier.SituationClassifier.Start
  SEAN.Situations.Classifier.SituationRuleBased.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationRuleBased.Start*
        name: Start
        nameWithType: SituationRuleBased.Start
        qualifiedName: SEAN.Situations.Classifier.SituationRuleBased.Start
      VB:
      - id: SEAN.Situations.Classifier.SituationRuleBased.Start*
        name: Start
        nameWithType: SituationRuleBased.Start
        qualifiedName: SEAN.Situations.Classifier.SituationRuleBased.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Classifier.SituationRuleBased.Start
  SEAN.Situations.Classifier.SituationRuleBased:
    name:
      CSharp:
      - id: SEAN.Situations.Classifier.SituationRuleBased
        name: SituationRuleBased
        nameWithType: SituationRuleBased
        qualifiedName: SEAN.Situations.Classifier.SituationRuleBased
      VB:
      - id: SEAN.Situations.Classifier.SituationRuleBased
        name: SituationRuleBased
        nameWithType: SituationRuleBased
        qualifiedName: SEAN.Situations.Classifier.SituationRuleBased
    isDefinition: true
    commentId: T:SEAN.Situations.Classifier.SituationRuleBased
  SEAN.Situations.Scenario.BaseScenario.pedestrianControl:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.pedestrianControl
        name: pedestrianControl
        nameWithType: BaseScenario.pedestrianControl
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.pedestrianControl
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.pedestrianControl
        name: pedestrianControl
        nameWithType: BaseScenario.pedestrianControl
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.pedestrianControl
    isDefinition: true
    parent: SEAN.Situations.Scenario.BaseScenario
    commentId: F:SEAN.Situations.Scenario.BaseScenario.pedestrianControl
  SEAN.Situations.Scenario.BaseScenario._name:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario._name
        name: _name
        nameWithType: BaseScenario._name
        qualifiedName: SEAN.Situations.Scenario.BaseScenario._name
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario._name
        name: _name
        nameWithType: BaseScenario._name
        qualifiedName: SEAN.Situations.Scenario.BaseScenario._name
    isDefinition: true
    parent: SEAN.Situations.Scenario.BaseScenario
    commentId: F:SEAN.Situations.Scenario.BaseScenario._name
  SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String):
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
        name: SetScenarioName
        nameWithType: BaseScenario.SetScenarioName
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.SetScenarioName
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
        name: SetScenarioName
        nameWithType: BaseScenario.SetScenarioName
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.SetScenarioName
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Situations.Scenario.BaseScenario
    commentId: M:SEAN.Situations.Scenario.BaseScenario.SetScenarioName(System.String)
  SEAN.Situations.Scenario.BaseScenario.scenario_name:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.scenario_name
        name: scenario_name
        nameWithType: BaseScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.scenario_name
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.scenario_name
        name: scenario_name
        nameWithType: BaseScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.scenario_name
    isDefinition: true
    parent: SEAN.Situations.Scenario.BaseScenario
    commentId: P:SEAN.Situations.Scenario.BaseScenario.scenario_name
  SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name*
        name: scenario_name
        nameWithType: HandcraftedSocialSituations.scenario_name
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name
      VB:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name*
        name: scenario_name
        nameWithType: HandcraftedSocialSituations.scenario_name
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.HandcraftedSocialSituations.scenario_name
  SEAN.Situations.Scenario.HandcraftedSocialSituations.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start*
        name: Start
        nameWithType: HandcraftedSocialSituations.Start
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start
      VB:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start*
        name: Start
        nameWithType: HandcraftedSocialSituations.Start
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.HandcraftedSocialSituations.Start
  SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario*
        name: NewScenario
        nameWithType: HandcraftedSocialSituations.NewScenario
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario
      VB:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario*
        name: NewScenario
        nameWithType: HandcraftedSocialSituations.NewScenario
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.HandcraftedSocialSituations.NewScenario
  SEAN.Situations.Trajectory.TrackedGroup[]:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup
        name: TrackedGroup
        nameWithType: TrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup
        name: TrackedGroup
        nameWithType: TrackedGroup
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  SEAN.Situations.Scenario.BaseScenario.groups:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.groups
        name: groups
        nameWithType: BaseScenario.groups
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.groups
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.groups
        name: groups
        nameWithType: BaseScenario.groups
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.groups
    isDefinition: true
    parent: SEAN.Situations.Scenario.BaseScenario
    commentId: P:SEAN.Situations.Scenario.BaseScenario.groups
  SEAN.Situations.Scenario.HandcraftedSocialSituations.groups*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups*
        name: groups
        nameWithType: HandcraftedSocialSituations.groups
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups
      VB:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups*
        name: groups
        nameWithType: HandcraftedSocialSituations.groups
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.groups
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.HandcraftedSocialSituations.groups
  SEAN.Situations.Trajectory.TrackedAgent[]:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedAgent
        name: TrackedAgent
        nameWithType: TrackedAgent
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: SEAN.Situations.Trajectory.TrackedAgent
        name: TrackedAgent
        nameWithType: TrackedAgent
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  SEAN.Situations.Scenario.BaseScenario.agents:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.agents
        name: agents
        nameWithType: BaseScenario.agents
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.agents
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.agents
        name: agents
        nameWithType: BaseScenario.agents
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.agents
    isDefinition: true
    parent: SEAN.Situations.Scenario.BaseScenario
    commentId: P:SEAN.Situations.Scenario.BaseScenario.agents
  SEAN.Situations.Scenario.HandcraftedSocialSituations.agents*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents*
        name: agents
        nameWithType: HandcraftedSocialSituations.agents
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents
      VB:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents*
        name: agents
        nameWithType: HandcraftedSocialSituations.agents
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations.agents
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.HandcraftedSocialSituations.agents
  SEAN.Situations.Scenario.HandcraftedSocialSituations:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations
        name: HandcraftedSocialSituations
        nameWithType: HandcraftedSocialSituations
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations
      VB:
      - id: SEAN.Situations.Scenario.HandcraftedSocialSituations
        name: HandcraftedSocialSituations
        nameWithType: HandcraftedSocialSituations
        qualifiedName: SEAN.Situations.Scenario.HandcraftedSocialSituations
    isDefinition: true
    commentId: T:SEAN.Situations.Scenario.HandcraftedSocialSituations
  SEAN.Situations.Scenario.GroupPublisher:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.GroupPublisher
        name: GroupPublisher
        nameWithType: GroupPublisher
        qualifiedName: SEAN.Situations.Scenario.GroupPublisher
      VB:
      - id: SEAN.Situations.Scenario.GroupPublisher
        name: GroupPublisher
        nameWithType: GroupPublisher
        qualifiedName: SEAN.Situations.Scenario.GroupPublisher
    isDefinition: true
    commentId: T:SEAN.Situations.Scenario.GroupPublisher
  SEAN.Situations.Scenario.BaseScenario.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.Start*
        name: Start
        nameWithType: BaseScenario.Start
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.Start
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.Start*
        name: Start
        nameWithType: BaseScenario.Start
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.BaseScenario.Start
  SEAN.Situations.Scenario.BaseScenario.scenario_name*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.scenario_name*
        name: scenario_name
        nameWithType: BaseScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.scenario_name
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.scenario_name*
        name: scenario_name
        nameWithType: BaseScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.scenario_name
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.BaseScenario.scenario_name
  SEAN.Situations.Scenario.BaseScenario.SetScenarioName*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.SetScenarioName*
        name: SetScenarioName
        nameWithType: BaseScenario.SetScenarioName
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.SetScenarioName
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.SetScenarioName*
        name: SetScenarioName
        nameWithType: BaseScenario.SetScenarioName
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.SetScenarioName
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.BaseScenario.SetScenarioName
  SEAN.Situations.Scenario.BaseScenario.groups*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.groups*
        name: groups
        nameWithType: BaseScenario.groups
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.groups
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.groups*
        name: groups
        nameWithType: BaseScenario.groups
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.groups
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.BaseScenario.groups
  SEAN.Situations.Scenario.BaseScenario.agents*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.BaseScenario.agents*
        name: agents
        nameWithType: BaseScenario.agents
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.agents
      VB:
      - id: SEAN.Situations.Scenario.BaseScenario.agents*
        name: agents
        nameWithType: BaseScenario.agents
        qualifiedName: SEAN.Situations.Scenario.BaseScenario.agents
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.BaseScenario.agents
  SEAN.Situations.Scenario.PlaybackScenario.scenario_name*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.PlaybackScenario.scenario_name*
        name: scenario_name
        nameWithType: PlaybackScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.scenario_name
      VB:
      - id: SEAN.Situations.Scenario.PlaybackScenario.scenario_name*
        name: scenario_name
        nameWithType: PlaybackScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.scenario_name
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.PlaybackScenario.scenario_name
  SEAN.Situations.Scenario.PlaybackScenario.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.PlaybackScenario.Start*
        name: Start
        nameWithType: PlaybackScenario.Start
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.Start
      VB:
      - id: SEAN.Situations.Scenario.PlaybackScenario.Start*
        name: Start
        nameWithType: PlaybackScenario.Start
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.PlaybackScenario.Start
  SEAN.Situations.Scenario.PlaybackScenario.groups*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.PlaybackScenario.groups*
        name: groups
        nameWithType: PlaybackScenario.groups
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.groups
      VB:
      - id: SEAN.Situations.Scenario.PlaybackScenario.groups*
        name: groups
        nameWithType: PlaybackScenario.groups
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.groups
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.PlaybackScenario.groups
  SEAN.Situations.Scenario.PlaybackScenario.agents*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.PlaybackScenario.agents*
        name: agents
        nameWithType: PlaybackScenario.agents
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.agents
      VB:
      - id: SEAN.Situations.Scenario.PlaybackScenario.agents*
        name: agents
        nameWithType: PlaybackScenario.agents
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario.agents
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.PlaybackScenario.agents
  SEAN.Situations.Scenario.PlaybackScenario:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.PlaybackScenario
        name: PlaybackScenario
        nameWithType: PlaybackScenario
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario
      VB:
      - id: SEAN.Situations.Scenario.PlaybackScenario
        name: PlaybackScenario
        nameWithType: PlaybackScenario
        qualifiedName: SEAN.Situations.Scenario.PlaybackScenario
    isDefinition: true
    commentId: T:SEAN.Situations.Scenario.PlaybackScenario
  SEAN.Situations.Scenario.LabStudyScenario.scenario_name*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario.scenario_name*
        name: scenario_name
        nameWithType: LabStudyScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.scenario_name
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario.scenario_name*
        name: scenario_name
        nameWithType: LabStudyScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.scenario_name
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.LabStudyScenario.scenario_name
  SEAN.Situations.Scenario.LabStudyScenario.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario.Start*
        name: Start
        nameWithType: LabStudyScenario.Start
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.Start
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario.Start*
        name: Start
        nameWithType: LabStudyScenario.Start
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.LabStudyScenario.Start
  System.Collections.Generic.Dictionary{System.String,GameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.String,GameObject}
  SEAN.Situations.Scenario.LabStudyScenario.positions*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario.positions*
        name: positions
        nameWithType: LabStudyScenario.positions
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.positions
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario.positions*
        name: positions
        nameWithType: LabStudyScenario.positions
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.positions
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.LabStudyScenario.positions
  SEAN.Situations.Scenario.LabStudyScenario.AgentStart*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario.AgentStart*
        name: AgentStart
        nameWithType: LabStudyScenario.AgentStart
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.AgentStart
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario.AgentStart*
        name: AgentStart
        nameWithType: LabStudyScenario.AgentStart
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.AgentStart
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.LabStudyScenario.AgentStart
  SEAN.Situations.Scenario.LabStudyScenario.AgentGoal*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal*
        name: AgentGoal
        nameWithType: LabStudyScenario.AgentGoal
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal*
        name: AgentGoal
        nameWithType: LabStudyScenario.AgentGoal
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.AgentGoal
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.LabStudyScenario.AgentGoal
  SEAN.Situations.Scenario.LabStudyScenario.groups*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario.groups*
        name: groups
        nameWithType: LabStudyScenario.groups
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.groups
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario.groups*
        name: groups
        nameWithType: LabStudyScenario.groups
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.groups
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.LabStudyScenario.groups
  SEAN.Situations.Scenario.LabStudyScenario.agents*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario.agents*
        name: agents
        nameWithType: LabStudyScenario.agents
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.agents
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario.agents*
        name: agents
        nameWithType: LabStudyScenario.agents
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario.agents
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.LabStudyScenario.agents
  SEAN.Situations.Scenario.LabStudyScenario:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.LabStudyScenario
        name: LabStudyScenario
        nameWithType: LabStudyScenario
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario
      VB:
      - id: SEAN.Situations.Scenario.LabStudyScenario
        name: LabStudyScenario
        nameWithType: LabStudyScenario
        qualifiedName: SEAN.Situations.Scenario.LabStudyScenario
    isDefinition: true
    commentId: T:SEAN.Situations.Scenario.LabStudyScenario
  SEAN.Situations.Scenario.ScenarioPublisher:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.ScenarioPublisher
        name: ScenarioPublisher
        nameWithType: ScenarioPublisher
        qualifiedName: SEAN.Situations.Scenario.ScenarioPublisher
      VB:
      - id: SEAN.Situations.Scenario.ScenarioPublisher
        name: ScenarioPublisher
        nameWithType: ScenarioPublisher
        qualifiedName: SEAN.Situations.Scenario.ScenarioPublisher
    isDefinition: true
    commentId: T:SEAN.Situations.Scenario.ScenarioPublisher
  SEAN.Situations.Scenario.GraphScenario.scenario_name*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.GraphScenario.scenario_name*
        name: scenario_name
        nameWithType: GraphScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.scenario_name
      VB:
      - id: SEAN.Situations.Scenario.GraphScenario.scenario_name*
        name: scenario_name
        nameWithType: GraphScenario.scenario_name
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.scenario_name
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.GraphScenario.scenario_name
  SEAN.Situations.Scenario.GraphScenario.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.GraphScenario.Start*
        name: Start
        nameWithType: GraphScenario.Start
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.Start
      VB:
      - id: SEAN.Situations.Scenario.GraphScenario.Start*
        name: Start
        nameWithType: GraphScenario.Start
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.GraphScenario.Start
  SEAN.Situations.Scenario.GraphScenario.groups*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.GraphScenario.groups*
        name: groups
        nameWithType: GraphScenario.groups
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.groups
      VB:
      - id: SEAN.Situations.Scenario.GraphScenario.groups*
        name: groups
        nameWithType: GraphScenario.groups
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.groups
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.GraphScenario.groups
  SEAN.Situations.Scenario.GraphScenario.agents*:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.GraphScenario.agents*
        name: agents
        nameWithType: GraphScenario.agents
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.agents
      VB:
      - id: SEAN.Situations.Scenario.GraphScenario.agents*
        name: agents
        nameWithType: GraphScenario.agents
        qualifiedName: SEAN.Situations.Scenario.GraphScenario.agents
    isDefinition: true
    commentId: Overload:SEAN.Situations.Scenario.GraphScenario.agents
  SEAN.Situations.Scenario.GraphScenario:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.GraphScenario
        name: GraphScenario
        nameWithType: GraphScenario
        qualifiedName: SEAN.Situations.Scenario.GraphScenario
      VB:
      - id: SEAN.Situations.Scenario.GraphScenario
        name: GraphScenario
        nameWithType: GraphScenario
        qualifiedName: SEAN.Situations.Scenario.GraphScenario
    isDefinition: true
    commentId: T:SEAN.Situations.Scenario.GraphScenario
  SEAN.Situations.Scenario.AgentPublisher:
    name:
      CSharp:
      - id: SEAN.Situations.Scenario.AgentPublisher
        name: AgentPublisher
        nameWithType: AgentPublisher
        qualifiedName: SEAN.Situations.Scenario.AgentPublisher
      VB:
      - id: SEAN.Situations.Scenario.AgentPublisher
        name: AgentPublisher
        nameWithType: AgentPublisher
        qualifiedName: SEAN.Situations.Scenario.AgentPublisher
    isDefinition: true
    commentId: T:SEAN.Situations.Scenario.AgentPublisher
  SEAN.Situations.Trajectory.TrackedAgent.trajectory*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedAgent.trajectory*
        name: trajectory
        nameWithType: TrackedAgent.trajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.trajectory
      VB:
      - id: SEAN.Situations.Trajectory.TrackedAgent.trajectory*
        name: trajectory
        nameWithType: TrackedAgent.trajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.trajectory
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedAgent.trajectory
  SEAN.Situations.Trajectory.TrackedAgent.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedAgent.Start*
        name: Start
        nameWithType: TrackedAgent.Start
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.Start
      VB:
      - id: SEAN.Situations.Trajectory.TrackedAgent.Start*
        name: Start
        nameWithType: TrackedAgent.Start
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedAgent.Start
  SEAN.Situations.Trajectory.TrackedGroup.radius*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup.radius*
        name: radius
        nameWithType: TrackedGroup.radius
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.radius
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup.radius*
        name: radius
        nameWithType: TrackedGroup.radius
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.radius
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedGroup.radius
  SEAN.Situations.Trajectory.TrackedGroup.center*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup.center*
        name: center
        nameWithType: TrackedGroup.center
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.center
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup.center*
        name: center
        nameWithType: TrackedGroup.center
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.center
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedGroup.center
  SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach*
        name: GetOrAttach
        nameWithType: TrackedGroup.GetOrAttach
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach*
        name: GetOrAttach
        nameWithType: TrackedGroup.GetOrAttach
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedGroup.GetOrAttach
  System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedTrajectory}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SEAN.Situations.Trajectory.TrackedTrajectory
        name: TrackedTrajectory
        nameWithType: TrackedTrajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SEAN.Situations.Trajectory.TrackedTrajectory
        name: TrackedTrajectory
        nameWithType: TrackedTrajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedTrajectory}
  SEAN.Situations.Trajectory.TrackedGroup.GroupMembers*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers*
        name: GroupMembers
        nameWithType: TrackedGroup.GroupMembers
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers*
        name: GroupMembers
        nameWithType: TrackedGroup.GroupMembers
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.GroupMembers
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedGroup.GroupMembers
  SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator*
        name: GroupMemberLocationGenerator
        nameWithType: TrackedGroup.GroupMemberLocationGenerator
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator*
        name: GroupMemberLocationGenerator
        nameWithType: TrackedGroup.GroupMemberLocationGenerator
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedGroup.GroupMemberLocationGenerator
  SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform*
        name: ContainsTransform
        nameWithType: TrackedGroup.ContainsTransform
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform
      VB:
      - id: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform*
        name: ContainsTransform
        nameWithType: TrackedGroup.ContainsTransform
        qualifiedName: SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedGroup.ContainsTransform
  SEAN.Util.PoseStamped[]:
    name:
      CSharp:
      - id: SEAN.Util.PoseStamped
        name: PoseStamped
        nameWithType: PoseStamped
        qualifiedName: SEAN.Util.PoseStamped
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: SEAN.Util.PoseStamped
        name: PoseStamped
        nameWithType: PoseStamped
        qualifiedName: SEAN.Util.PoseStamped
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  SEAN.Situations.Trajectory.LinearTrajectory.poses*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.poses*
        name: poses
        nameWithType: LinearTrajectory.poses
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.poses
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.poses*
        name: poses
        nameWithType: LinearTrajectory.poses
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.poses
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.LinearTrajectory.poses
  SEAN.Situations.Trajectory.LinearTrajectory.hasPoses*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses*
        name: hasPoses
        nameWithType: LinearTrajectory.hasPoses
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses*
        name: hasPoses
        nameWithType: LinearTrajectory.hasPoses
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.hasPoses
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.LinearTrajectory.hasPoses
  SEAN.Situations.Trajectory.LinearTrajectory.velocity*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.velocity*
        name: velocity
        nameWithType: LinearTrajectory.velocity
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.velocity
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.velocity*
        name: velocity
        nameWithType: LinearTrajectory.velocity
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.velocity
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.LinearTrajectory.velocity
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  SEAN.Situations.Trajectory.LinearTrajectory.vector*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.vector*
        name: vector
        nameWithType: LinearTrajectory.vector
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.vector
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.vector*
        name: vector
        nameWithType: LinearTrajectory.vector
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.vector
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.LinearTrajectory.vector
  SEAN.Situations.Trajectory.LinearTrajectory.position*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.position*
        name: position
        nameWithType: LinearTrajectory.position
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.position
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.position*
        name: position
        nameWithType: LinearTrajectory.position
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.position
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.LinearTrajectory.position
  SEAN.Situations.Trajectory.LinearTrajectory.#ctor*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.#ctor*
        name: LinearTrajectory
        nameWithType: LinearTrajectory.LinearTrajectory
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.LinearTrajectory
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.#ctor*
        name: LinearTrajectory
        nameWithType: LinearTrajectory.LinearTrajectory
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.LinearTrajectory
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.LinearTrajectory.#ctor
  SEAN.Situations.Trajectory.LinearTrajectory.Add*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.Add*
        name: Add
        nameWithType: LinearTrajectory.Add
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.Add
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory.Add*
        name: Add
        nameWithType: LinearTrajectory.Add
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory.Add
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.LinearTrajectory.Add
  SEAN.Situations.Trajectory.LinearTrajectory:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.LinearTrajectory
        name: LinearTrajectory
        nameWithType: LinearTrajectory
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory
      VB:
      - id: SEAN.Situations.Trajectory.LinearTrajectory
        name: LinearTrajectory
        nameWithType: LinearTrajectory
        qualifiedName: SEAN.Situations.Trajectory.LinearTrajectory
    isDefinition: true
    parent: SEAN.Situations.Trajectory
    commentId: T:SEAN.Situations.Trajectory.LinearTrajectory
  SEAN.Situations.Trajectory.TrackedTrajectory.trajectory*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory*
        name: trajectory
        nameWithType: TrackedTrajectory.trajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory*
        name: trajectory
        nameWithType: TrackedTrajectory.trajectory
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.trajectory
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.trajectory
  SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject*
        name: mainGameObject
        nameWithType: TrackedTrajectory.mainGameObject
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject*
        name: mainGameObject
        nameWithType: TrackedTrajectory.mainGameObject
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.mainGameObject
  SEAN.Situations.Trajectory.TrackedTrajectory.position*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.position*
        name: position
        nameWithType: TrackedTrajectory.position
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.position
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.position*
        name: position
        nameWithType: TrackedTrajectory.position
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.position
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.position
  SEAN.Situations.Trajectory.TrackedTrajectory.orientation*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.orientation*
        name: orientation
        nameWithType: TrackedTrajectory.orientation
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.orientation
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.orientation*
        name: orientation
        nameWithType: TrackedTrajectory.orientation
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.orientation
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.orientation
  SEAN.Situations.Trajectory.TrackedTrajectory.velocity*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.velocity*
        name: velocity
        nameWithType: TrackedTrajectory.velocity
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.velocity
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.velocity*
        name: velocity
        nameWithType: TrackedTrajectory.velocity
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.velocity
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.velocity
  SEAN.Situations.Trajectory.TrackedTrajectory.vector*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.vector*
        name: vector
        nameWithType: TrackedTrajectory.vector
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.vector
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.vector*
        name: vector
        nameWithType: TrackedTrajectory.vector
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.vector
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.vector
  SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt*
        name: lookingAt
        nameWithType: TrackedTrajectory.lookingAt
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt*
        name: lookingAt
        nameWithType: TrackedTrajectory.lookingAt
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.lookingAt
  SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards*
        name: movingTowards
        nameWithType: TrackedTrajectory.movingTowards
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards*
        name: movingTowards
        nameWithType: TrackedTrajectory.movingTowards
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.movingTowards
  System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedAgent}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SEAN.Situations.Trajectory.TrackedAgent
        name: TrackedAgent
        nameWithType: TrackedAgent
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SEAN.Situations.Trajectory.TrackedAgent
        name: TrackedAgent
        nameWithType: TrackedAgent
        qualifiedName: SEAN.Situations.Trajectory.TrackedAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SEAN.Situations.Trajectory.TrackedAgent}
  SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents*
        name: nearbyAgents
        nameWithType: TrackedTrajectory.nearbyAgents
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents*
        name: nearbyAgents
        nameWithType: TrackedTrajectory.nearbyAgents
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.nearbyAgents
  SEAN.Situations.Trajectory.TrackedTrajectory.Angle*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.Angle*
        name: Angle
        nameWithType: TrackedTrajectory.Angle
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.Angle
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.Angle*
        name: Angle
        nameWithType: TrackedTrajectory.Angle
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.Angle
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.Angle
  SEAN.Situations.Trajectory.TrackedTrajectory.Start*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.Start*
        name: Start
        nameWithType: TrackedTrajectory.Start
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.Start
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.Start*
        name: Start
        nameWithType: TrackedTrajectory.Start
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.Start
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.Start
  SEAN.Situations.Trajectory.TrackedTrajectory.Update*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.Update*
        name: Update
        nameWithType: TrackedTrajectory.Update
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.Update
      VB:
      - id: SEAN.Situations.Trajectory.TrackedTrajectory.Update*
        name: Update
        nameWithType: TrackedTrajectory.Update
        qualifiedName: SEAN.Situations.Trajectory.TrackedTrajectory.Update
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.TrackedTrajectory.Update
  SEAN.Situations.Trajectory.ITrackedGroup.group*:
    name:
      CSharp:
      - id: SEAN.Situations.Trajectory.ITrackedGroup.group*
        name: group
        nameWithType: ITrackedGroup.group
        qualifiedName: SEAN.Situations.Trajectory.ITrackedGroup.group
      VB:
      - id: SEAN.Situations.Trajectory.ITrackedGroup.group*
        name: group
        nameWithType: ITrackedGroup.group
        qualifiedName: SEAN.Situations.Trajectory.ITrackedGroup.group
    isDefinition: true
    commentId: Overload:SEAN.Situations.Trajectory.ITrackedGroup.group
  SEAN.Environment.Environment.name*:
    name:
      CSharp:
      - id: SEAN.Environment.Environment.name*
        name: name
        nameWithType: Environment.name
        qualifiedName: SEAN.Environment.Environment.name
      VB:
      - id: SEAN.Environment.Environment.name*
        name: name
        nameWithType: Environment.name
        qualifiedName: SEAN.Environment.Environment.name
    isDefinition: true
    commentId: Overload:SEAN.Environment.Environment.name
  SEAN.Environment.Environment.Start*:
    name:
      CSharp:
      - id: SEAN.Environment.Environment.Start*
        name: Start
        nameWithType: Environment.Start
        qualifiedName: SEAN.Environment.Environment.Start
      VB:
      - id: SEAN.Environment.Environment.Start*
        name: Start
        nameWithType: Environment.Start
        qualifiedName: SEAN.Environment.Environment.Start
    isDefinition: true
    commentId: Overload:SEAN.Environment.Environment.Start
  Global.Color:
    name:
      CSharp:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Global.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Global.Material:
    name:
      CSharp:
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      VB:
      - id: Global.Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
    isDefinition: true
  SEAN.Display.PlanVisualizer:
    name:
      CSharp:
      - id: SEAN.Display.PlanVisualizer
        name: PlanVisualizer
        nameWithType: PlanVisualizer
        qualifiedName: SEAN.Display.PlanVisualizer
      VB:
      - id: SEAN.Display.PlanVisualizer
        name: PlanVisualizer
        nameWithType: PlanVisualizer
        qualifiedName: SEAN.Display.PlanVisualizer
    isDefinition: true
    commentId: T:SEAN.Display.PlanVisualizer
  SEAN.Display.FPSDisplay:
    name:
      CSharp:
      - id: SEAN.Display.FPSDisplay
        name: FPSDisplay
        nameWithType: FPSDisplay
        qualifiedName: SEAN.Display.FPSDisplay
      VB:
      - id: SEAN.Display.FPSDisplay
        name: FPSDisplay
        nameWithType: FPSDisplay
        qualifiedName: SEAN.Display.FPSDisplay
    isDefinition: true
    commentId: T:SEAN.Display.FPSDisplay
  SEAN.Display.DisableRosPanel:
    name:
      CSharp:
      - id: SEAN.Display.DisableRosPanel
        name: DisableRosPanel
        nameWithType: DisableRosPanel
        qualifiedName: SEAN.Display.DisableRosPanel
      VB:
      - id: SEAN.Display.DisableRosPanel
        name: DisableRosPanel
        nameWithType: DisableRosPanel
        qualifiedName: SEAN.Display.DisableRosPanel
    isDefinition: true
    commentId: T:SEAN.Display.DisableRosPanel
  SEAN.Display:
    name:
      CSharp:
      - name: SEAN.Display
        nameWithType: SEAN.Display
        qualifiedName: SEAN.Display
      VB:
      - name: SEAN.Display
        nameWithType: SEAN.Display
        qualifiedName: SEAN.Display
    isDefinition: true
    commentId: N:SEAN.Display
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial*
        name: TemplateMaterial
        nameWithType: VolumetricLineStripBehavior.TemplateMaterial
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial*
        name: TemplateMaterial
        nameWithType: VolumetricLineStripBehavior.TemplateMaterial
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.TemplateMaterial
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties*
        name: DoNotOverwriteTemplateMaterialProperties
        nameWithType: VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties*
        name: DoNotOverwriteTemplateMaterialProperties
        nameWithType: VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.DoNotOverwriteTemplateMaterialProperties
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor*
        name: LineColor
        nameWithType: VolumetricLineStripBehavior.LineColor
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor*
        name: LineColor
        nameWithType: VolumetricLineStripBehavior.LineColor
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineColor
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth*
        name: LineWidth
        nameWithType: VolumetricLineStripBehavior.LineWidth
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth*
        name: LineWidth
        nameWithType: VolumetricLineStripBehavior.LineWidth
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineWidth
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor*
        name: LightSaberFactor
        nameWithType: VolumetricLineStripBehavior.LightSaberFactor
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor*
        name: LightSaberFactor
        nameWithType: VolumetricLineStripBehavior.LightSaberFactor
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LightSaberFactor
  Global.Vector3[]:
    name:
      CSharp:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices*
        name: LineVertices
        nameWithType: VolumetricLineStripBehavior.LineVertices
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices*
        name: LineVertices
        nameWithType: VolumetricLineStripBehavior.LineVertices
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.LineVertices
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale*
        name: UpdateLineScale
        nameWithType: VolumetricLineStripBehavior.UpdateLineScale
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale*
        name: UpdateLineScale
        nameWithType: VolumetricLineStripBehavior.UpdateLineScale
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineScale
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds*
        name: UpdateBounds
        nameWithType: VolumetricLineStripBehavior.UpdateBounds
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds*
        name: UpdateBounds
        nameWithType: VolumetricLineStripBehavior.UpdateBounds
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateBounds
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices*:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices*
        name: UpdateLineVertices
        nameWithType: VolumetricLineStripBehavior.UpdateLineVertices
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices*
        name: UpdateLineVertices
        nameWithType: VolumetricLineStripBehavior.UpdateLineVertices
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices
    isDefinition: true
    commentId: Overload:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior.UpdateLineVertices
  SEAN.Display.VolumetricLine.VolumetricLineStripBehavior:
    name:
      CSharp:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
        name: VolumetricLineStripBehavior
        nameWithType: VolumetricLineStripBehavior
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
      VB:
      - id: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
        name: VolumetricLineStripBehavior
        nameWithType: VolumetricLineStripBehavior
        qualifiedName: SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
    isDefinition: true
    commentId: T:SEAN.Display.VolumetricLine.VolumetricLineStripBehavior
  SEAN.Display.VolumetricLine:
    name:
      CSharp:
      - name: SEAN.Display.VolumetricLine
        nameWithType: SEAN.Display.VolumetricLine
        qualifiedName: SEAN.Display.VolumetricLine
      VB:
      - name: SEAN.Display.VolumetricLine
        nameWithType: SEAN.Display.VolumetricLine
        qualifiedName: SEAN.Display.VolumetricLine
    isDefinition: true
    commentId: N:SEAN.Display.VolumetricLine
  SEAN.TF.OdometryPublisher:
    name:
      CSharp:
      - id: SEAN.TF.OdometryPublisher
        name: OdometryPublisher
        nameWithType: OdometryPublisher
        qualifiedName: SEAN.TF.OdometryPublisher
      VB:
      - id: SEAN.TF.OdometryPublisher
        name: OdometryPublisher
        nameWithType: OdometryPublisher
        qualifiedName: SEAN.TF.OdometryPublisher
    isDefinition: true
    commentId: T:SEAN.TF.OdometryPublisher
  SEAN.TF:
    name:
      CSharp:
      - name: SEAN.TF
        nameWithType: SEAN.TF
        qualifiedName: SEAN.TF
      VB:
      - name: SEAN.TF
        nameWithType: SEAN.TF
        qualifiedName: SEAN.TF
    isDefinition: true
    commentId: N:SEAN.TF
  SEAN.TF.BaseTransformPublisher:
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher
        name: BaseTransformPublisher
        nameWithType: BaseTransformPublisher
        qualifiedName: SEAN.TF.BaseTransformPublisher
      VB:
      - id: SEAN.TF.BaseTransformPublisher
        name: BaseTransformPublisher
        nameWithType: BaseTransformPublisher
        qualifiedName: SEAN.TF.BaseTransformPublisher
    isDefinition: true
    parent: SEAN.TF
    commentId: T:SEAN.TF.BaseTransformPublisher
  SEAN.TF.BaseTransformPublisher.Start:
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher.Start
        name: Start
        nameWithType: BaseTransformPublisher.Start
        qualifiedName: SEAN.TF.BaseTransformPublisher.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.TF.BaseTransformPublisher.Start
        name: Start
        nameWithType: BaseTransformPublisher.Start
        qualifiedName: SEAN.TF.BaseTransformPublisher.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.TF.BaseTransformPublisher
    commentId: M:SEAN.TF.BaseTransformPublisher.Start
  SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform):
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
        name: PublishIfNew
        nameWithType: BaseTransformPublisher.PublishIfNew
        qualifiedName: SEAN.TF.BaseTransformPublisher.PublishIfNew
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
        name: PublishIfNew
        nameWithType: BaseTransformPublisher.PublishIfNew
        qualifiedName: SEAN.TF.BaseTransformPublisher.PublishIfNew
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.TF.BaseTransformPublisher
    commentId: M:SEAN.TF.BaseTransformPublisher.PublishIfNew(SEAN.TF.BaseTransformPublisher.NamedTransform)
  SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform}):
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform})
        name: PublishIfNew
        nameWithType: BaseTransformPublisher.PublishIfNew
        qualifiedName: SEAN.TF.BaseTransformPublisher.PublishIfNew
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform})
        name: PublishIfNew
        nameWithType: BaseTransformPublisher.PublishIfNew
        qualifiedName: SEAN.TF.BaseTransformPublisher.PublishIfNew
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.TF.BaseTransformPublisher
    commentId: M:SEAN.TF.BaseTransformPublisher.PublishIfNew(System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform})
  SEAN.TF.WorldTransformPublishers:
    name:
      CSharp:
      - id: SEAN.TF.WorldTransformPublishers
        name: WorldTransformPublishers
        nameWithType: WorldTransformPublishers
        qualifiedName: SEAN.TF.WorldTransformPublishers
      VB:
      - id: SEAN.TF.WorldTransformPublishers
        name: WorldTransformPublishers
        nameWithType: WorldTransformPublishers
        qualifiedName: SEAN.TF.WorldTransformPublishers
    isDefinition: true
    commentId: T:SEAN.TF.WorldTransformPublishers
  SEAN.TF.RelativeTransformPublisher:
    name:
      CSharp:
      - id: SEAN.TF.RelativeTransformPublisher
        name: RelativeTransformPublisher
        nameWithType: RelativeTransformPublisher
        qualifiedName: SEAN.TF.RelativeTransformPublisher
      VB:
      - id: SEAN.TF.RelativeTransformPublisher
        name: RelativeTransformPublisher
        nameWithType: RelativeTransformPublisher
        qualifiedName: SEAN.TF.RelativeTransformPublisher
    isDefinition: true
    commentId: T:SEAN.TF.RelativeTransformPublisher
  SEAN.TF.BaseTransformPublisher.Start*:
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher.Start*
        name: Start
        nameWithType: BaseTransformPublisher.Start
        qualifiedName: SEAN.TF.BaseTransformPublisher.Start
      VB:
      - id: SEAN.TF.BaseTransformPublisher.Start*
        name: Start
        nameWithType: BaseTransformPublisher.Start
        qualifiedName: SEAN.TF.BaseTransformPublisher.Start
    isDefinition: true
    commentId: Overload:SEAN.TF.BaseTransformPublisher.Start
  SEAN.TF.BaseTransformPublisher.NamedTransform:
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
      VB:
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
    isDefinition: true
    parent: SEAN.TF
    commentId: T:SEAN.TF.BaseTransformPublisher.NamedTransform
  SEAN.TF.BaseTransformPublisher.PublishIfNew*:
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher.PublishIfNew*
        name: PublishIfNew
        nameWithType: BaseTransformPublisher.PublishIfNew
        qualifiedName: SEAN.TF.BaseTransformPublisher.PublishIfNew
      VB:
      - id: SEAN.TF.BaseTransformPublisher.PublishIfNew*
        name: PublishIfNew
        nameWithType: BaseTransformPublisher.PublishIfNew
        qualifiedName: SEAN.TF.BaseTransformPublisher.PublishIfNew
    isDefinition: true
    commentId: Overload:SEAN.TF.BaseTransformPublisher.PublishIfNew
  System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform
        name: BaseTransformPublisher.NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{SEAN.TF.BaseTransformPublisher.NamedTransform}
  RosMessageTypes.Geometry.MPoseStamped:
    name:
      CSharp:
      - id: RosMessageTypes.Geometry.MPoseStamped
        name: Geometry.MPoseStamped
        nameWithType: Geometry.MPoseStamped
        qualifiedName: RosMessageTypes.Geometry.MPoseStamped
        isExternal: true
      VB:
      - id: RosMessageTypes.Geometry.MPoseStamped
        name: Geometry.MPoseStamped
        nameWithType: Geometry.MPoseStamped
        qualifiedName: RosMessageTypes.Geometry.MPoseStamped
        isExternal: true
    isDefinition: true
  SEAN.TF.BaseTransformPublisher.NamedTransform.#ctor*:
    name:
      CSharp:
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform.#ctor*
        name: NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform.NamedTransform
      VB:
      - id: SEAN.TF.BaseTransformPublisher.NamedTransform.#ctor*
        name: NamedTransform
        nameWithType: BaseTransformPublisher.NamedTransform.NamedTransform
        qualifiedName: SEAN.TF.BaseTransformPublisher.NamedTransform.NamedTransform
    isDefinition: true
    commentId: Overload:SEAN.TF.BaseTransformPublisher.NamedTransform.#ctor
  SEAN.Control.A1PlaybackController:
    name:
      CSharp:
      - id: SEAN.Control.A1PlaybackController
        name: A1PlaybackController
        nameWithType: A1PlaybackController
        qualifiedName: SEAN.Control.A1PlaybackController
      VB:
      - id: SEAN.Control.A1PlaybackController
        name: A1PlaybackController
        nameWithType: A1PlaybackController
        qualifiedName: SEAN.Control.A1PlaybackController
    isDefinition: true
    commentId: T:SEAN.Control.A1PlaybackController
  Global.WheelCollider:
    name:
      CSharp:
      - id: Global.WheelCollider
        name: WheelCollider
        nameWithType: WheelCollider
        qualifiedName: WheelCollider
        isExternal: true
      VB:
      - id: Global.WheelCollider
        name: WheelCollider
        nameWithType: WheelCollider
        qualifiedName: WheelCollider
        isExternal: true
    isDefinition: true
    commentId: '!:Global.WheelCollider'
  SEAN.Control.MotorController.ApplyLocalPositionToVisuals*:
    name:
      CSharp:
      - id: SEAN.Control.MotorController.ApplyLocalPositionToVisuals*
        name: ApplyLocalPositionToVisuals
        nameWithType: MotorController.ApplyLocalPositionToVisuals
        qualifiedName: SEAN.Control.MotorController.ApplyLocalPositionToVisuals
      VB:
      - id: SEAN.Control.MotorController.ApplyLocalPositionToVisuals*
        name: ApplyLocalPositionToVisuals
        nameWithType: MotorController.ApplyLocalPositionToVisuals
        qualifiedName: SEAN.Control.MotorController.ApplyLocalPositionToVisuals
    isDefinition: true
    commentId: Overload:SEAN.Control.MotorController.ApplyLocalPositionToVisuals
  SEAN.Control.MotorController.StopMotor*:
    name:
      CSharp:
      - id: SEAN.Control.MotorController.StopMotor*
        name: StopMotor
        nameWithType: MotorController.StopMotor
        qualifiedName: SEAN.Control.MotorController.StopMotor
      VB:
      - id: SEAN.Control.MotorController.StopMotor*
        name: StopMotor
        nameWithType: MotorController.StopMotor
        qualifiedName: SEAN.Control.MotorController.StopMotor
    isDefinition: true
    commentId: Overload:SEAN.Control.MotorController.StopMotor
  SEAN.Control.MotorController:
    name:
      CSharp:
      - id: SEAN.Control.MotorController
        name: MotorController
        nameWithType: MotorController
        qualifiedName: SEAN.Control.MotorController
      VB:
      - id: SEAN.Control.MotorController
        name: MotorController
        nameWithType: MotorController
        qualifiedName: SEAN.Control.MotorController
    isDefinition: true
    commentId: T:SEAN.Control.MotorController
  SEAN.Control.ControlSubscriber.Start*:
    name:
      CSharp:
      - id: SEAN.Control.ControlSubscriber.Start*
        name: Start
        nameWithType: ControlSubscriber.Start
        qualifiedName: SEAN.Control.ControlSubscriber.Start
      VB:
      - id: SEAN.Control.ControlSubscriber.Start*
        name: Start
        nameWithType: ControlSubscriber.Start
        qualifiedName: SEAN.Control.ControlSubscriber.Start
    isDefinition: true
    commentId: Overload:SEAN.Control.ControlSubscriber.Start
  SEAN.Control.ControlSubscriber.CmdVelMessage*:
    name:
      CSharp:
      - id: SEAN.Control.ControlSubscriber.CmdVelMessage*
        name: CmdVelMessage
        nameWithType: ControlSubscriber.CmdVelMessage
        qualifiedName: SEAN.Control.ControlSubscriber.CmdVelMessage
      VB:
      - id: SEAN.Control.ControlSubscriber.CmdVelMessage*
        name: CmdVelMessage
        nameWithType: ControlSubscriber.CmdVelMessage
        qualifiedName: SEAN.Control.ControlSubscriber.CmdVelMessage
    isDefinition: true
    commentId: Overload:SEAN.Control.ControlSubscriber.CmdVelMessage
  SEAN.Control.ControlSubscriber.ros:
    name:
      CSharp:
      - id: SEAN.Control.ControlSubscriber.ros
        name: ros
        nameWithType: ControlSubscriber.ros
        qualifiedName: SEAN.Control.ControlSubscriber.ros
      VB:
      - id: SEAN.Control.ControlSubscriber.ros
        name: ros
        nameWithType: ControlSubscriber.ros
        qualifiedName: SEAN.Control.ControlSubscriber.ros
    isDefinition: true
    parent: SEAN.Control.ControlSubscriber
    commentId: F:SEAN.Control.ControlSubscriber.ros
  SEAN.Control.ControlSubscriber.sean:
    name:
      CSharp:
      - id: SEAN.Control.ControlSubscriber.sean
        name: sean
        nameWithType: ControlSubscriber.sean
        qualifiedName: SEAN.Control.ControlSubscriber.sean
      VB:
      - id: SEAN.Control.ControlSubscriber.sean
        name: sean
        nameWithType: ControlSubscriber.sean
        qualifiedName: SEAN.Control.ControlSubscriber.sean
    isDefinition: true
    parent: SEAN.Control.ControlSubscriber
    commentId: F:SEAN.Control.ControlSubscriber.sean
  SEAN.Control.ControlSubscriber.Topic:
    name:
      CSharp:
      - id: SEAN.Control.ControlSubscriber.Topic
        name: Topic
        nameWithType: ControlSubscriber.Topic
        qualifiedName: SEAN.Control.ControlSubscriber.Topic
      VB:
      - id: SEAN.Control.ControlSubscriber.Topic
        name: Topic
        nameWithType: ControlSubscriber.Topic
        qualifiedName: SEAN.Control.ControlSubscriber.Topic
    isDefinition: true
    parent: SEAN.Control.ControlSubscriber
    commentId: F:SEAN.Control.ControlSubscriber.Topic
  SEAN.Control.VelocityController.Start*:
    name:
      CSharp:
      - id: SEAN.Control.VelocityController.Start*
        name: Start
        nameWithType: VelocityController.Start
        qualifiedName: SEAN.Control.VelocityController.Start
      VB:
      - id: SEAN.Control.VelocityController.Start*
        name: Start
        nameWithType: VelocityController.Start
        qualifiedName: SEAN.Control.VelocityController.Start
    isDefinition: true
    commentId: Overload:SEAN.Control.VelocityController.Start
  SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist):
    name:
      CSharp:
      - id: SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
        name: CmdVelMessage
        nameWithType: ControlSubscriber.CmdVelMessage
        qualifiedName: SEAN.Control.ControlSubscriber.CmdVelMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RosMessageTypes.Geometry.MTwist
        name: Geometry.MTwist
        nameWithType: Geometry.MTwist
        qualifiedName: RosMessageTypes.Geometry.MTwist
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
        name: CmdVelMessage
        nameWithType: ControlSubscriber.CmdVelMessage
        qualifiedName: SEAN.Control.ControlSubscriber.CmdVelMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: RosMessageTypes.Geometry.MTwist
        name: Geometry.MTwist
        nameWithType: Geometry.MTwist
        qualifiedName: RosMessageTypes.Geometry.MTwist
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: SEAN.Control.ControlSubscriber
    commentId: M:SEAN.Control.ControlSubscriber.CmdVelMessage(RosMessageTypes.Geometry.MTwist)
  SEAN.Control.VelocityController.CmdVelMessage*:
    name:
      CSharp:
      - id: SEAN.Control.VelocityController.CmdVelMessage*
        name: CmdVelMessage
        nameWithType: VelocityController.CmdVelMessage
        qualifiedName: SEAN.Control.VelocityController.CmdVelMessage
      VB:
      - id: SEAN.Control.VelocityController.CmdVelMessage*
        name: CmdVelMessage
        nameWithType: VelocityController.CmdVelMessage
        qualifiedName: SEAN.Control.VelocityController.CmdVelMessage
    isDefinition: true
    commentId: Overload:SEAN.Control.VelocityController.CmdVelMessage
  SEAN.Control.VelocityController:
    name:
      CSharp:
      - id: SEAN.Control.VelocityController
        name: VelocityController
        nameWithType: VelocityController
        qualifiedName: SEAN.Control.VelocityController
      VB:
      - id: SEAN.Control.VelocityController
        name: VelocityController
        nameWithType: VelocityController
        qualifiedName: SEAN.Control.VelocityController
    isDefinition: true
    commentId: T:SEAN.Control.VelocityController
