/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

using Newtonsoft.Json;

using RosSharp.RosBridgeClient.MessageTypes.Std;

namespace RosSharp.RosBridgeClient.MessageTypes.SocialSimRos
{
    public class TrialInfo : Message
    {
        [JsonIgnore]
        public const string RosMessageName = "social_sim_ros/TrialInfo";

        //  Message containing the information of running a single A-B navigation trial
        public Header header;
        public string trial_name;
        //  Which trial name are we running
        public ushort trial_number;
        //  Which trial number are we running
        public double dist_to_target;
        //  Distance to target at the end of the trial
        public double dist_to_ped;
        //  Minimum distance to any pedestrian throughout the trial
        public uint num_collisions;
        //  Number of times that the robot collided with any object
        public bool run_complete;
        //  True if the trial run is complete, false if terminated because of timeout
        public double time_elapsed;
        //  Time elapsed since the start of the trial (in seconds)

        public TrialInfo()
        {
            this.header = new Header();
            this.trial_name = "";
            this.trial_number = 0;
            this.dist_to_target = 0.0;
            this.dist_to_ped = 0.0;
            this.num_collisions = 0;
            this.run_complete = false;
            this.time_elapsed = 0.0;
        }

        public TrialInfo(Header header, string trial_name, ushort trial_number, double dist_to_target, double dist_to_ped, uint num_collisions, bool run_complete, double time_elapsed)
        {
            this.header = header;
            this.trial_name = trial_name;
            this.trial_number = trial_number;
            this.dist_to_target = dist_to_target;
            this.dist_to_ped = dist_to_ped;
            this.num_collisions = num_collisions;
            this.run_complete = run_complete;
            this.time_elapsed = time_elapsed;
        }
    }
}
